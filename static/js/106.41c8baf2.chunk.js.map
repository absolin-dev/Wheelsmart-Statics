{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/pages/MastersDashboard/city/addCity.jsx","view/pages/MastersDashboard/city/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","city","mini","selectedData","rowdata","model","miniDistrictList","cityAdd","isModelVisible","InputChangeValue","getMiniDistrict","Form","useForm","form","useEffect","Option","Select","handleResetInputValues","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","setFieldsValue","name","district_id","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","handleAdd","cityToUpdate","district","handleUpdate","Item","label","rules","required","message","showSearch","filterOption","input","option","children","toLowerCase","includes","placeholder","optionFilterProp","onChange","value","key","map","index","hasFeedback","style","e","target","system","citieslist","noofpages","listCount","cityParams","loading","userAccessList","getCities","cityEdit","cityDelete","SetCityParams","page","search","page_size","Search","Input","columnClass","columns","dataIndex","filterSearch","render","row","country","filterMode","state","record","indexOf","cursor","color","placement","onConfirm","okText","cancelText","data","districtname","gutter","isModalVisible","xs","sm","md","allowClear","onSearch","val","tip","spinning","delay","dataSource","scroll","x","pagination","current","pageSize","total","showTotal","showSizeChanger"],"mappings":"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","file":"static/js/106.41c8baf2.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  cityAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/City/citySlice\";\nimport { getMiniDistrict } from \"../../../../store/mini/miniSlice\";\n\n\nconst AddCity = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniDistrict()\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const { Option } = Select;\n  const onChange = (value) => {\n    props.InputChangeValue({\n      key: \"district_id\",\n      value: value,\n    })\n  };\n  // Adds New District\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      district_id: props.selectedData?.district_id,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.cityAdd(obj);\n    }\n  };\n  // Updates Districts in Store\n  const handleUpdate = () => {\n    const cityToUpdate = {\n      id: props.selectedData.id,\n      district_id: props.selectedData?.district_id == null ? props.selectedData.district.id : props.selectedData?.district_id,\n      name: props.selectedData?.name,\n    };\n    props.cityAdd(cityToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      City\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      district_id: props.selectedData.district_id\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"District Name:\"\n          name=\"district_id\"\n          rules={[\n            { required: true, message: \"Please select your District Name!\" },\n          ]}>\n          <Select\n            showSearch\n            filterOption={(input, option) =>\n              option.children.toLowerCase().includes(input.toLowerCase())\n            }\n            placeholder=\"Select  District\"\n            optionFilterProp=\"children\"\n            onChange={onChange}\n            value={\n              props.selectedData.district_id == null\n                ? \"\"\n                : props.selectedData?.district_id\n            }\n          >\n            {props.miniDistrictList.map((district, index) => {\n\n              return (\n                <Option key={index} value={district.id}>\n                  {district.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n\n        <Form.Item label=\"City Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your City Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"City\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"City Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ city, mini }) {\n  return {\n    selectedData: city.rowdata,\n    model: city.model,\n    miniDistrictList: mini.miniDistrictList\n  };\n}\n\nexport default connect(mapStateToProps, {\n  cityAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniDistrict,\n})(AddCity);\n","import React, { useEffect, useState } from \"react\";\n\nimport { Row, Col, Input, Card, Pagination, Spin, Popconfirm } from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\n\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport AddCity from \"./addCity\";\nimport { getMiniDistrict } from \"../../../../store/mini/miniSlice\";\n\nimport {\n  getCities,\n  cityEdit,\n  cityDelete,\n  isModelVisible,\n  SetCityParams,\n} from \"../../../../store/Masters/City/citySlice\";\n\nfunction City(props) {\n  useEffect(() => {\n    props.getCities({ page: 1, search: \"\", page_size: 10 });\n  }, []);\n  const { Search } = Input;\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"5%\",\n      // sorter: (a, b) => a.index - b.index,\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: \"15%\",\n    },\n    {\n      title: \"Country Name\",\n      render: (row) => <span className={columnClass}>{row.country?.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"15%\",\n    },\n    {\n      title: \"State Name\",\n      render: (row) => <span className={columnClass}>{row.state?.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"20%\",\n    },\n    {\n      title: \"District Name\",\n      render: (row) => <span className={columnClass}>{row.district?.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"20%\",\n    },\n    {\n      title: \"City Name\",\n      render: (row) => <span className={columnClass}>{row.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: \"20%\",\n    },\n   \n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: \"10%\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {props.userAccessList?.indexOf(\"Masters.change_city\") !== -1 && (\n          <i\n            className=\"ri-edit-box-line hp-mr-2 \"\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n            onClick={() => {\n              props.cityEdit(row);\n              props.getMiniDistrict({ state: row.state.id });\n              props.isModelVisible(true);\n            }}\n          ></i>\n          )}\n          {props.userAccessList?.indexOf(\"Masters.delete_city\") !== -1 && (\n            <Popconfirm\n              placement=\"topRight\"\n              title=\"Are you sure to delete this Record?\"\n              onConfirm={() => props.cityDelete(record.id)}\n              okText=\"Yes\"\n              cancelText=\"No\"\n              className=\"hp-ml-8\"\n              icon={\n                <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n              }\n            >\n              <i\n                className=\"ri-delete-bin-2-line \"\n                style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n              ></i>\n            </Popconfirm>\n          )}\n        </Space>\n      ),\n    },\n  ];\n\n  const data = props.citieslist.map((row, key) => ({\n    ...row,\n    index: (props.cityParams.page - 1) * props.cityParams.page_size + key + 1,\n    districtname: row.district.name,\n  }));\n\n  function onPageChange(page, pageSize) {\n    props.SetCityParams({\n      ...props.cityParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getCities({\n      ...props.cityParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.SetCityParams({ ...props.cityParams, search: val });\n    props.getCities({ ...props.cityParams, search: val });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"City Master\"\n        addModelTile={\n          props.userAccessList?.indexOf(\"Masters.add_city\") !== -1 &&\n          \"Add City\"\n        }\n        goBack={true}\n        setIsModalVisible={props.isModelVisible}\n        isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\">\n            <Col span={12} xs={24} sm={24} md={12} className=\"hp-mb-12\">\n              <Search\n                placeholder=\"Search...\"\n                allowClear\n                onChange={(e) => {\n                  if (e.target.value == \"\") {\n                    props.getCities({\n                      ...props.cityParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                    props.SetCityParams({\n                      ...props.cityParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                  }\n                }}\n                onSearch={(value) => {\n                  onSearch(value);\n                }}\n              />\n            </Col>\n\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 500 }}\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.cityParams?.page}\n                pageSize={props.cityParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <AddCity />\n    </Row>\n  );\n}\n\nfunction mapCityToProps({ city, system }) {\n  return {\n    citieslist: city.citieslist,\n    noofpages: city.noofpages,\n    listCount: city.listCount,\n    cityParams: city.cityParams,\n    loading: city.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapCityToProps, {\n  getCities,\n  cityEdit,\n  cityDelete,\n  isModelVisible,\n  SetCityParams,\n  getMiniDistrict,\n})(City);\n"],"sourceRoot":""}