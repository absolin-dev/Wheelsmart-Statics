{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","assets/images/app/empty-list.svg","view/pages/Reports/Purchase/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","reports","mini","person","vehicles","modelName","reportParamsData","reportDataList","loading","columnsList","reportView","miniCountersList","miniClustersList","miniDivisionsList","miniZonesList","miniColorsList","personParams","personlist","miniVehiclesList","vehiclesParams","InputChangeValue","getReportList","clearData","getMiniCounters","getMiniClusters","getMiniDivisions","getMiniZones","getMiniColors","getMiniVehicles","getPerson","Person","SetPersonParams","SetVehiclesParams","getVehicles","getMiniZonesClearData","getMiniClustersClearData","getMiniDivisionsClearData","getMiniCountersClearData","Form","useForm","form","disableDateRanges","range","startDate","endDate","current","startCheck","endCheck","moment","format","useEffect","page","columns","map","column","title","dataIndex","unshift","data","row","key","index","setFieldsValue","start_date","end_date","file_format","color","customer","counter__zone","counter__division","counter__cluster","counter","vehicle","partytype","approvalstatus","gutter","layout","name","initialValues","remember","onFinish","params","objData","model_name","ParamsData","add","xs","md","xl","Item","label","rules","required","message","style","width","picker","placeholder","disabledDate","onChange","date","value","disabled","showSearch","allowClear","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","color_id","Option","id","onSearch","search","defaultActiveFirstOption","showArrow","onPopupScroll","no_of_pages","customer_id","firstname","lastname","mobile","zone","zone_id","division","division_id","cluster","cluster_id","counter_id","approvals","purchase","vehicle_id","vehicleno","Group","e","target","Button","offset","htmlType","submit","length","dataSource","scroll","x","pagination","image","EmptyImage","imageStyle","height","description"],"mappings":"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","file":"static/js/130.aef9f7a5.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/empty-list.6fd5c5d1.svg\";","import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  DatePicker,\n  Button,\n  Radio,\n  Select,\n  Empty,\n} from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport {\n  getMiniCounters,\n  getMiniClusters,\n  getMiniDivisions,\n  getMiniZones,\n  getMiniColors,\n  getMiniVehicles,\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n} from \"../../../../store/mini/miniSlice\";\nimport * as Person from \"../../../../store/Masters/Person/personSlice\";\nimport {\n  getVehicles,\n  SetVehiclesParams,\n} from \"../../../../store/Masters/Vehicles/vehiclesSlice\";\nimport EmptyImage from \"../../../../assets/images/app/empty-list.svg\";\nimport {\n  InputChangeValue,\n  getReportList,\n  clearData,\n} from \"../../../../store/reports/reportsSlice\";\n\nfunction PurchaseReport(props) {\n  const [form] = Form.useForm();\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  const purchaseTypeList = [\n    { id: 1, name: \"Customer\" },\n    { id: 2, name: \"Dealer\" },\n    { id: 3, name: \"Exchange\" },\n    { id: 4, name: \"Seizing\" },\n    { id: 5, name: \"Return\" },\n  ];\n\n  const approvalStatusList = [\n    { id: 1, name: \"Pending\" },\n    { id: 2, name: \"Approved\" },\n    { id: 3, name: \"Reject\" },\n  ];\n\n  useEffect(() => {\n    props.clearData();\n    props.getMiniZones();\n    props.getMiniCounters();\n    props.getMiniClusters();\n    props.getMiniDivisions();\n    props.getMiniColors();\n    props.getPerson({ ...props.personParams, page: 1 });\n    props.getMiniVehicles();\n  }, []);\n\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const onFinish = () => {\n    if (props.reportParamsData.file_format == \"HRMS\") {\n      var { file_format, ...params } = props.reportParamsData;\n      var objData = {\n        file_format: 2,\n        model_name: \"HRMS Daily Attendance\",\n      };\n    } else {\n      var { file_format, ...params } = props.reportParamsData;\n      var objData = {\n        file_format: file_format,\n        model_name: \"Purchase\",\n      };\n    }\n    props.getReportList({\n      objData,\n      ParamsData: {\n        ...params,\n        start_date:\n          params.start_date != null\n            ? moment(params.start_date).format(\"YYYY-MM-DD\")\n            : \"\",\n        end_date:\n          params.end_date != null\n            ? moment(params.end_date).add(1, \"days\").format(\"YYYY-MM-DD\")\n            : \"\",\n      },\n    });\n  };\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  const columns = props.columnsList.map((column) => {\n    return {\n      title: column,\n      dataIndex: column,\n    };\n  });\n  columns.unshift({ title: \"S.No\", dataIndex: \"index\" });\n\n  const data = props.reportDataList.map((row, key) => ({\n    ...row,\n    index: key + 1,\n  }));\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.reportParamsData?.start_date,\n      end_date: props.reportParamsData?.end_date,\n      file_format: props.reportParamsData?.file_format,\n      color: props.reportParamsData?.color,\n      customer: props.reportParamsData?.customer,\n      counter__zone: props.reportParamsData?.counter__zone,\n      counter__division: props.reportParamsData?.counter__division,\n      counter__cluster: props.reportParamsData?.counter__cluster,\n      counter: props.reportParamsData?.counter,\n      vehicle: props.reportParamsData?.vehicle,\n      partytype: props.reportParamsData?.partytype,\n      approvalstatus: props.reportParamsData?.approvalstatus,\n    });\n  }, [props.reportParamsData]);\n  return (\n    <Row gutter={[12, 12]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Purchase Report\"\n        // addModelTile=\"Add Zone\"\n        goBack={true}\n        // setIsModalVisible={props.isModelVisible}\n        // isModalVisible={props.model}\n      />\n      <Col span={24}>\n        <Card>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item\n                  label=\"From Date\"\n                  name=\"start_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your From Date!\",\n                    },\n                  ]}\n                >\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment(),\n                    })}\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"start_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                      if (date == null) {\n                        props.InputChangeValue({\n                          key: \"end_date\",\n                          value: \"\",\n                        });\n                      }\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item\n                  label=\"To Date\"\n                  name=\"end_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your To Date!\",\n                    },\n                  ]}\n                >\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment().format(\"YYYY-MM-DD\"),\n                      startDate: moment(\n                        props.reportParamsData?.start_date\n                      ).format(\"YYYY-MM-DD\"),\n                    })}\n                    disabled={\n                      props.reportParamsData.start_date == null ||\n                      props.reportParamsData.start_date == \"\"\n                        ? true\n                        : false\n                    }\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"end_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Color\" name=\"color\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select a Color\"\n                    optionFilterProp=\"Color\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"color\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.color_id == null\n                        ? \"\"\n                        : props.reportParamsData?.color_id\n                    }\n                  >\n                    {props.miniColorsList.map((color, index) => {\n                      return (\n                        <Option key={index} value={color.id}>\n                          {color.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Customer\" name=\"customer\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Customer\"\n                    optionFilterProp=\"customer_id\"\n                    onSearch={(value) => {\n                      props.SetPersonParams({\n                        ...props.personParams,\n                        page: 1,\n                        search: value,\n                      });\n                      props.getPerson({\n                        ...props.personParams,\n                        page: 1,\n                        search: value,\n                      });\n                    }}\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    filterOption={false}\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"customer\",\n                        value: value,\n                      });\n                    }}\n                    onPopupScroll={() => {\n                      if (\n                        props.personParams.page < props.personParams.no_of_pages\n                      ) {\n                        props.SetPersonParams({\n                          ...props.personParams,\n                          page: props.personParams.page + 1,\n                        });\n                        props.getPerson({\n                          ...props.personParams,\n                          page: props.personParams.page + 1,\n                        });\n                      }\n                    }}\n                    value={\n                      props.reportParamsData.customer_id == null\n                        ? \"\"\n                        : props.reportParamsData?.customer_id\n                    }\n                  >\n                    {props.personlist.map((person, index) => {\n                      return (\n                        <Option value={person.id}>\n                          {person.firstname} {person.lastname} - {person.mobile}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Zone Name :\" name=\"counter__zone\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Zone\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniDivisions({ zone: value });\n                      props.getMiniDivisionsClearData();\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.InputChangeValue({\n                        key: \"counter__zone\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.zone_id == null\n                        ? \"\"\n                        : props.reportParamsData?.zone_id\n                    }\n                  >\n                    {props.miniZonesList.map((zone, index) => {\n                      return (\n                        <Option key={index} value={zone.id}>\n                          {zone.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Division Name:\" name=\"counter__division\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Division\"\n                    optionFilterProp=\"division\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniClusters({ division: value });\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.InputChangeValue({\n                        key: \"counter__division\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.division_id == null\n                        ? \"\"\n                        : props.reportParamsData?.division_id\n                    }\n                  >\n                    {props.miniDivisionsList.map((division, index) => {\n                      return (\n                        <Option key={index} value={division.id}>\n                          {division.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Cluster Name:\" name=\"counter__cluster\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Cluster\"\n                    optionFilterProp=\"cluster\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniCounters({ cluster: value });\n                      props.getMiniCountersClearData({});\n                      props.InputChangeValue({\n                        key: \"counter__cluster\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.cluster_id == null\n                        ? \"\"\n                        : props.reportParamsData?.cluster_id\n                    }\n                  >\n                    {props.miniClustersList.map((cluster, index) => {\n                      return (\n                        <Option key={index} value={cluster.id}>\n                          {cluster.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Counter\" name=\"counter\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select a Counter\"\n                    optionFilterProp=\"counter\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      // props.GetCounterByID(value);\n                      props.InputChangeValue({\n                        key: \"counter\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.counter_id == null\n                        ? \"\"\n                        : props.reportParamsData?.counter_id\n                    }\n                  >\n                    {props.miniCountersList.map((counter, index) => {\n                      return (\n                        <Option key={index} value={counter.id}>\n                          {counter.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Approval Status\" name=\"approvalstatus\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Approval Status\"\n                    optionFilterProp=\"approvalstatus\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"approvalstatus\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.approvalstatus == null\n                        ? \"\"\n                        : props.reportParamsData?.approvalstatus\n                    }\n                  >\n                    {approvalStatusList.map((approvals, index) => {\n                      return (\n                        <Option key={index} value={approvals.id}>\n                          {approvals.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Purchase Type\" name=\"partytype\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select a Purchase Type\"\n                    optionFilterProp=\"partytype\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"partytype\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.partytype == null\n                        ? \"\"\n                        : props.reportParamsData?.partytype\n                    }\n                  >\n                    {purchaseTypeList.map((purchase, index) => {\n                      return (\n                        <Option value={purchase.id}>{purchase.name}</Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Vehicle\" name=\"vehicle\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Vehicle\"\n                    optionFilterProp=\"vehicle_id\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onSearch={(value) => {\n                      props.SetVehiclesParams({\n                        ...props.vehiclesParams,\n                        page: 1,\n                        search: value,\n                      });\n                      props.getVehicles({\n                        ...props.vehiclesParams,\n                        page: 1,\n                        search: value,\n                      });\n                    }}\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    // filterOption={false}\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"vehicle\",\n                        value: value,\n                      });\n                    }}\n                    onPopupScroll={() => {\n                      if (\n                        props.vehiclesParams.page <\n                        props.vehiclesParams.no_of_pages\n                      ) {\n                        props.SetVehiclesParams({\n                          ...props.vehiclesParams,\n                          page: props.vehiclesParams.page + 1,\n                        });\n                        props.getVehicles({\n                          ...props.vehiclesParams,\n                          page: props.vehiclesParams.page + 1,\n                        });\n                      }\n                    }}\n                    value={\n                      props.reportParamsData.vehicle_id == null\n                        ? \"\"\n                        : props.reportParamsData?.vehicle_id\n                    }\n                  >\n                    {props.miniVehiclesList.map((vehicle, index) => {\n                      return (\n                        <Option key={index} value={vehicle.id}>\n                          {vehicle.vehicleno}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={10} xl={10}>\n                <Form.Item\n                  label=\"Report Format\"\n                  name=\"file_format\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your Report Format!\",\n                    },\n                  ]}\n                >\n                  <Radio.Group\n                    name=\"file_format\"\n                    onChange={ChangeHandeler}\n                    value={props.reportParamsData?.file_format}\n                  >\n                    <Radio.Button value={0}>CSV</Radio.Button>\n                    <Radio.Button value={2}>XLSX</Radio.Button>\n                    {/* <Radio.Button value={\"HRMS\"}>HRMS</Radio.Button> */}\n                    <Radio.Button value={5}>VIEW</Radio.Button>\n                  </Radio.Group>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col md={12} offset={12}>\n                <Button\n                  // block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-float-right hp-mt-10 hp-ml-10\"\n                  onClick={() => {\n                    props.clearData();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n                <Button\n                  // block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-float-right hp-mt-10\"\n                  disabled={props.loading}\n                  loading={props.loading}\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Generate Report\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Card>\n      </Col>\n\n      <Col span={24}>\n      {props.reportView && (\n          <>\n        {props.reportDataList.length != 0 &&\n        props.reportParamsData.file_format == 5 ? (\n          <>\n            <Card>\n              <Row className=\"hp-mb-12\">\n                <Col span={24}>\n                  <Table\n                    columns={columns}\n                    dataSource={data}\n                    scroll={{ x: 500 }}\n                    pagination={false}\n                    size=\"middle\"\n                    loading={props.loading}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </>\n        ) : (\n          <Card>\n            <Empty\n              className=\"hp-m-32\"\n              image={EmptyImage}\n              imageStyle={{\n                height: 160,\n              }}\n              description={<h5>Your Purchase Report is empty</h5>}\n            ></Empty>\n          </Card>\n        )}\n          </>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ reports, mini, person, vehicles }) {\n  return {\n    modelName: reports.modelName,\n    reportParamsData: reports.reportParamsData,\n    reportDataList: reports.reportDataList,\n    loading: reports.loading,\n    columnsList: reports.columnsList,\n    reportView: reports.reportView,\n    miniCountersList: mini.miniCountersList,\n    miniClustersList: mini.miniClustersList,\n    miniDivisionsList: mini.miniDivisionsList,\n    miniZonesList: mini.miniZonesList,\n    miniColorsList: mini.miniColorsList,\n    personParams: person.personParams,\n    personlist: person.personlist,\n    miniVehiclesList: mini.miniVehiclesList,\n    vehiclesParams: vehicles.vehiclesParams,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  InputChangeValue,\n  getReportList,\n  clearData,\n  getMiniCounters,\n  getMiniClusters,\n  getMiniDivisions,\n  getMiniZones,\n  getMiniColors,\n  getMiniVehicles,\n  getPerson: Person.getPerson,\n  SetPersonParams: Person.SetPersonParams,\n  SetVehiclesParams,\n  getVehicles,\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n})(PurchaseReport);\n"],"sourceRoot":""}