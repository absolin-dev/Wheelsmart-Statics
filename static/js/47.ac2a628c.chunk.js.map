{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/components/data-entry/inputs/numberInput.jsx","view/pages/MastersDashboard/percentageinterests/addPercentageinterests.jsx","view/pages/MastersDashboard/percentageinterests/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","NumericInput","value","onChange","onBlur","e","inputValue","target","test","key","name","valueTemp","charAt","length","slice","replace","connect","percentageinterests","selectedData","rowdata","model","percentageinterestsAdd","isModelVisible","InputChangeValue","Form","useForm","form","ChangeHandeler","handleResetInputValues","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","useEffect","setFieldsValue","sequence","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","handleAdd","countryToUpdate","handleUpdate","Item","label","rules","required","message","hasFeedback","style","placeholder","maxLength","getValueProps","pattern","RegExp","system","percentageinterestslist","noofpages","listCount","percentageinterestsParams","loading","userAccessList","getPercentageinterests","percentageinterestsEdit","percentageinterestsDelete","SetPercentageinterestsParams","page","search","page_size","columns","dataIndex","filterSearch","filterMode","render","row","record","indexOf","cursor","color","placement","onConfirm","okText","cancelText","data","map","index","Search","Input","gutter","isModalVisible","xs","sm","md","allowClear","onSearch","val","tip","spinning","delay","dataSource","scroll","x","pagination","current","pageSize","total","showTotal","showSizeChanger","on"],"mappings":"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","file":"static/js/47.ac2a628c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Input, Tooltip } from \"antd\";\n\nconst formatNumber = (value) => new Intl.NumberFormat().format(value);\n\nexport default function NumericInput(props) {\n  const { value, onChange, onBlur } = props;\n\n  const handleChange = (e) => {\n    const { value: inputValue } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n\n    if (reg.test(inputValue) || inputValue === \"\" || inputValue === \"-\") {\n      onChange({ key: props.name, value: inputValue });\n    }\n  }; // '.' at the end or only '-' in the input box.\n\n  const handleBlur = () => {\n    let valueTemp = value;\n\n    if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n      valueTemp = value.slice(0, -1);\n    }\n\n    // onChange({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n    onBlur({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n  };\n\n  return (\n    <Input\n      {...props}\n      onChange={handleChange}\n      onBlur={props.onBlur && handleBlur}\n    />\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  percentageinterestsAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Percentageinterests/percentageinterestsSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddPercentageinterests = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n      sequence: props.selectedData?.sequence,\n      value: props.selectedData?.value,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.percentageinterestsAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n      sequence: props.selectedData?.sequence,\n      value: props.selectedData?.value,\n    };\n    props.percentageinterestsAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Percentage Interest\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      sequence: props.selectedData.sequence,\n      value: props.selectedData.value,\n    });\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Form.Item\n          label=\"Interest :\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Interest!\",\n            },\n          ]}\n          hasFeedback\n        >\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Percentage Interest\"\n            value={props.selectedData?.name}\n            maxLength={50}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Sequence :\"\n          name=\"sequence\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Sequence Number!\",\n            },\n          ]}\n          getValueProps={() => { }}\n          hasFeedback\n        >\n          <NumericInput\n            id=\"sequence\"\n            name=\"sequence\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Sequence\"\n            maxLength={10}\n            value={props.selectedData?.sequence}\n            onChange={props.InputChangeValue}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Value:\"\n          name=\"value\"\n          onChange={ChangeHandeler}\n          rules={[{ required: true, message: \"Please input your Value!\" },\n          {\n            pattern: new RegExp(/^\\d+$/),\n            message: \"Please input only numbers!\",\n          },]}\n          hasFeedback\n        >\n          <Input\n            id=\"Value\"\n            name=\"value\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Value\"\n            value={props.selectedData?.value}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ percentageinterests }) {\n  return {\n    selectedData: percentageinterests.rowdata,\n    model: percentageinterests.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  percentageinterestsAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddPercentageinterests);\n","import React, { useEffect, useState } from \"react\";\n\nimport { Row, Col, Input, Card, Pagination, Spin, Popconfirm } from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\n\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport {\n  getPercentageinterests,\n  percentageinterestsEdit,\n  percentageinterestsDelete,\n  isModelVisible,\n  SetPercentageinterestsParams,\n} from \"../../../../store/Masters/Percentageinterests/percentageinterestsSlice\";\nimport AddPercentageinterests from \"./addPercentageinterests\";\n\nfunction Percentageinterests(props) {\n  useEffect(() => {\n    props.getPercentageinterests({ page: 1, search: \"\", page_size: 10 });\n  }, []);\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"5%\",\n      // sorter: (a, b) => a.index - b.index,\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: \"35%\",\n    },\n    {\n      title: \"Interest\",\n      dataIndex: \"name\",\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: \"40%\",\n    },\n    {\n      title: \"Sequence\",\n      dataIndex: \"sequence\",\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: \"40%\",\n    },\n    {\n      title: \"Value\",\n      dataIndex: \"value\",\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: \"40%\",\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: \"10%\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {props.userAccessList?.indexOf(\"Masters.change_percentageinterest\") !== -1 && (\n          <i\n            className=\"ri-edit-box-line hp-mr-2 \"\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n            onClick={() => {\n              props.percentageinterestsEdit(row);\n              props.isModelVisible(true);\n            }}\n          ></i>\n          )}\n\n        {props.userAccessList?.indexOf(\"Masters.delete_percentageinterest\") !== -1 && (\n          <Popconfirm\n            placement=\"topRight\"\n            title=\"Are you sure to delete this Record?\"\n            onConfirm={() => props.percentageinterestsDelete(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            className=\"hp-ml-8\"\n            icon={\n              <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n            }\n          >\n            <i\n              className=\"ri-delete-bin-2-line \"\n              style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n            ></i>\n          </Popconfirm>\n)}\n        </Space>\n      ),\n    },\n  ];\n\n  const data = props.percentageinterestslist.map((row, key) => ({\n    ...row,\n    index:\n      (props.percentageinterestsParams.page - 1) *\n        props.percentageinterestsParams.page_size +\n      key +\n      1,\n  }));\n\n  function onPageChange(page, pageSize) {\n    props.SetPercentageinterestsParams({\n      ...props.percentageinterestsParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getPercentageinterests({\n      ...props.percentageinterestsParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.SetPercentageinterestsParams({\n      ...props.percentageinterestsParams,\n      search: val,\n    });\n    props.getPercentageinterests({\n      ...props.percentageinterestsParams,\n      search: val,\n    });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  const { Search } = Input;\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Interests Master\"\n        addModelTile={\n          props.userAccessList?.indexOf(\"Masters.add_percentageinterest\") !== -1 &&\n          \"Add Interest\"\n        }\n        goBack={true}\n        setIsModalVisible={props.isModelVisible}\n        isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\">\n            <Col span={12} xs={24} sm={24} md={14} className=\"hp-mb-10\">\n              <Search\n                placeholder=\"Search...\"\n                allowClear\n                onChange={(e) => {\n                  if (e.target.value == \"\") {\n                    props.getPercentageinterests({\n                      ...props.percentageinterestsParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                    props.SetPercentageinterestsParams({\n                      ...props.percentageinterestsParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                  }\n                }}\n                onSearch={(value) => {\n                  onSearch(value);\n                }}\n              />\n            </Col>\n\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 500 }}\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.percentageinterestsParams?.page}\n                pageSize={props.percentageinterestsParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                on\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <AddPercentageinterests />\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ percentageinterests, system }) {\n  return {\n    percentageinterestslist: percentageinterests.percentageinterestslist,\n    noofpages: percentageinterests.noofpages,\n    listCount: percentageinterests.listCount,\n    percentageinterestsParams: percentageinterests.percentageinterestsParams,\n    loading: percentageinterests.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getPercentageinterests,\n  percentageinterestsEdit,\n  percentageinterestsDelete,\n  isModelVisible,\n  SetPercentageinterestsParams,\n})(Percentageinterests);\n"],"sourceRoot":""}