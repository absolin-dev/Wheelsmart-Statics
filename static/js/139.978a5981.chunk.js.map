{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","assets/images/app/empty-list.svg","view/pages/Reports/TempraroryTransfer/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","reports","mini","modelName","reportParamsData","reportDataList","loading","columnsList","allCountersList","miniCountersList","purchaseAvaliableStockList","purchaseAvailableStockParams","reportView","InputChangeValue","getReportList","clearData","getAllCounters","setPurchaseAvailableStockParams","getPurchaseAvailableStock","getMiniCounters","Form","useForm","form","disableDateRanges","range","startDate","endDate","current","startCheck","endCheck","moment","format","useEffect","columns","map","column","title","dataIndex","unshift","data","row","key","index","setFieldsValue","start_date","end_date","file_format","tocounter_id","counter_id","gutter","layout","name","initialValues","remember","onFinish","params","objData","model_name","ParamsData","add","xs","md","xl","Item","label","rules","required","message","style","width","picker","placeholder","disabledDate","onChange","date","value","disabled","hasFeedback","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","onBlur","counter","page","Option","id","Modal","error","content","checkCounter","tocounter","Group","e","target","Button","offset","htmlType","submit","length","dataSource","scroll","x","pagination","image","EmptyImage","imageStyle","height","description"],"mappings":"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","file":"static/js/139.978a5981.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/empty-list.6fd5c5d1.svg\";","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Card, Form, DatePicker, Button, Radio, Select, Empty, Modal   } from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport EmptyImage from \"../../../../assets/images/app/empty-list.svg\";\nimport {\n  InputChangeValue,\n  getReportList,\n  clearData,\n} from \"../../../../store/reports/reportsSlice\";\nimport {\n  getMiniCounters,\n  setPurchaseAvailableStockParams,\n  getPurchaseAvailableStock,\n  getAllCounters,\n} from \"../../../../store/mini/miniSlice\";\nimport {\n  RiAlertLine,\n} from \"react-icons/ri\";\n\nfunction TempraroryTransferReport(props) {\n  const [form] = Form.useForm();\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n    const transferStatusList = [\n      { id: 1, name: \"Pending\" },\n      { id: 2, name: \"Accepted\" },\n      { id: 3, name: \"Rejected\" },\n    ];\n\n  useEffect(() => {\n    props.getMiniCounters();\n    props.getAllCounters();\n    props.clearData();\n  }, []);\n\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const onFinish = () => {\n    if(props.reportParamsData.file_format == \"HRMS\"){\n      var { file_format, ...params } = props.reportParamsData;\n      var objData = {\n        file_format: 2,\n        model_name: \"HRMS Daily Attendance\",\n      };\n    }else{\n    var { file_format, ...params } = props.reportParamsData;\n    var objData = {\n      file_format: file_format,\n      model_name: \"TemporaryTransfer\",\n    };\n  }\n    props.getReportList({\n      objData,\n      ParamsData: {\n        ...params,\n        start_date:\n          params.start_date != null\n            ? moment(params.start_date).format(\"YYYY-MM-DD\")\n            : \"\",\n        end_date:\n          params.end_date != null\n            ? moment(params.end_date).add(1, \"days\").format(\"YYYY-MM-DD\")\n            : \"\",\n      },\n    });\n  };\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  const columns = props.columnsList.map((column) => {\n    return {\n      title: column,\n      dataIndex: column,\n    };\n  });\n  columns.unshift({ title: \"S.No\", dataIndex: \"index\" });\n\n  const data = props.reportDataList.map((row, key) => ({\n    ...row,\n    index: key + 1,\n  }));\n\n\n  function checkCounter() {\n    if (props.reportParamsData?.counter_id == props.reportParamsData.tocounter_id) {\n      Modal.error({\n        icon: (\n          <span className=\"remix-icon\">\n            <RiAlertLine />\n          </span>\n        ),\n        title: <h5 className=\"hp-mb-0 hp-font-weight-500\">Error</h5>,\n        content: (\n          <div>\n            <p className=\"hp-p1-body hp-text-color-black-80\">\n              Sorry! Not allowd to same counter\n            </p>\n          </div>\n        ),\n      });\n      props.InputChangeValue({\n        key: \"tocounter_id\",\n        value: null,\n      });\n    }\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.reportParamsData?.start_date,\n      end_date: props.reportParamsData?.end_date,\n      file_format: props.reportParamsData?.file_format,\n      tocounter_id: props.reportParamsData?.tocounter_id,\n      counter_id: props.reportParamsData?.counter_id,\n    });\n  }, [props.reportParamsData]);\n  return (\n    <Row gutter={[12, 12]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Temporary Transfer Report\"\n        // addModelTile=\"Add Zone\"\n        goBack={true}\n        // setIsModalVisible={props.isModelVisible}\n        // isModalVisible={props.model}\n      />\n      <Col span={24}>\n        <Card>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item\n                  label=\"From Date\"\n                  name=\"start_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your From Date!\",\n                    },\n                  ]}\n                >\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment(),\n                    })}\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"start_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                      if (date == null) {\n                        props.InputChangeValue({\n                          key: \"end_date\",\n                          value: \"\",\n                        });\n                      }\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item\n                  label=\"To Date\"\n                  name=\"end_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your To Date!\",\n                    },\n                  ]}\n                >\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment().format(\"YYYY-MM-DD\"),\n                      startDate: moment(\n                        props.reportParamsData?.start_date\n                      ).format(\"YYYY-MM-DD\"),\n                    })}\n                    disabled={\n                      props.reportParamsData.start_date == null ||\n                      props.reportParamsData.start_date == \"\"\n                        ? true\n                        : false\n                    }\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"end_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              \n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item\n                  label=\"From Counter\"\n                  name=\"counter_id\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Select From Counter\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Select From Counter\"\n                    optionFilterProp=\"Counter\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onBlur={(value) => {\n                      props.getPurchaseAvailableStock({\n                        ...props.purchaseAvailableStockParams,\n                        counter: props.reportParamsData?.counter_id,\n                        page: 1,\n                      });\n                      props.setPurchaseAvailableStockParams({\n                        ...props.purchaseAvailableStockParams,\n                        counter: props.reportParamsData?.counter_id,\n                        page: 1,\n                      });\n                    }}\n                    onChange={(value) => {\n                      // props.GetCounterByID(value);\n                      props.getPurchaseAvailableStock();\n                      props.InputChangeValue({\n                        key: \"counter_id\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.counter_id == null\n                        ? \"\"\n                        : props.reportParamsData?.counter_id\n                    }\n                  >\n                    {props.miniCountersList.map((counter, index) => {\n                      return (\n                        <Option key={index} value={counter.id}>\n                          {counter.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item\n                  label=\"To Counter\"\n                  name=\"tocounter_id\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Select To Counter\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Select To Counter\"\n                    optionFilterProp=\"Counter\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onBlur={() => {\n                      checkCounter();\n                    }}\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"tocounter_id\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.tocounter_id == null\n                        ? \"\"\n                        : props.reportParamsData?.tocounter_id\n                    }\n                  >\n                    {props.allCountersList.map((tocounter, index) => {\n                      return (\n                        <Option key={index} value={tocounter.id}>\n                          {tocounter.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={10} xl={10}>\n                <Form.Item\n                  label=\"Report Format\"\n                  name=\"file_format\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your Report Format!\",\n                    },\n                  ]}\n                >\n                  <Radio.Group\n                    name=\"file_format\"\n                    onChange={ChangeHandeler}\n                    value={props.reportParamsData?.file_format}\n                  >\n                    <Radio.Button value={0}>CSV</Radio.Button>\n                    <Radio.Button value={2}>XLSX</Radio.Button>\n                    {/* <Radio.Button value={\"HRMS\"}>HRMS</Radio.Button> */}\n                    <Radio.Button value={5}>VIEW</Radio.Button>\n                  </Radio.Group>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col md={12} offset={12}>\n                <Button\n                  // block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-float-right hp-mt-10 hp-ml-10\"\n                  onClick={() => {\n                    props.clearData();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n                <Button\n                  // block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-float-right hp-mt-10\"\n                  disabled={props.loading}\n                  loading={props.loading}\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Generate Report\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Card>\n      </Col>\n\n      <Col span={24}>\n      {props.reportView && (\n          <>\n        {(props.reportDataList.length != 0 &&\n        props.reportParamsData.file_format == 5) ? (\n          <>\n            <Card>\n              <Row className=\"hp-mb-12\">\n                <Col span={24}>\n                  <Table\n                    columns={columns}\n                    dataSource={data}\n                    scroll={{ x: 500 }}\n                    pagination={false}\n                    size=\"middle\"\n                    loading={props.loading}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </>\n        ) : (\n          <Card>\n            <Empty\n            className=\"hp-m-32\"\n            image={EmptyImage}\n            imageStyle={{\n              height: 160,\n            }}\n            description={<h5>Your Temporary Transfer is empty</h5>}></Empty>\n          </Card>\n        )}\n        </>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ reports, mini,  }) {\n  return {\n    modelName: reports.modelName,\n    reportParamsData: reports.reportParamsData,\n    reportDataList: reports.reportDataList,\n    loading: reports.loading,\n    columnsList: reports.columnsList,\n    allCountersList: mini.allCountersList,\n    miniCountersList: mini.miniCountersList,\n    purchaseAvaliableStockList: mini.purchaseAvaliableStockList,\n    purchaseAvailableStockParams: mini.purchaseAvailableStockParams,\n    reportView: reports.reportView\n  };\n}\n\nexport default connect(mapStateToProps, {\n  InputChangeValue,\n  getReportList,\n  clearData,\n  getAllCounters,\n  setPurchaseAvailableStockParams,\n  getPurchaseAvailableStock,\n  getMiniCounters\n})(TempraroryTransferReport);\n"],"sourceRoot":""}