{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/components/data-entry/inputs/numberInput.jsx","view/pages/MastersDashboard/versions/addVersions.jsx","view/pages/MastersDashboard/versions/Filters/Filter.jsx","view/pages/MastersDashboard/versions/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","NumericInput","value","onChange","onBlur","e","inputValue","target","test","key","name","valueTemp","charAt","length","slice","replace","connect","versions","mini","versionfeatures","rowdata","model","miniBrandsList","miniBrandFamilyList","miniPriority","miniModelsList","miniVehicletypesList","versionfeaturesParams","versionfeatureslist","versionsAdd","isModelVisible","InputChangeValue","getMiniBrands","getMiniBrandFamily","getMiniPriority","getMiniModels","getMiniVehicletypes","getVersionfeatures","SetVersionfeaturesParams","Form","useForm","form","useEffect","handleResetInputValues","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","setFieldsValue","brand_id","brandfamily_id","model_id","vehicletype_id","versionfeature_ids","priority_id","fueltype","enginedisplacement","firstparty","secondparty","thirdparty","defaulter","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","handleAdd","brand","brandfamily","vehicletype","versionfeature","priority","handleUpdate","gutter","xs","xl","md","Item","label","rules","required","message","hasFeedback","style","placeholder","showSearch","filterOption","input","option","children","toLowerCase","includes","optionFilterProp","map","index","Option","mode","maxTagCount","onSearch","page","search","defaultActiveFirstOption","showArrow","onPopupScroll","no_of_pages","getValueProps","maxLength","checkedChildren","unCheckedChildren","date","Date","getFullYear","getMonth","drawer","versionsParams","isDrawerVisible","SetVersionsParams","FilterInputChangeValue","getVersions","getMiniBrandsClearData","getMiniBrandFamilyClearData","getMiniPriorityClearData","getMiniModelsClearData","getMiniVehicletypesClearData","disableDateRanges","range","startDate","endDate","current","startCheck","endCheck","moment","format","start_date","end_date","onClose","placement","bodyStyle","paddingBottom","initialValues","remember","page_size","add","picker","disabledDate","disabled","allowClear","Col","htmlType","system","versionslist","noofpages","listCount","loading","userAccessList","versionsEdit","versionsDelete","columnClass","columns","dataIndex","fixed","filterSearch","render","row","filterMode","fueltype_name","enginedisplacement_name","toString","record","indexOf","cursor","color","onConfirm","okText","cancelText","data","Search","Input","isModalVisible","sspan","sm","lg","xxl","val","FilterOutlined","tip","spinning","delay","dataSource","scroll","x","pagination","pageSize","total","showTotal","showSizeChanger","Filter"],"mappings":"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","file":"static/js/51.44a85933.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Input, Tooltip } from \"antd\";\n\nconst formatNumber = (value) => new Intl.NumberFormat().format(value);\n\nexport default function NumericInput(props) {\n  const { value, onChange, onBlur } = props;\n\n  const handleChange = (e) => {\n    const { value: inputValue } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n\n    if (reg.test(inputValue) || inputValue === \"\" || inputValue === \"-\") {\n      onChange({ key: props.name, value: inputValue });\n    }\n  }; // '.' at the end or only '-' in the input box.\n\n  const handleBlur = () => {\n    let valueTemp = value;\n\n    if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n      valueTemp = value.slice(0, -1);\n    }\n\n    // onChange({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n    onBlur({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n  };\n\n  return (\n    <Input\n      {...props}\n      onChange={handleChange}\n      onBlur={props.onBlur && handleBlur}\n    />\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select, Switch } from \"antd\";\nimport {\n  versionsAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Versions/versionsSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniPriority,\n  getMiniModels,\n  getMiniVehicletypes,\n} from \"../../../../store/mini/miniSlice\";\nimport {\n  getVersionfeatures,\n  SetVersionfeaturesParams,\n} from \"../../../../store/Masters/Versionfeatures​/versionfeatures​Slice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddVersions = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniBrands();\n    props.getMiniVehicletypes();\n    props.getVersionfeatures({ ...props.versionfeaturesParams });\n    props.getMiniPriority();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  const fuelTypeList = [\n    { id: 1, name: \"Petrol\" },\n    { id: 2, name: \"Diesel\" },\n    { id: 3, name: \"Electric\" },\n  ];\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletype_id: props.rowdata.vehicletype_id,\n      versionfeature_ids: props.rowdata.versionfeature_ids,\n      priority_id: props.rowdata.priority_id,\n      fueltype: props.rowdata.fueltype,\n      enginedisplacement: props.rowdata.enginedisplacement,\n      firstparty: props.rowdata.firstparty,\n      secondparty: props.rowdata.secondparty,\n      thirdparty: props.rowdata.thirdparty,\n      defaulter: props.rowdata?.defaulter,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.versionsAdd(obj);\n    }\n  };\n\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      brand_id:\n        props.rowdata?.brand_id == null\n          ? props.rowdata.brand.id\n          : props.rowdata?.brand_id,\n      brandfamily_id:\n        props.rowdata?.brandfamily_id == null\n          ? props.rowdata.brandfamily.id\n          : props.rowdata?.brandfamily_id,\n      model_id:\n        props.rowdata?.model_id == null\n          ? props.rowdata.model.id\n          : props.rowdata?.model_id,\n      vehicletype_id:\n        props.rowdata?.vehicletype_id == null\n          ? props.rowdata.vehicletype.id\n          : props.rowdata?.vehicletype_id,\n\n      versionfeature_ids:\n        props.rowdata?.versionfeature_ids == null\n          ? props.rowdata.versionfeature.id\n          : props.rowdata?.versionfeature_ids,\n\n      priority_id:\n        props.rowdata?.priority_id == null\n          ? props.rowdata.priority.id\n          : props.rowdata?.priority_id,\n      fueltype: props.rowdata?.fueltype,\n      enginedisplacement: props.rowdata?.enginedisplacement,\n      firstparty: props.rowdata?.firstparty,\n      secondparty: props.rowdata?.secondparty,\n      thirdparty: props.rowdata?.thirdparty,\n      defaulter: props.rowdata?.defaulter,\n    };\n    props.versionsAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Version\n    </h5>\n  );\n\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.rowdata.name,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletype_id: props.rowdata.vehicletype_id,\n      versionfeature_ids: props.rowdata.versionfeature_ids,\n      priority_id: props.rowdata.priority_id,\n      fueltype: props.rowdata.fueltype,\n      enginedisplacement: props.rowdata.enginedisplacement,\n      firstparty: props.rowdata.firstparty,\n      secondparty: props.rowdata.secondparty,\n      thirdparty: props.rowdata.thirdparty,\n      defaulter: props.rowdata.defaulter,\n    });\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={716}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"userForm\"\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row gutter={[12, 0]}>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Version Name:\"\n              name=\"name\"\n              rules={[\n                { required: true, message: \"Please input your Version Name!\" },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Version\"\n                name=\"name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Ex: Activa 5G 125cc\"\n                value={props.rowdata?.name}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Brand :\"\n              name=\"brand_id\"\n              rules={[{ required: true, message: \"Please select your Brand!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select  Brand\"\n                optionFilterProp=\"Brand\"\n                onChange={(value) => {\n                  props.getMiniBrandFamily({ brand: value });\n                  props.InputChangeValue({\n                    key: \"brand_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brand_id == null ? \"\" : props.rowdata?.brand_id\n                }\n              >\n                {props.miniBrandsList.map((brand, index) => {\n                  return (\n                    <Option key={index} value={brand.id}>\n                      {brand.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Brand Family :\"\n              name=\"brandfamily_id\"\n              rules={[\n                { required: true, message: \"Please select your Brand Family!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Brand Family\"\n                optionFilterProp=\"brand Family\"\n                onChange={(value) => {\n                  props.getMiniModels({ brandfamily: value });\n                  props.InputChangeValue({\n                    key: \"brandfamily_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brandfamily_id == null\n                    ? \"\"\n                    : props.rowdata?.brandfamily_id\n                }\n              >\n                {props.miniBrandFamilyList.map((brandfamily, index) => {\n                  return (\n                    <Option key={index} value={brandfamily.id}>\n                      {brandfamily.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Model :\"\n              name=\"model_id\"\n              rules={[{ required: true, message: \"Please select your Model!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Model\"\n                optionFilterProp=\"Model\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"model_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.model_id == null ? \"\" : props.rowdata?.model_id\n                }\n              >\n                {props.miniModelsList.map((model, index) => {\n                  return (\n                    <Option key={index} value={model.id}>\n                      {model.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Vehicle Type :\"\n              name=\"vehicletype_id\"\n              rules={[\n                { required: true, message: \"Please select your Vehicle Type!\" },\n              ]}\n              hasFeedback>\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Vehicle Type\"\n                optionFilterProp=\"vehicletype\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"vehicletype_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.vehicletype_id == null\n                    ? \"\"\n                    : props.rowdata?.vehicletype_id\n                }\n              >\n                {props.miniVehicletypesList.map((vehicletype, index) => {\n                  return (\n                    <Option key={index} value={vehicletype.id}>\n                      {vehicletype.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Version Features\"\n              name=\"versionfeature_ids\"\n              // rules={[\n              //   {\n              //     required: true,\n              //     message: \"Please select your Version Features\",\n              //   },\n              // ]}\n              hasFeedback\n            >\n              <Select\n                mode=\"multiple\"\n                showSearch\n                placeholder=\"Select Version Features\"\n                maxTagCount=\"responsive\"\n                optionFilterProp=\"versionfeature_ids\"\n                onSearch={(value) => {\n                  props.SetVersionfeaturesParams({\n                    ...props.versionfeaturesParams,\n                    page: 1,\n                    search: value,\n                  });\n                  props.getVersionfeatures({\n                    ...props.versionfeaturesParams,\n                    page: 1,\n                    search: value,\n                  });\n                }}\n                defaultActiveFirstOption={false}\n                showArrow={true}\n                filterOption={false}\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"versionfeature_ids\",\n                    value: value,\n                  });\n                }}\n                onPopupScroll={() => {\n                  if (\n                    props.versionfeaturesParams.page <\n                    props.versionfeaturesParams.no_of_pages\n                  ) {\n                    props.SetVersionfeaturesParams({\n                      ...props.versionfeaturesParams,\n                      page: props.versionfeaturesParams.page + 1,\n                    });\n                    props.getVersionfeatures({\n                      ...props.versionfeaturesParams,\n                      page: props.versionfeaturesParams.page + 1,\n                    });\n                  }\n                }}\n                value={\n                  props.rowdata.versionfeature_ids == null\n                    ? \"\"\n                    : props.rowdata?.versionfeature_ids\n                }\n              >\n                {props.versionfeatureslist.map((versionfeature, index) => {\n                  return (\n                    <Option value={versionfeature.id}>\n                      {versionfeature.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Priority :\"\n              name=\"priority_id\"\n              rules={[\n                { required: true, message: \"Please select your Priority!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Priority\"\n                optionFilterProp=\"priority\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"priority_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.priority_id == null\n                    ? \"\"\n                    : props.rowdata?.priority_id\n                }\n              >\n                {props.miniPriority.map((priority, index) => {\n                  return (\n                    <Option key={index} value={priority.id}>\n                      {priority.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Fuel Type\"\n              name=\"fueltype\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Fuel Type!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select Fuel Type\"\n                optionFilterProp=\"fueltype\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"fueltype\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.fueltype == null ? \"\" : props.rowdata?.fueltype\n                }\n              >\n                {fuelTypeList.map((fueltype, index) => {\n                  return (\n                    <Option key={index} value={fueltype.id}>\n                      {fueltype.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Engine Displacement :\"\n              name=\"enginedisplacement\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Engine Displacement!\",\n                },\n              ]}\n              getValueProps={() => { }}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"enginedisplacement\"\n                name=\"enginedisplacement\"\n                maxLength={4}\n                style={{ width: \"100%\" }}\n                placeholder=\"Engine Displacement\"\n                value={\n                  props.rowdata?.enginedisplacement == null\n                    ? \"\"\n                    : props.rowdata?.enginedisplacement\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"First Party :\"\n              name=\"firstparty\"\n              // rules={[\n              //   {\n              //     required: true,\n              //     message: \"Please input your First Party!\",\n              //   },\n              // ]}\n              getValueProps={() => { }}\n              hasFeedback>\n              <NumericInput\n                id=\"firstparty\"\n                name=\"firstparty\"\n                maxLength={6}\n                style={{ width: \"100%\" }}\n                placeholder=\"First Party\"\n                value={\n                  props.rowdata?.firstparty == null\n                    ? \"\"\n                    : props.rowdata?.firstparty\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Second Party :\"\n              name=\"secondparty\"\n              // rules={[\n              //   {\n              //     required: true,\n              //     message: \"Please input your Second Party!\",\n              //   },\n              // ]}\n              getValueProps={() => { }}\n              hasFeedback>\n              <NumericInput\n                id=\"secondparty\"\n                maxLength={6}\n                name=\"secondparty\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Second Party\"\n                value={\n                  props.rowdata?.secondparty == null\n                    ? \"\"\n                    : props.rowdata?.secondparty\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Third Party :\"\n              name=\"thirdparty\"\n              // rules={[\n              //   {\n              //     required: true,\n              //     message: \"Please input your Third Party!\",\n              //   },\n              // ]}\n              getValueProps={() => { }}\n              hasFeedback>\n              <NumericInput\n                id=\"thirdparty\"\n                maxLength={6}\n                name=\"thirdparty\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Third Party\"\n                value={\n                  props.rowdata?.thirdparty == null\n                    ? \"\"\n                    : props.rowdata?.thirdparty\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Default\"\n              name=\"defaulter\">\n              {\" \"}\n              <Switch\n                checkedChildren=\"On\"\n                unCheckedChildren=\"Off\"\n                // defaultChecked finalapproval\n                className=\"hp-mb-16\"\n                value={props.rowdata.defaulter}\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"defaulter\",\n                    value: value,\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ versions, mini, versionfeatures }) {\n  return {\n    rowdata: versions.rowdata,\n    model: versions.model,\n    miniBrandsList: mini.miniBrandsList,\n    miniBrandFamilyList: mini.miniBrandFamilyList,\n    miniPriority: mini.miniPriority,\n    miniModelsList: mini.miniModelsList,\n    miniVehicletypesList: mini.miniVehicletypesList,\n\n    versionfeaturesParams: versionfeatures.versionfeaturesParams,\n    versionfeatureslist: versionfeatures.versionfeatureslist,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  versionsAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniPriority,\n  getMiniModels,\n  getMiniVehicletypes,\n  getVersionfeatures,\n  SetVersionfeaturesParams,\n})(AddVersions);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Button,\n  Drawer,\n  Space,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport moment, { min } from \"moment\";\n\nimport {\n  isDrawerVisible,\n  FilterInputChangeValue,\n  getVersions,\n  SetVersionsParams,\n} from \"../../../../../store/Masters/Versions/versionsSlice\";\nimport {\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniPriority,\n  getMiniModels,\n  getMiniVehicletypes,\n  getMiniBrandsClearData,\n  getMiniBrandFamilyClearData,\n  getMiniPriorityClearData,\n  getMiniModelsClearData,\n  getMiniVehicletypesClearData,\n} from \"../../../../../store/mini/miniSlice\";\n\nimport {\n  getVersionfeatures,\n  SetVersionfeaturesParams,\n} from \"../../../../../store/Masters/Versionfeatures​/versionfeatures​Slice\";\n\nvar date = new Date(),\n  y = date.getFullYear(),\n  m = date.getMonth();\n\nconst filter = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniBrands();\n    props.getMiniBrandFamily();\n    props.getMiniModels();\n    props.getMiniVehicletypes();\n    props.getVersionfeatures({ ...props.versionfeaturesParams });\n    props.getMiniPriority();\n  }, []);\n\n  const FUELTYPE_CHOICES = [\n    { id: 1, name: \"Petrol\" },\n    { id: 2, name: \"Diesel\" },\n    { id: 3, name: \"Cng\" },\n    { id: 4, name: \"Electric\" },\n    { id: 5, name: \"Bio diesel\" },\n  ];\n\n  const onFinish = () => {\n    props.SetVersionsParams({\n      ...props.versionsParams,\n      start_date: props.versionsParams.start_date,\n      end_date: props.versionsParams.end_date,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n\n    props.getVersions({\n      ...props.versionsParams,\n      start_date:\n        props.versionsParams.start_date != null &&\n        props.versionsParams.start_date != \"\"\n          ? moment(props.versionsParams.start_date).format(\"YYYY-MM-DD\")\n          : \"\",\n      end_date:\n        props.versionsParams.end_date != null &&\n        props.versionsParams.end_date != \"\"\n          ? moment(props.versionsParams.end_date)\n              .add(1, \"days\")\n              .format(\"YYYY-MM-DD\")\n          : \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.isDrawerVisible(false);\n  };\n\n  function clearFilter() {\n    props.SetVersionsParams({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n\n    props.getVersions({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n\n    props.getMiniBrands();\n    props.getMiniBrandFamily();\n    props.getMiniModels();\n    props.getMiniVehicletypes();\n    props.getVersionfeatures({ ...props.versionfeaturesParams });\n    props.getMiniPriority();\n  }\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.versionsParams?.start_date,\n      end_date: props.versionsParams?.end_date,\n      brand: props.versionsParams.brand,\n      brandfamily: props.versionsParams.brandfamily,\n      model: props.versionsParams.model,\n      vehicletype: props.versionsParams.vehicletype,\n      versionfeature: props.versionsParams.versionfeature,\n      priority: props.versionsParams.priority,\n      fueltype: props.versionsParams.fueltype,\n    });\n  }, [props.versionsParams]);\n\n  function onSearch(val) {\n    props.getVersions({ page: 1, search: val, page_size: 10 });\n  }\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Drawer\n          title=\"Filters\"\n          width={420}\n          className=\"hp-drawer-mobile\"\n          onClose={() => {\n            props.isDrawerVisible(false);\n          }}\n          placement=\"right\"\n          visible={props.drawer}\n          bodyStyle={{\n            paddingBottom: 10,\n          }}\n        >\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              <Col span={12}>\n                <Form.Item label=\"From Date\" name=\"start_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: new Date(),\n                    })}\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"start_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                      if (date == null) {\n                        props.FilterInputChangeValue({\n                          key: \"end_date\",\n                          value: \"\",\n                        });\n                      }\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"To Date\" name=\"end_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment().format(\"YYYY-MM-DD\"),\n                      startDate: moment(\n                        props.versionsParams?.start_date\n                      ).format(\"YYYY-MM-DD\"),\n                    })}\n                    disabled={\n                      props.versionsParams.start_date == null ||\n                      props.versionsParams.start_date == \"\"\n                        ? true\n                        : false\n                    }\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"end_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Brand :\" name=\"brand\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select  Brand\"\n                    optionFilterProp=\"Brand\"\n                    onChange={(value) => {\n                      props.getMiniBrandFamily({ brand: value });\n                      props.getMiniBrandFamilyClearData,\n                        props.getMiniModelsClearData,\n                        props.FilterInputChangeValue({\n                          key: \"brand\",\n                          value: value,\n                        });\n                    }}\n                    value={\n                      props.versionsParams.brand_id == null\n                        ? \"\"\n                        : props.versionsParams?.brand_id\n                    }\n                  >\n                    {props.miniBrandsList.map((brand, index) => {\n                      return (\n                        <Option key={index} value={brand.id}>\n                          {brand.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Brand Family :\" name=\"brandfamily\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Brand Family\"\n                    optionFilterProp=\"brand Family\"\n                    onChange={(value) => {\n                      props.getMiniModels({ brandfamily: value });\n                      props.getMiniModelsClearData,\n                        props.FilterInputChangeValue({\n                          key: \"brandfamily\",\n                          value: value,\n                        });\n                    }}\n                    value={\n                      props.versionsParams.brandfamily_id == null\n                        ? \"\"\n                        : props.versionsParams?.brandfamily_id\n                    }\n                  >\n                    {props.miniBrandFamilyList.map((brandfamily, index) => {\n                      return (\n                        <Option key={index} value={brandfamily.id}>\n                          {brandfamily.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Model :\" name=\"model\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Model\"\n                    optionFilterProp=\"Model\"\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"model\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.versionsParams.model_id == null\n                        ? \"\"\n                        : props.versionsParams?.model_id\n                    }\n                  >\n                    {props.miniModelsList.map((model, index) => {\n                      return (\n                        <Option key={index} value={model.id}>\n                          {model.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Vehicle Type :\" name=\"vehicletype\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Vehicle Type\"\n                    optionFilterProp=\"vehicletype\"\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"vehicletype\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.versionsParams.vehicletype_id == null\n                        ? \"\"\n                        : props.versionsParams?.vehicletype_id\n                    }\n                  >\n                    {props.miniVehicletypesList.map((vehicletype, index) => {\n                      return (\n                        <Option key={index} value={vehicletype.id}>\n                          {vehicletype.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Priority :\" name=\"priority\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Priority\"\n                    optionFilterProp=\"priority\"\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"priority\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.versionsParams.priority_id == null\n                        ? \"\"\n                        : props.versionsParams?.priority_id\n                    }\n                  >\n                    {props.miniPriority.map((priority, index) => {\n                      return (\n                        <Option key={index} value={priority.id}>\n                          {priority.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Fuel Type\" name=\"fueltype\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Fuel Type\"\n                    optionFilterProp=\"fueltype\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"fueltype\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.versionsParams.fueltype == null\n                        ? \"\"\n                        : props.versionsParams?.fueltype\n                    }\n                  >\n                    {FUELTYPE_CHOICES.map((fueltype, index) => {\n                      return (\n                        <Option key={index} value={fueltype.id}>\n                          {fueltype.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col Col span={12}>\n                <Form.Item label=\"Version Features\" name=\"versionfeature\">\n                  <Select\n                    mode=\"multiple\"\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Version Features\"\n                    maxTagCount=\"responsive\"\n                    optionFilterProp=\"versionfeature_ids\"\n                    onSearch={(value) => {\n                      props.SetVersionfeaturesParams({\n                        ...props.versionfeaturesParams,\n                        page: 1,\n                        search: value,\n                      });\n                      props.getVersionfeatures({\n                        ...props.versionfeaturesParams,\n                        page: 1,\n                        search: value,\n                      });\n                    }}\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    filterOption={false}\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"versionfeature\",\n                        value: value,\n                      });\n                    }}\n                    onPopupScroll={() => {\n                      if (\n                        props.versionfeaturesParams.page <\n                        props.versionfeaturesParams.no_of_pages\n                      ) {\n                        props.SetVersionfeaturesParams({\n                          ...props.versionfeaturesParams,\n                          page: props.versionfeaturesParams.page + 1,\n                        });\n                        props.getVersionfeatures({\n                          ...props.versionfeaturesParams,\n                          page: props.versionfeaturesParams.page + 1,\n                        });\n                      }\n                    }}\n                    value={\n                      props.versionsParams.versionfeature_ids == null\n                        ? \"\"\n                        : props.versionsParams?.versionfeature_ids\n                    }\n                  >\n                    {props.versionfeatureslist.map((versionfeature, index) => {\n                      return (\n                        <Option value={versionfeature.id}>\n                          {versionfeature.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    clearFilter();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n              </Col>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Apply\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Drawer>\n      </Col>\n    </Row>\n  );\n};\n\nfunction mapStateToProps({ versions, mini, versionfeatures }) {\n  return {\n    drawer: versions.drawer,\n    versionsParams: versions.versionsParams,\n    miniBrandsList: mini.miniBrandsList,\n    miniBrandFamilyList: mini.miniBrandFamilyList,\n    miniPriority: mini.miniPriority,\n    miniModelsList: mini.miniModelsList,\n    miniVehicletypesList: mini.miniVehicletypesList,\n\n    versionfeaturesParams: versionfeatures.versionfeaturesParams,\n    versionfeatureslist: versionfeatures.versionfeatureslist,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  isDrawerVisible,\n  SetVersionsParams,\n  FilterInputChangeValue,\n  getVersions,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniPriority,\n  getMiniModels,\n  getMiniVehicletypes,\n  getVersionfeatures,\n  SetVersionfeaturesParams,\n\n  getMiniBrandsClearData,\n  getMiniBrandFamilyClearData,\n  getMiniPriorityClearData,\n  getMiniModelsClearData,\n  getMiniVehicletypesClearData,\n})(filter);\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Input,\n  Card,\n  Pagination,\n  Spin,\n  Popconfirm,\n  Button,\n} from \"antd\";\nimport { Table, Space } from \"antd\";\nimport Swal from \"sweetalert2\";\nimport { FilterOutlined } from \"@ant-design/icons\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { Search } from \"react-iconly\";\nimport { connect } from \"react-redux\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport {\n  getVersions,\n  versionsEdit,\n  versionsDelete,\n  isModelVisible,\n  SetVersionsParams,\n  isDrawerVisible,\n} from \"../../../../store/Masters/Versions/versionsSlice\";\nimport AddVersions from \"./addVersions\";\nimport {\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniPriority,\n  getMiniModels,\n  getMiniVehicletypes,\n} from \"../../../../store/mini/miniSlice\";\nimport Filter from \"./Filters/Filter\";\nimport { isMobile } from \"react-device-detect\";\n\nfunction Versions(props) {\n  useEffect(() => {\n    props.getVersions({ page: 1, search: \"\", page_size: 10 });\n  }, []);\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: 70,\n      fixed: isMobile ? null : \"left\",\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: 120,\n      fixed: isMobile ? null : \"left\",\n    },\n    {\n      title: \"Version Name\",\n      render: (row) => <span className={columnClass}>{row.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: 150,\n    },\n    {\n      title: \"Fuel Type\",\n      render: (row) => <span className={columnClass}>{row.fueltype_name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: 100,\n    },\n    {\n      title: \"Engine Displacement\",\n      render: (row) => (\n        <span className={columnClass}>{row.enginedisplacement_name}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: 100,\n    },\n    {\n      title: \"Brand\",\n      filterMode: \"tree\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: 120,\n      render: (row) => <span className={columnClass}>{row.brand?.name}</span>,\n    },\n    {\n      title: \"Brand Family\",\n      filterMode: \"tree\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: 120,\n      render: (row) => (\n        <span className={columnClass}>{row.brandfamily?.name}</span>\n      ),\n    },\n    {\n      title: \"Model\",\n      filterMode: \"tree\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: 100,\n      render: (row) => <span className={columnClass}>{row.model?.name}</span>,\n    },\n    {\n      title: \"Vehicle Type\",\n      filterMode: \"tree\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: 100,\n      render: (row) => (\n        <span className={columnClass}>{row.vehicletype?.name}</span>\n      ),\n    },\n    {\n      title: \"Priority\",\n      filterMode: \"tree\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: 100,\n      render: (row) => (\n        <span className={columnClass}>{row.priority?.name}</span>\n      ),\n    },\n    {\n      title: \"First Party \",\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 100,\n      render: (row) => <span className={columnClass}>{row.firstparty}</span>,\n    },\n    {\n      title: \"Second Party \",\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 100,\n      render: (row) => <span className={columnClass}>{row.secondparty}</span>,\n    },\n    {\n      title: \"Third Party \",\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 100,\n      render: (row) => <span className={columnClass}>{row.thirdparty}</span>,\n    },\n    {\n      title: \"Defaulter \",\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 100,\n      render: (row) => <span className={columnClass}>{row.defaulter.toString()}</span>,\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: 100,\n      fixed: isMobile ? null : \"right\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n           {props.userAccessList?.indexOf(\"Masters.change_version\") !== -1 && (\n          <i\n            className=\"ri-edit-box-line hp-mr-2 \"\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n            onClick={() => {\n              props.versionsEdit(row);\n              props.getMiniModels({ brand: row.brand.id });\n              props.getMiniBrandFamily({ brand: row.brand.id });\n              props.isModelVisible(true);\n            }}\n          ></i>\n           )}\n\n        {props.userAccessList?.indexOf(\"Masters.delete_version\") !== -1 && (\n          <Popconfirm\n            placement=\"topRight\"\n            title=\"Are you sure to delete this Record?\"\n            onConfirm={() => props.versionsDelete(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            className=\"hp-ml-8\"\n            icon={\n              <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n            }\n          >\n            <i\n              className=\"ri-delete-bin-2-line \"\n              style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n            ></i>\n          </Popconfirm>\n        )}\n        </Space>\n      ),\n    },\n  ];\n\n  const data = props.versionslist.map((row, key) => ({\n    ...row,\n    index:\n      (props.versionsParams.page - 1) * props.versionsParams.page_size +\n      key +\n      1,\n  }));\n\n  function onPageChange(page, pageSize) {\n    props.SetVersionsParams({\n      ...props.versionsParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getVersions({\n      ...props.versionsParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.SetVersionsParams({ ...props.versionsParams, search: val });\n    props.getVersions({ ...props.versionsParams, search: val });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  const { Search } = Input;\n\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Versions Master\"\n        addModelTile={\n          props.userAccessList?.indexOf(\"Masters.add_version\") !== -1 &&\n          \"Add Version\"\n        }\n        goBack={true}\n        setIsModalVisible={props.isModelVisible}\n        isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\" gutter={[12, 12]}>\n            <Col sspan={24} xs={20} sm={20} md={14} lg={14} xl={14} xxl={14}>\n              <Search\n                placeholder=\"Search...\"\n                allowClear\n                onChange={(e) => {\n                  if (e.target.value == \"\") {\n                    props.getVersions({\n                      ...props.versionsParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                    props.SetVersionsParams({\n                      ...props.versionsParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                  }\n                }}\n                onSearch={(value) => {\n                  onSearch(value);\n                }}\n              />\n            </Col>\n            <Col span={24} xs={4} sm={4} md={6} lg={6} xl={6} xxl={6}>\n              <Button\n                onClick={() => {\n                  props.isDrawerVisible(true);\n                }}\n                className=\"bg-color\"\n                icon={<FilterOutlined className=\"hp-mr-10\" />}\n              >\n                {!isMobile && \"Filter\"}\n              </Button>\n            </Col>\n            </Row>\n\n            <Row>\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 1300 }}\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.versionsParams?.page}\n                pageSize={props.versionsParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <AddVersions />\n      <Filter />\n    </Row>\n  );\n}\n\nfunction mapAreaToProps({ versions, system }) {\n  return {\n    versionslist: versions.versionslist,\n    noofpages: versions.noofpages,\n    listCount: versions.listCount,\n    versionsParams: versions.versionsParams,\n    loading: versions.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapAreaToProps, {\n  getVersions,\n  versionsEdit,\n  versionsDelete,\n  isModelVisible,\n  SetVersionsParams,\n  isDrawerVisible,\n\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniPriority,\n  getMiniModels,\n  getMiniVehicletypes,\n})(Versions);\n"],"sourceRoot":""}