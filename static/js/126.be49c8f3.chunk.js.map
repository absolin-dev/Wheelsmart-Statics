{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","assets/images/app/empty-list.svg","view/pages/Reports/DailyAttendance/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","reports","mini","modelName","reportParamsData","reportDataList","loading","columnsList","miniFirmList","reportView","InputChangeValue","getReportList","clearData","getMiniFirm","Form","useForm","form","disableDateRanges","range","startDate","endDate","current","startCheck","endCheck","moment","format","useEffect","columns","map","column","title","dataIndex","unshift","data","row","key","index","setFieldsValue","start_date","end_date","file_format","clockout__auto_out_time","user__employee__firm","gutter","layout","name","initialValues","remember","onFinish","params","objData","model_name","ParamsData","startOf","endOf","add","xs","md","xl","Item","label","rules","required","message","Group","onChange","e","target","value","Button","style","width","picker","placeholder","disabledDate","date","showSearch","filterOption","input","option","children","toLowerCase","includes","optionFilterProp","firm","Option","id","disabled","allowClear","autoCheckout","offset","htmlType","submit","length","dataSource","scroll","x","pagination","image","EmptyImage","imageStyle","height","description"],"mappings":"0IAAA,sHAQe,SAASA,EAAgBC,GACtC,IAAIC,EAAUC,cACNC,EACNH,EADMG,UAAWC,EACjBJ,EADiBI,SAAUC,EAC3BL,EAD2BK,aAAcC,EACzCN,EADyCM,OAAQC,EACjDP,EADiDO,kBAGnD,OACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAD,CAAMC,UAAU,SAAhB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKD,KAAM,GAAX,UACGF,GACC,cAAC,IAAD,CACEI,GAAG,IACHC,QAAS,kBAAMV,EAAQK,QAAd,EACTG,UAAU,uDAHZ,SAKE,cAAC,IAAD,CAAuBA,UAAU,aAAaG,KAAM,OAGxD,eAAC,IAAD,CAAKH,UAAU,oBAAf,UACE,cAAC,IAAD,CAAKD,KAAM,GAAX,SACGL,GAAa,oBAAIM,UAAU,SAAd,SAAwBN,MAGxC,cAAC,IAAD,CAAKK,KAAM,GAAX,SACGJ,GAAY,mBAAGK,UAAU,qBAAb,SAAmCL,YAItD,cAAC,IAAD,CAAKI,KAAM,EAAX,SACGH,GACC,cAAC,IAAD,CACEI,UAAU,iBACVI,KAAK,UACLF,QAAS,kBAAMJ,GAAkB,EAAxB,EACTO,OAAK,EACLC,KAAM,cAAC,IAAD,CAAiBN,UAAU,aAAaG,KAAM,KALtD,UAOII,YAAYX,YAQ7B,C,mCCtDc,QAA0B,sC,6QCie1BY,uBAZf,YAA6C,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAClC,MAAO,CACLC,UAAWF,EAAQE,UACnBC,iBAAkBH,EAAQG,iBAC1BC,eAAgBJ,EAAQI,eACxBC,QAASL,EAAQK,QACjBC,YAAaN,EAAQM,YACrBC,aAAcN,EAAKM,aACnBC,WAAYR,EAAQQ,WAEvB,GAEuC,CACtCC,qBACAC,kBACAC,cACAC,iBAJab,EAtcf,SAA+BjB,GAAQ,IAAD,UACpC,EAAe+B,IAAKC,UAAbC,EAAP,oBAoDA,SAASC,IAAiE,IAA/CC,EAA8C,uDAAtC,CAAEC,WAAW,EAAOC,SAAS,GACtDD,EAAuBD,EAAvBC,UAAWC,EAAYF,EAAZE,QACnB,OAAO,SAAsBC,GAC3B,IAAIC,GAAa,EACbC,GAAW,EAgBf,OAfIJ,IACFG,EACED,GACAA,EAAUG,IAAOL,EAAY,YAAa,wBAE1CC,IACFG,EACEF,GACAA,EACEG,IACEA,IAAOJ,GAASK,OAAO,cAAgB,YACvC,wBAIAN,GAAaG,GAAgBF,GAAWG,CACjD,CACF,CAvEDG,qBAAU,WACR3C,EAAM6B,YACN7B,EAAM8B,aACP,GAAE,IAuEH,IAAMc,EAAU5C,EAAMwB,YAAYqB,KAAI,SAACC,GACrC,MAAO,CACLC,MAAOD,EACPE,UAAWF,EAEd,IACDF,EAAQK,QAAQ,CAAEF,MAAO,OAAQC,UAAW,UAE5C,IAAME,EAAOlD,EAAMsB,eAAeuB,KAAI,SAACM,EAAKC,GAAN,mBAAC,eAClCD,GADiC,IAEpCE,MAAOD,EAAM,GAFuB,IActC,OATAT,qBAAU,WAAO,IAAD,UACdV,EAAKqB,eAAe,CAClBC,WAAU,UAAEvD,EAAMqB,wBAAR,aAAE,EAAwBkC,WACpCC,SAAQ,UAAExD,EAAMqB,wBAAR,aAAE,EAAwBmC,SAClCC,YAAW,UAAEzD,EAAMqB,wBAAR,aAAE,EAAwBoC,YACrCC,wBAAuB,UAAE1D,EAAMqB,wBAAR,aAAE,EAAwBqC,wBACjDC,qBAAoB,UAAE3D,EAAMqB,wBAAR,aAAE,EAAwBsC,sBAEjD,GAAE,CAAC3D,EAAMqB,mBAER,eAAC,IAAD,CAAKuC,OAAQ,CAAC,GAAI,IAAKnD,UAAU,WAAjC,UACE,cAAC,IAAD,CACEN,UAAU,yBAEVG,QAAQ,IAKV,cAAC,IAAD,CAAKE,KAAM,GAAX,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CACEyB,KAAMA,EACN4B,OAAO,WACPC,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SAjGO,WACf,GAA0C,QAAtCjE,EAAMqB,iBAAiBoC,YACzB,IAAI,EAA6BzD,EAAMqB,iBAAjCoC,EAAN,EAAMA,YAAgBS,EAAtB,iBACIC,EAAU,CACZV,YAAa,EACbW,WAAY,6BAGd,KAAI,EAA6BpE,EAAMqB,iBAAjCoC,EAAN,EAAMA,YAAgBS,EAAtB,iBACIC,EAAU,CACZV,YAAaA,EACbW,WAAY,mBAHd,CAMFpE,EAAM4B,cAAc,CAClBuC,UACAE,WAAW,2BACNH,GADK,IAERX,WACuB,MAArBW,EAAOX,WACmB,yBAAtBY,EAAQC,WACN3B,IAAOyB,EAAOX,YAAYe,QAAQ,SAAS5B,OAAO,cAClDD,IAAOyB,EAAOX,YAAYb,OAAO,cACnC,GACNc,SACwB,yBAAtBW,EAAQC,WACJ3B,IAAOyB,EAAOX,YAAYgB,MAAM,SAAS7B,OAAO,cAC7B,MAAnBwB,EAAOV,SACPf,IAAOyB,EAAOV,UAAUgB,IAAI,EAAG,QAAQ9B,OAAO,cAC9C,MAGX,EA4DO,UAOE,eAAC,IAAD,CAAKkB,OAAQ,CAAC,GAAI,IAAlB,UACE,cAAC,IAAD,CAAKpD,KAAM,GAAIiE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAnC,SACE,cAAC,IAAKC,KAAN,CACEC,MAAM,gBACNf,KAAK,cACLgB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,sCANf,SAUE,eAAC,IAAMC,MAAP,CACEnB,KAAK,cACLoB,SA7HlB,SAAwBC,GACtBnF,EAAM2B,iBAAiB,CACrByB,IAAK+B,EAAEC,OAAOtB,KACduB,MAAOF,EAAEC,OAAOC,OAEnB,EAyHiBA,MAAK,UAAErF,EAAMqB,wBAAR,aAAE,EAAwBoC,YAHjC,UAKE,cAAC,IAAM6B,OAAP,CAAcD,MAAO,EAArB,iBACA,cAAC,IAAMC,OAAP,CAAcD,MAAO,EAArB,kBACA,cAAC,IAAMC,OAAP,CAAcD,MAAO,OAArB,sBACA,cAAC,IAAMC,OAAP,CAAcD,MAAO,EAArB,yBAKiC,QAAtCrF,EAAMqB,iBAAiBoC,YACtB,qCACG,IACD,cAAC,IAAD,CAAKjD,KAAM,GAAIiE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAlC,SACE,cAAC,IAAKC,KAAN,CACEC,MAAM,eACNf,KAAK,aACLgB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,yBANf,SAUE,cAAC,IAAD,CACEO,MAAO,CAAEC,MAAO,QAChBC,OAAO,QACPC,YAAY,cACZhD,OAAO,UACPiD,aAAczD,EAAkB,CAC9BG,QAASI,QAEXyC,SAAU,SAACU,GACT5F,EAAM2B,iBAAiB,CACrByB,IAAK,aACLiC,MAAe,MAARO,EAAe,GAAKA,IAEjB,MAARA,GACF5F,EAAM2B,iBAAiB,CACrByB,IAAK,WACLiC,MAAO,IAGZ,QAIP,cAAC,IAAD,CAAK7E,KAAM,GAAIiE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAlC,SACE,cAAC,IAAKC,KAAN,CACEC,MAAM,cACNf,KAAK,uBACLgB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,yBANf,SAUE,cAAC,IAAD,CACEa,YAAU,EACVC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SACJC,cACAC,SAASJ,EAAMG,cAHN,EAKdR,YAAY,sBACZU,iBAAiB,uBACjBlB,SAAU,SAACG,GACTrF,EAAM2B,iBAAiB,CACrByB,IAAK,uBACLiC,MAAOA,GAEV,EACDA,MACiD,MAA/CrF,EAAMqB,iBAAiBsC,qBACnB,GADJ,UAEI3D,EAAMqB,wBAFV,aAEI,EAAwBsC,qBAlBhC,SAqBG3D,EAAMyB,aAAaoB,KAAI,SAACwD,EAAMhD,GAC7B,OACE,cAACiD,OAAD,CAAoBjB,MAAOgB,EAAKE,GAAhC,SACGF,EAAKvC,MADKT,EAIhB,aAMT,qCACE,cAAC,IAAD,CAAK7C,KAAM,GAAIiE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAlC,SACE,cAAC,IAAKC,KAAN,CACEC,MAAM,YACNf,KAAK,aACLgB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCANf,SAUE,cAAC,IAAD,CACEO,MAAO,CAAEC,MAAO,QAChBC,OAAO,OACPC,YAAY,cACZhD,OAAO,aACPiD,aAAczD,EAAkB,CAC9BG,QAASI,QAEXyC,SAAU,SAACU,GACT5F,EAAM2B,iBAAiB,CACrByB,IAAK,aACLiC,MAAe,MAARO,EAAe,GAAKA,IAEjB,MAARA,GACF5F,EAAM2B,iBAAiB,CACrByB,IAAK,WACLiC,MAAO,IAGZ,QAKP,cAAC,IAAD,CAAK7E,KAAM,GAAIiE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAlC,SACE,cAAC,IAAKC,KAAN,CACEC,MAAM,UACNf,KAAK,WACLgB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCANf,SAUE,cAAC,IAAD,CACEO,MAAO,CAAEC,MAAO,QAChBC,OAAO,OACPC,YAAY,cACZhD,OAAO,aACPiD,aAAczD,EAAkB,CAC9BG,QAASI,MAASC,OAAO,cACzBN,UAAWK,IAAM,UACfzC,EAAMqB,wBADS,aACf,EAAwBkC,YACxBb,OAAO,gBAEX8D,SACuC,MAArCxG,EAAMqB,iBAAiBkC,YACc,IAArCvD,EAAMqB,iBAAiBkC,WAIzB2B,SAAU,SAACU,GACT5F,EAAM2B,iBAAiB,CACrByB,IAAK,WACLiC,MAAe,MAARO,EAAe,GAAKA,GAE9B,QAIP,cAAC,IAAD,CAAKpF,KAAM,GAAIiE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAlC,SACE,cAAC,IAAKC,KAAN,CAAWC,MAAM,cAAcf,KAAK,uBAApC,SACE,cAAC,IAAD,CACE+B,YAAU,EACVC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SACJC,cACAC,SAASJ,EAAMG,cAHN,EAKdR,YAAY,cACZU,iBAAiB,uBACjBlB,SAAU,SAACG,GACTrF,EAAM2B,iBAAiB,CACrByB,IAAK,uBACLiC,MAAOA,GAEV,EACDA,MACiD,MAA/CrF,EAAMqB,iBAAiBsC,qBACnB,GADJ,UAEI3D,EAAMqB,wBAFV,aAEI,EAAwBsC,qBAlBhC,SAqBG3D,EAAMyB,aAAaoB,KAAI,SAACwD,EAAMhD,GAC7B,OACE,cAACiD,OAAD,CAAoBjB,MAAOgB,EAAKE,GAAhC,SACGF,EAAKvC,MADKT,EAIhB,UAIP,cAAC,IAAD,CAAK7C,KAAM,GAAIiE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAlC,SACE,cAAC,IAAKC,KAAN,CACEC,MAAM,gBACNf,KAAK,0BAFP,SAIE,cAAC,IAAD,CACE+B,YAAU,EACVY,YAAU,EACVf,YAAY,uBACZU,iBAAiB,iBACjBN,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SACJC,cACAC,SAASJ,EAAMG,cAHN,EAKdhB,SAAU,SAACG,GACTrF,EAAM2B,iBAAiB,CACrByB,IAAK,0BACLiC,MAAOA,GAEV,EACDA,MACoD,MAAlDrF,EAAMqB,iBAAiBqC,wBACnB,GADJ,UAEI1D,EAAMqB,wBAFV,aAEI,EAAwBqC,wBAnBhC,SAjUO,CACzB,CAAE2B,OAAO,EAAMvB,KAAM,OACrB,CAAEuB,OAAO,EAAOvB,KAAM,OAqVkBjB,KAAI,SAAC6D,EAAcrD,GACrC,OACE,cAACiD,OAAD,CAAoBjB,MAAOqB,EAAarB,MAAxC,SACGqB,EAAa5C,MADHT,EAIhB,gBAOb,cAAC,IAAD,CAAKO,OAAQ,CAAC,GAAI,IAAlB,SACE,eAAC,IAAD,CAAKc,GAAI,GAAIiC,OAAQ,GAArB,UACE,cAAC,IAAD,CAEE9F,KAAK,YACLJ,UAAU,iDACVE,QAAS,WACPX,EAAM6B,WACP,EACD+E,SAAS,SAPX,mBAWA,cAAC,IAAD,CAEE/F,KAAK,UACLJ,UAAU,wCACV+F,SAAUxG,EAAMuB,QAChBA,QAASvB,EAAMuB,QACfZ,QAAS,WACPsB,EAAK4E,QACN,EARH,yCAkBV,cAAC,IAAD,CAAKrG,KAAM,GAAX,SACGR,EAAM0B,YACL,mCACkC,GAA/B1B,EAAMsB,eAAewF,QACgB,GAAtC9G,EAAMqB,iBAAiBoC,YACrB,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKhD,UAAU,WAAf,SACE,cAAC,IAAD,CAAKD,KAAM,GAAX,SACE,cAAC,IAAD,CACEoC,QAASA,EACTmE,WAAY7D,EACZ8D,OAAQ,CAAEC,EAAG,KACbC,YAAY,EACZtG,KAAK,SACLW,QAASvB,EAAMuB,kBAOzB,cAAC,IAAD,UACE,cAAC,IAAD,CACEd,UAAU,UACV0G,MAAOC,IACPC,WAAY,CACVC,OAAQ,KAEVC,YAAa,gFAS9B,G","file":"static/js/126.be49c8f3.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/empty-list.6fd5c5d1.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  DatePicker,\r\n  Button,\r\n  Radio,\r\n  Empty,\r\n  Table,\r\n  Select,\r\n  Progress \r\n} from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport EmptyImage from \"../../../../assets/images/app/empty-list.svg\";\r\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\r\n\r\nimport {\r\n  InputChangeValue,\r\n  getReportList,\r\n  clearData,\r\n} from \"../../../../store/reports/reportsSlice\";\r\nimport { getMiniFirm } from \"../../../../store/mini/miniSlice\";\r\nimport { func } from \"prop-types\";\r\n\r\nfunction DailyAttendanceReport(props) {\r\n  const [form] = Form.useForm();\r\n  const columnClass =\r\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\r\n  useEffect(() => {\r\n    props.clearData();\r\n    props.getMiniFirm();\r\n  }, []);\r\n  function ChangeHandeler(e) {\r\n    props.InputChangeValue({\r\n      key: e.target.name,\r\n      value: e.target.value,\r\n    });\r\n  }\r\n\r\n  const autoCheckoutStatus = [\r\n    { value: true, name: \"Yes\" },\r\n    { value: false, name: \"No\" },\r\n  ];\r\n\r\n  const onFinish = () => {\r\n    if (props.reportParamsData.file_format == \"HRMS\") {\r\n      var { file_format, ...params } = props.reportParamsData;\r\n      var objData = {\r\n        file_format: 0,\r\n        model_name: \"HRMS Daily Attendance\",\r\n      };\r\n    } else {\r\n      var { file_format, ...params } = props.reportParamsData;\r\n      var objData = {\r\n        file_format: file_format,\r\n        model_name: \"Daily Attendance\",\r\n      };\r\n    }\r\n    props.getReportList({\r\n      objData,\r\n      ParamsData: {\r\n        ...params,\r\n        start_date:\r\n          params.start_date != null\r\n            ? objData.model_name == \"HRMS Daily Attendance\"\r\n              ? moment(params.start_date).startOf(\"month\").format(\"YYYY-MM-DD\")\r\n              : moment(params.start_date).format(\"YYYY-MM-DD\")\r\n            : \"\",\r\n        end_date:\r\n          objData.model_name == \"HRMS Daily Attendance\"\r\n            ? moment(params.start_date).endOf(\"month\").format(\"YYYY-MM-DD\")\r\n            : params.end_date != null\r\n            ? moment(params.end_date).add(1, \"days\").format(\"YYYY-MM-DD\")\r\n            : \"\",\r\n      },\r\n    });\r\n  };\r\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\r\n    const { startDate, endDate } = range;\r\n    return function disabledDate(current) {\r\n      let startCheck = true;\r\n      let endCheck = true;\r\n      if (startDate) {\r\n        startCheck =\r\n          current &&\r\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\r\n      }\r\n      if (endDate) {\r\n        endCheck =\r\n          current &&\r\n          current >\r\n            moment(\r\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\r\n              \"YYYY-MM-DD HH:mm:ss\"\r\n            );\r\n      }\r\n\r\n      return (startDate && startCheck) || (endDate && endCheck);\r\n    };\r\n  }\r\n\r\n\r\n  const columns = props.columnsList.map((column) => {\r\n    return {\r\n      title: column,\r\n      dataIndex: column,\r\n    };\r\n  });\r\n  columns.unshift({ title: \"S.No\", dataIndex: \"index\" });\r\n\r\n  const data = props.reportDataList.map((row, key) => ({\r\n    ...row,\r\n    index: key + 1,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      start_date: props.reportParamsData?.start_date,\r\n      end_date: props.reportParamsData?.end_date,\r\n      file_format: props.reportParamsData?.file_format,\r\n      clockout__auto_out_time: props.reportParamsData?.clockout__auto_out_time,\r\n      user__employee__firm: props.reportParamsData?.user__employee__firm\r\n    });\r\n  }, [props.reportParamsData]);\r\n  return (\r\n    <Row gutter={[12, 12]} className=\"hp-mt-32\">\r\n      <MasterPageTitle\r\n        pageTitle=\"DailyAttendance Report\"\r\n        // addModelTile=\"Add Zone\"\r\n        goBack={true}\r\n        // setIsModalVisible={props.isModelVisible}\r\n        // isModalVisible={props.model}\r\n      />\r\n\r\n      <Col span={24}>\r\n        <Card>\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Row gutter={[12, 12]}>\r\n              <Col span={24} xs={24} md={24} xl={24}>\r\n                <Form.Item\r\n                  label=\"Report Format\"\r\n                  name=\"file_format\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select Your Report Format!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group\r\n                    name=\"file_format\"\r\n                    onChange={ChangeHandeler}\r\n                    value={props.reportParamsData?.file_format}\r\n                  >\r\n                    <Radio.Button value={0}>CSV</Radio.Button>\r\n                    <Radio.Button value={2}>XLSX</Radio.Button>\r\n                    <Radio.Button value={\"HRMS\"}>HRMS CSV</Radio.Button>\r\n                    <Radio.Button value={5}>VIEW</Radio.Button>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              {props.reportParamsData.file_format == \"HRMS\" ? (\r\n                <>\r\n                  {\" \"}\r\n                  <Col span={24} xs={24} md={8} xl={6}>\r\n                    <Form.Item\r\n                      label=\"Select Month\"\r\n                      name=\"start_date\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please select Month!\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <DatePicker\r\n                        style={{ width: \"100%\" }}\r\n                        picker=\"month\"\r\n                        placeholder=\"Choose Date\"\r\n                        format=\"MM-YYYY\"\r\n                        disabledDate={disableDateRanges({\r\n                          endDate: moment(),\r\n                        })}\r\n                        onChange={(date) => {\r\n                          props.InputChangeValue({\r\n                            key: \"start_date\",\r\n                            value: date == null ? \"\" : date,\r\n                          });\r\n                          if (date == null) {\r\n                            props.InputChangeValue({\r\n                              key: \"end_date\",\r\n                              value: \"\",\r\n                            });\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24} xs={24} md={8} xl={6}>\r\n                    <Form.Item\r\n                      label=\"Select Firm\"\r\n                      name=\"user__employee__firm\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please select Month!\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        showSearch\r\n                        filterOption={(input, option) =>\r\n                          option.children\r\n                            .toLowerCase()\r\n                            .includes(input.toLowerCase())\r\n                        }\r\n                        placeholder=\"Select Enquiry Type\"\r\n                        optionFilterProp=\"user__employee__firm\"\r\n                        onChange={(value) => {\r\n                          props.InputChangeValue({\r\n                            key: \"user__employee__firm\",\r\n                            value: value,\r\n                          });\r\n                        }}\r\n                        value={\r\n                          props.reportParamsData.user__employee__firm == null\r\n                            ? \"\"\r\n                            : props.reportParamsData?.user__employee__firm\r\n                        }\r\n                      >\r\n                        {props.miniFirmList.map((firm, index) => {\r\n                          return (\r\n                            <Option key={index} value={firm.id}>\r\n                              {firm.name}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Col span={24} xs={24} md={8} xl={6}>\r\n                    <Form.Item\r\n                      label=\"From Date\"\r\n                      name=\"start_date\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please select Your From Date!\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <DatePicker\r\n                        style={{ width: \"100%\" }}\r\n                        picker=\"date\"\r\n                        placeholder=\"Choose Date\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        disabledDate={disableDateRanges({\r\n                          endDate: moment(),\r\n                        })}\r\n                        onChange={(date) => {\r\n                          props.InputChangeValue({\r\n                            key: \"start_date\",\r\n                            value: date == null ? \"\" : date,\r\n                          });\r\n                          if (date == null) {\r\n                            props.InputChangeValue({\r\n                              key: \"end_date\",\r\n                              value: \"\",\r\n                            });\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col span={24} xs={24} md={8} xl={6}>\r\n                    <Form.Item\r\n                      label=\"To Date\"\r\n                      name=\"end_date\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please select Your To Date!\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <DatePicker\r\n                        style={{ width: \"100%\" }}\r\n                        picker=\"date\"\r\n                        placeholder=\"Choose Date\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        disabledDate={disableDateRanges({\r\n                          endDate: moment().format(\"YYYY-MM-DD\"),\r\n                          startDate: moment(\r\n                            props.reportParamsData?.start_date\r\n                          ).format(\"YYYY-MM-DD\"),\r\n                        })}\r\n                        disabled={\r\n                          props.reportParamsData.start_date == null ||\r\n                          props.reportParamsData.start_date == \"\"\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(date) => {\r\n                          props.InputChangeValue({\r\n                            key: \"end_date\",\r\n                            value: date == null ? \"\" : date,\r\n                          });\r\n                        }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24} xs={24} md={8} xl={6}>\r\n                    <Form.Item label=\"Select Firm\" name=\"user__employee__firm\">\r\n                      <Select\r\n                        showSearch\r\n                        filterOption={(input, option) =>\r\n                          option.children\r\n                            .toLowerCase()\r\n                            .includes(input.toLowerCase())\r\n                        }\r\n                        placeholder=\"Select Firm\"\r\n                        optionFilterProp=\"user__employee__firm\"\r\n                        onChange={(value) => {\r\n                          props.InputChangeValue({\r\n                            key: \"user__employee__firm\",\r\n                            value: value,\r\n                          });\r\n                        }}\r\n                        value={\r\n                          props.reportParamsData.user__employee__firm == null\r\n                            ? \"\"\r\n                            : props.reportParamsData?.user__employee__firm\r\n                        }\r\n                      >\r\n                        {props.miniFirmList.map((firm, index) => {\r\n                          return (\r\n                            <Option key={index} value={firm.id}>\r\n                              {firm.name}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24} xs={24} md={8} xl={6}>\r\n                    <Form.Item\r\n                      label=\"Auto Checkout\"\r\n                      name=\"clockout__auto_out_time\"\r\n                    >\r\n                      <Select\r\n                        showSearch\r\n                        allowClear\r\n                        placeholder=\"Select Auto Checkout\"\r\n                        optionFilterProp=\"approvalstatus\"\r\n                        filterOption={(input, option) =>\r\n                          option.children\r\n                            .toLowerCase()\r\n                            .includes(input.toLowerCase())\r\n                        }\r\n                        onChange={(value) => {\r\n                          props.InputChangeValue({\r\n                            key: \"clockout__auto_out_time\",\r\n                            value: value,\r\n                          });\r\n                        }}\r\n                        value={\r\n                          props.reportParamsData.clockout__auto_out_time == null\r\n                            ? \"\"\r\n                            : props.reportParamsData?.clockout__auto_out_time\r\n                        }\r\n                      >\r\n                        {autoCheckoutStatus.map((autoCheckout, index) => {\r\n                          return (\r\n                            <Option key={index} value={autoCheckout.value}>\r\n                              {autoCheckout.name}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </Row>\r\n            <Row gutter={[12, 12]}>\r\n              <Col md={12} offset={12}>\r\n                <Button\r\n                  // block\r\n                  type=\"secondary\"\r\n                  className=\"hp-submit-btn hp-float-right hp-mt-10 hp-ml-10\"\r\n                  onClick={() => {\r\n                    props.clearData();\r\n                  }}\r\n                  htmlType=\"button\"\r\n                >\r\n                  Clear\r\n                </Button>\r\n                <Button\r\n                  // block\r\n                  type=\"primary\"\r\n                  className=\"hp-submit-btn hp-float-right hp-mt-10\"\r\n                  disabled={props.loading}\r\n                  loading={props.loading}\r\n                  onClick={() => {\r\n                    form.submit();\r\n                  }}\r\n                >\r\n                  Generate Report\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        {props.reportView && (\r\n          <>\r\n            {props.reportDataList.length != 0 &&\r\n            props.reportParamsData.file_format == 5 ? (\r\n              <>\r\n                <Card>\r\n                  <Row className=\"hp-mb-12\">\r\n                    <Col span={24}>\r\n                      <Table\r\n                        columns={columns}\r\n                        dataSource={data}\r\n                        scroll={{ x: 500 }}\r\n                        pagination={false}\r\n                        size=\"middle\"\r\n                        loading={props.loading}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card>\r\n                <Empty\r\n                  className=\"hp-m-32\"\r\n                  image={EmptyImage}\r\n                  imageStyle={{\r\n                    height: 160,\r\n                  }}\r\n                  description={<h5>Your DailyAttendance Report is empty</h5>}\r\n                ></Empty>\r\n              </Card>\r\n            )}\r\n          </>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ reports, mini }) {\r\n  return {\r\n    modelName: reports.modelName,\r\n    reportParamsData: reports.reportParamsData,\r\n    reportDataList: reports.reportDataList,\r\n    loading: reports.loading,\r\n    columnsList: reports.columnsList,\r\n    miniFirmList: mini.miniFirmList,\r\n    reportView: reports.reportView\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  InputChangeValue,\r\n  getReportList,\r\n  clearData,\r\n  getMiniFirm,\r\n})(DailyAttendanceReport);\r\n"],"sourceRoot":""}