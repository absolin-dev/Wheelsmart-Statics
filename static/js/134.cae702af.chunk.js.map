{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","assets/images/app/empty-list.svg","view/pages/Reports/Sale/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","reports","mini","vehicles","modelName","reportParamsData","reportDataList","loading","columnsList","miniVehiclesList","miniZonesList","miniDivisionsList","miniClustersList","miniCountersList","vehiclesParams","reportView","InputChangeValue","getReportList","clearData","getVehicles","SetVehiclesParams","getMiniVehicles","getMiniDivisions","getMiniClusters","getMiniCounters","getMiniZones","getMiniZonesClearData","getMiniClustersClearData","getMiniDivisionsClearData","getMiniCountersClearData","Form","useForm","form","disableDateRanges","range","startDate","endDate","current","startCheck","endCheck","moment","format","useEffect","columns","map","column","title","dataIndex","unshift","data","row","key","index","setFieldsValue","start_date","end_date","file_format","saletype","approvalstatus","vehicle","counter__zone","counter__division","counter__cluster","counter","gutter","layout","name","initialValues","remember","onFinish","params","objData","model_name","ParamsData","add","xs","md","xl","Item","label","rules","required","message","style","width","picker","placeholder","disabledDate","onChange","date","value","disabled","hasFeedback","showSearch","allowClear","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","defaultActiveFirstOption","showArrow","id","sale","Option","approvals","onSearch","page","search","onPopupScroll","no_of_pages","vehicle_id","vehicleno","zone","zone_id","division","division_id","cluster","cluster_id","counter_id","Group","e","target","Button","offset","htmlType","submit","length","dataSource","scroll","x","pagination","image","EmptyImage","imageStyle","height","description"],"mappings":"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","file":"static/js/134.cae702af.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/empty-list.6fd5c5d1.svg\";","import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  DatePicker,\n  Button,\n  Radio,\n  Select,\n  Table,\n  Space,\n  Empty,\n} from \"antd\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport {\n  getMiniVehicles,\n  getMiniDivisions,\n  getMiniClusters,\n  getMiniCounters,\n  getMiniZones,\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n} from \"../../../../store/mini/miniSlice\";\nimport {\n  getVehicles,\n  SetVehiclesParams,\n} from \"../../../../store/Masters/Vehicles/vehiclesSlice\";\nimport EmptyImage from \"../../../../assets/images/app/empty-list.svg\";\nimport {\n  InputChangeValue,\n  getReportList,\n  clearData,\n} from \"../../../../store/reports/reportsSlice\";\n\nfunction SaleReport(props) {\n  const [form] = Form.useForm();\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n  useEffect(() => {\n    props.clearData();\n    props.getMiniVehicles();\n    props.getMiniZones();\n    props.getMiniCounters();\n    props.getMiniDivisions();\n    props.getMiniClusters();\n  }, []);\n\n  const salesTypeList = [\n    { id: 1, name: \"Direct Sale\" },\n    { id: 2, name: \"Finance Sale\" },\n    { id: 3, name: \"OVF Sale\" },\n  ];\n\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const onFinish = () => {\n    if (props.reportParamsData.file_format == \"HRMS\") {\n      var { file_format, ...params } = props.reportParamsData;\n      var objData = {\n        file_format: 2,\n        model_name: \"HRMS Daily Attendance\",\n      };\n    } else {\n      var { file_format, ...params } = props.reportParamsData;\n      var objData = {\n        file_format: file_format,\n        model_name: \"Sale\",\n      };\n    }\n    props.getReportList({\n      objData,\n      ParamsData: {\n        ...params,\n        start_date:\n          params.start_date != null\n            ? moment(params.start_date).format(\"YYYY-MM-DD\")\n            : \"\",\n        end_date:\n          params.end_date != null\n            ? moment(params.end_date).add(1, \"days\").format(\"YYYY-MM-DD\")\n            : \"\",\n      },\n    });\n  };\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  const columns = props.columnsList.map((column) => {\n    return {\n      title: column,\n      dataIndex: column,\n    };\n  });\n  columns.unshift({ title: \"S.No\", dataIndex: \"index\" });\n  const data = props.reportDataList.map((row, key) => ({\n    ...row,\n    index: key + 1,\n  }));\n\n  const approvalStatusList = [\n    { id: 1, name: \"Pending\" },\n    { id: 2, name: \"Approved\" },\n    { id: 3, name: \"Reject\" },\n  ];\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.reportParamsData?.start_date,\n      end_date: props.reportParamsData?.end_date,\n      file_format: props.reportParamsData?.file_format,\n      saletype:props.reportParamsData?.saletype,\n      approvalstatus: props.reportParamsData?.approvalstatus,\n      vehicle: props.reportParamsData?.vehicle,\n      counter__zone: props.reportParamsData?.counter__zone,\n      counter__division: props.reportParamsData?.counter__division,\n      counter__cluster: props.reportParamsData?.counter__cluster,\n      counter: props.reportParamsData?.counter,\n    });\n  }, [props.reportParamsData]);\n  return (\n    <Row gutter={[12, 12]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Sale Report\"\n        // addModelTile=\"Add Zone\"\n        goBack={true}\n        // setIsModalVisible={props.isModelVisible}\n        // isModalVisible={props.model}\n      />\n      <Col span={24}>\n        <Card>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 0]}>\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item\n                  label=\"From Date\"\n                  name=\"start_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your From Date!\",\n                    },\n                  ]}\n                >\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment(),\n                    })}\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"start_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                      if (date == null) {\n                        props.InputChangeValue({\n                          key: \"end_date\",\n                          value: \"\",\n                        });\n                      }\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item\n                  label=\"To Date\"\n                  name=\"end_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your To Date!\",\n                    },\n                  ]}\n                >\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment().format(\"YYYY-MM-DD\"),\n                      startDate: moment(\n                        props.reportParamsData?.start_date\n                      ).format(\"YYYY-MM-DD\"),\n                    })}\n                    disabled={\n                      props.reportParamsData.start_date == null ||\n                      props.reportParamsData.start_date == \"\"\n                        ? true\n                        : false\n                    }\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"end_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item\n                  label=\"Sale Type ?\"\n                  name=\"saletype\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter Sale Type ?\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Sale Type ?\"\n                    optionFilterProp=\"saletype\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    defaultActiveFirstOption={true}\n                    showArrow={true}\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"saletype\",\n                        value: value,\n                      });\n                    }}\n                    value={props.reportParamsData?.saletype}\n                  >\n                    {salesTypeList.map((sale, index) => {\n                      return (\n                        <Option key={index} value={sale.id}>\n                          {sale.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Approval Status\" name=\"approvalstatus\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Approval Status\"\n                    optionFilterProp=\"approvalstatus\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"approvalstatus\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.approvalstatus == null\n                        ? \"\"\n                        : props.reportParamsData?.approvalstatus\n                    }\n                  >\n                    {approvalStatusList.map((approvals, index) => {\n                      return (\n                        <Option key={index} value={approvals.id}>\n                          {approvals.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Vehicle\" name=\"vehicle\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Vehicle\"\n                    optionFilterProp=\"vehicle_id\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onSearch={(value) => {\n                      props.SetVehiclesParams({\n                        ...props.vehiclesParams,\n                        page: 1,\n                        search: value,\n                      });\n                      props.getVehicles({\n                        ...props.vehiclesParams,\n                        page: 1,\n                        search: value,\n                      });\n                    }}\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"vehicle\",\n                        value: value,\n                      });\n                    }}\n                    onPopupScroll={() => {\n                      if (\n                        props.vehiclesParams.page <\n                        props.vehiclesParams.no_of_pages\n                      ) {\n                        props.SetVehiclesParams({\n                          ...props.vehiclesParams,\n                          page: props.vehiclesParams.page + 1,\n                        });\n                        props.getVehicles({\n                          ...props.vehiclesParams,\n                          page: props.vehiclesParams.page + 1,\n                        });\n                      }\n                    }}\n                    value={\n                      props.reportParamsData.vehicle_id == null\n                        ? \"\"\n                        : props.reportParamsData?.vehicle_id\n                    }\n                  >\n                    {props.miniVehiclesList.map((vehicle, index) => {\n                      return (\n                        <Option key={index} value={vehicle.id}>\n                          {vehicle.vehicleno}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Zone :\" name=\"counter__zone\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Zone\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniDivisions({ zone: value });\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.InputChangeValue({\n                        key: \"counter__zone\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.zone_id == null\n                        ? \"\"\n                        : props.reportParamsData?.zone_id\n                    }\n                  >\n                    {props.miniZonesList.map((zone, index) => {\n                      return (\n                        <Option key={index} value={zone.id}>\n                          {zone.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Division:\" name=\"counter__division\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Division\"\n                    optionFilterProp=\"division\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniClusters({ division: value });\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.InputChangeValue({\n                        key: \"counter__division\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.division_id == null\n                        ? \"\"\n                        : props.reportParamsData?.division_id\n                    }\n                  >\n                    {props.miniDivisionsList.map((division, index) => {\n                      return (\n                        <Option key={index} value={division.id}>\n                          {division.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Cluster:\" name=\"counter__cluster\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Cluster\"\n                    optionFilterProp=\"cluster\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniCounters({ cluster: value });\n                      props.getMiniCountersClearData({});\n                      props.InputChangeValue({\n                        key: \"counter__cluster\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.cluster_id == null\n                        ? \"\"\n                        : props.reportParamsData?.cluster_id\n                    }\n                  >\n                    {props.miniClustersList.map((cluster, index) => {\n                      return (\n                        <Option key={index} value={cluster.id}>\n                          {cluster.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Counter\" name=\"counter\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Counter\"\n                    optionFilterProp=\"counter\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"counter\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.counter_id == null\n                        ? \"\"\n                        : props.reportParamsData?.counter_id\n                    }\n                  >\n                    {props.miniCountersList.map((counter, index) => {\n                      return (\n                        <Option key={index} value={counter.id}>\n                          {counter.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={10} xl={10}>\n                <Form.Item\n                  label=\"Report Format\"\n                  name=\"file_format\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your Report Format!\",\n                    },\n                  ]}\n                >\n                  <Radio.Group\n                    name=\"file_format\"\n                    onChange={ChangeHandeler}\n                    value={props.reportParamsData?.file_format}\n                  >\n                    <Radio.Button value={0}>CSV</Radio.Button>\n                    <Radio.Button value={2}>XLSX</Radio.Button>\n                    {/* <Radio.Button value={\"HRMS\"}>HRMS</Radio.Button> */}\n                    <Radio.Button value={5}>VIEW</Radio.Button>\n                  </Radio.Group>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col md={12} offset={12}>\n                <Button\n                  // block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-float-right hp-mt-10 hp-ml-10\"\n                  onClick={() => {\n                    props.clearData();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n                <Button\n                  // block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-float-right hp-mt-10\"\n                  disabled={props.loading}\n                  loading={props.loading}\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Generate Report\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Card>\n      </Col>\n\n      <Col span={24}>\n      {props.reportView && (\n          <>\n        {props.reportDataList.length != 0 &&\n        props.reportParamsData.file_format == 5 ? (\n          <>\n            <Card>\n              <Row className=\"hp-mb-12\">\n                <Col span={24}>\n                  <Table\n                    columns={columns}\n                    dataSource={data}\n                    scroll={{ x: 500 }}\n                    pagination={false}\n                    size=\"middle\"\n                    loading={props.loading}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </>\n        ) : (\n          <>\n            <Card>\n              <Empty\n                className=\"hp-m-32\"\n                image={EmptyImage}\n                imageStyle={{\n                  height: 160,\n                }}\n                description={<h5>Your Sale Report is empty</h5>}\n              ></Empty>\n            </Card>\n          </>\n        )}\n         </>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ reports, mini, vehicles }) {\n  return {\n    modelName: reports.modelName,\n    reportParamsData: reports.reportParamsData,\n    reportDataList: reports.reportDataList,\n    loading: reports.loading,\n    columnsList: reports.columnsList,\n    miniVehiclesList: mini.miniVehiclesList,\n    miniZonesList: mini.miniZonesList,\n    miniDivisionsList: mini.miniDivisionsList,\n    miniClustersList: mini.miniClustersList,\n    miniCountersList: mini.miniCountersList,\n    vehiclesParams: vehicles.vehiclesParams,\n    reportView: reports.reportView\n  };\n}\n\nexport default connect(mapStateToProps, {\n  InputChangeValue,\n  getReportList,\n  clearData,\n\n  getVehicles,\n  SetVehiclesParams,\n  getMiniVehicles,\n  getMiniDivisions,\n  getMiniClusters,\n  getMiniCounters,\n  getMiniZones,\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n})(SaleReport);\n"],"sourceRoot":""}