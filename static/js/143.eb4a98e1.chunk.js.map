{"version":3,"sources":["view/pages/Dashboard/purchases/purchasesAdd.jsx"],"names":["beforeUpload","file","isJpgOrPng","type","message","error","isLt2M","size","connect","purchase","mini","person","dealers","counterSales","miniVehiclesNonStockList","miniVehiclesNonStockParams","miniCountersList","miniFinanciersList","versionColorsList","miniBanksList","miniAddressProofList","miniInsuranceList","purchaseData","counterData","vehicleVersion","imageLooading","formSubmitLoading","personlist","personLoading","loading","personParams","dealerslist","dealersParams","searchPersonId","searchDealerId","dealerLoading","searchVehicleNonStockId","customerByIdList","mcApplicableList","mcApplicableParams","InputChangeValue","getVehicleData","getVehicleVersion","getPurchasesImageUpload","getFormulaExecuter","addPurchase","purchaseClear","getMiniVehiclesNonStock","setMiniVehiclesNonStockParams","getMiniCounters","getPurchaseDoc","getMiniFinanciers","getMiniBanks","getMiniAddressProof","getMiniInsurance","getVersionColors","SetPersonParams","Person","getPerson","customerIsModelVisible","vehicleIsModelVisible","Vehicles","SetDealersParams","getDealers","getCustomerById","insuranceNumberValidate","getMCApplicable","setMCApplicableParams","getSystemFormulas","props","Form","useForm","form","history","useHistory","id","useParams","ChangeHandeler","e","key","target","name","value","getRepairAmount","data","variablesData","OUTLOOKREPAIR","outlookrepair","parseInt","ENGINEREPAIR","enginerepair","BATTERY","battery","TYRE","tyre","repairAmountObj","code","variables","getCustomerPayable","PURCHASEAMOUNT","purchaserate","LOANAMOUNT","loanamount","TOTALREPAIR","totalrepairamount","INSURANCECHARGES","insuranceamount","GSTAMOUNT","RTACHARGES","rtocharges","ECHALLAN","echallan","CONSULTANCYCHARGES","consultancycharges","getCustomerCashAmount","TOTALAMOUNT","customerpaybleamount","CREDITAMOUNT","customercreditamount","BANKAMOUNT","customerbankamount","customerCashAmountObj","getTotalAmount","MCAMOUNT","mcamount","useEffect","page","search","TabPane","Tabs","uploadButton","className","checkAmount","Modal","icon","title","content","setFieldsValue","date","partytype","counter_id","customer_id","dealer_id","hypothecation","hypothecationisinternal","internalfinancier_id","externalfinanciername","financierbank_id","financieraccountnumber","financierifsccode","loanstatus","loannumber","tokenstatus","tokennumber","tokendate","insurancestatus","insurancecompany_id","insurancenumber","insuranceexpdate","vehicle_id","iscustomcolor","color_id","customcolor","vehiclereading","toString","customercashamount","mc_internal_type","externalmcname","externalmcmobile","externalmcbank_id","externalmcbankacno","externalmcifsccode","mcinternal_id","addressproof1_id","addressproof2_id","gutter","pageTitle","goBack","addModelTile","addModelTile2","setIsModalVisible","setIsModalVisible2","isModalVisible","model","isModalVisible2","span","layout","initialValues","remember","onFinish","purchaseObj","moment","Date","format","onFinishFailed","errorInfo","console","log","xs","xl","md","Item","label","style","width","picker","placeholder","defaultValue","disabled","onChange","rules","required","hasFeedback","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","map","counter","index","Option","onSearch","defaultActiveFirstOption","showArrow","forEach","customerDetails","onPopupScroll","no_of_pages","firstname","lastname","mobile","params","dealer","user","first_name","last_name","phone","loan","isinternal","Financier","mcBank","min","getValueProps","maxLength","onBlur","accono","info","pattern","RegExp","toUpperCase","ss","status","Insurance","undefined","disabledDate","range","startDate","endDate","current","startCheck","endCheck","disableDateRanges","add","vehicle","version","vehicleno","colorType","whitespace","color","paymentto","payment","mc","mcName","username","total","Addressproof","tab","listType","showUploadList","accept","customRequest","imageType","vehiclefront_image","src","alt","vehicleback_image","vehicleleft_image","vehicleright_image","insuranceimage","c35_image","rcfront_image","rcback_image","pollution_image","coveringletter_image","noc_image","customer_image","opacity","backgroundImage","dummy","aadharfront_image","aadhar","aadharback_image","aadharBack","addressproof1_image","sampleProof","addressproof2_image","htmlType"],"mappings":"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","file":"static/js/143.eb4a98e1.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Button,\n  DatePicker,\n  Select,\n  Tabs,\n  Spin,\n  message,\n  Upload,\n  Card,\n  Modal,\n} from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { LoadingOutlined, PlusOutlined, EditOutlined } from \"@ant-design/icons\";\n\nimport PageTitle from \"../../../../layout/components/content/page-title\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  InputChangeValue,\n  getVehicleData,\n  getVehicleVersion,\n  getPurchasesImageUpload,\n  addPurchase,\n  getFormulaExecuter,\n  getPurchaseDoc,\n  purchaseClear,\n  getCustomerById,\n  insuranceNumberValidate,\n} from \"../../../../store/sideMenu/purchases/purchasesSlice\";\nimport {\n  getMiniVehiclesNonStock,\n  setMiniVehiclesNonStockParams,\n  getMiniCounters,\n  getMiniFinanciers,\n  getMiniBanks,\n  getMiniAddressProof,\n  getVersionColors,\n  getMiniInsurance,\n} from \"../../../../store/mini/miniSlice\";\nimport { RiInformationLine } from \"react-icons/ri\";\n\nimport * as Person from \"../../../../store/Masters/Person/personSlice\";\nimport * as Vehicles from \"../../../../store/Masters/Vehicles/vehiclesSlice\";\n\nimport AddPerson from \"../../MastersDashboard/person/addPerson\";\nimport AddVehicles from \"../../MastersDashboard/vehicles/addVehicles\";\nimport {\n  getDealers,\n  SetDealersParams,\n} from \"../../../../store/Masters/Dealers/dealersSlice\";\n\nimport {\n  getMCApplicable,\n  setMCApplicableParams,\n} from \"../../../../store/sideMenu/vehicleCounterSales/vehicleCounterSalesSlice\";\nimport { getSystemFormulas } from \"../../../../store/system/systemSlice\";\n\nimport aadhar from \"../../../../assets/images/adhar.png\";\nimport dummy from \"../../../../assets/images/dummy-img.png\";\nimport aadharBack from \"../../../../assets/images/adhar-back.png\";\nimport sampleProof from \"../../../../assets/images/sample-proof.png\";\nimport { func } from \"prop-types\";\n\nconst beforeUpload = (file) => {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n\n  return isJpgOrPng && isLt2M;\n};\nfunction purchasesAdd(props) {\n  const [form] = Form.useForm();\n  const history = useHistory();\n  let { id } = useParams();\n  useEffect(() => {\n    if (id != 0) {\n      props.getPurchaseDoc(id);\n    } else {\n      props.purchaseClear();\n    }\n    props.getMiniVehiclesNonStock({\n      ...props.miniVehiclesNonStockParams,\n      page: 1,\n    });\n    props.getSystemFormulas();\n    props.getPerson({ ...props.personParams, page: 1 });\n    props.getDealers({ ...props.dealersParams, page: 1 });\n    props.getMCApplicable({ ...props.mcApplicableParams, page: 1, search: \"\" });\n    props.getMiniCounters();\n    props.getMiniFinanciers();\n    props.getMiniBanks();\n    props.getMiniAddressProof();\n    props.getMiniInsurance();\n  }, []);\n\n  const purchaseTypeList = [\n    { id: 1, name: \"Customer\" },\n    { id: 2, name: \"Dealer\" },\n    { id: 3, name: \"Exchange\" },\n    { id: 4, name: \"Seizing\" },\n    { id: 5, name: \"Return\" },\n  ];\n  const hypothecationList = [\n    { value: true, name: \"Yes\" },\n    { value: false, name: \"No\" },\n  ];\n  const isinternal = [\n    { value: true, name: \"Yes\" },\n    { value: false, name: \"No\" },\n  ];\n  const loanstatus = [\n    { value: true, name: \"Active\" },\n    { value: false, name: \"Inactive\" },\n  ];\n  const tokenstatus = [\n    { value: true, name: \"Yes\" },\n    { value: false, name: \"No\" },\n  ];\n  const insurancestatusList = [\n    { value: true, name: \"Yes\" },\n    { value: false, name: \"No\" },\n  ];\n  const mcInternalTypeList = [\n    { id: 1, name: \"External\" },\n    { id: 2, name: \"Dealer\" },\n    { id: 3, name: \"None\" },\n  ];\n  const mcInternalTypeList1 = [\n    { id: 1, name: \"External\" },\n    { id: 4, name: \"Internal\" },\n    { id: 3, name: \"None\" },\n  ];\n  const mcInternalTypeList2 = [\n    { id: 2, name: \"Dealer\" },\n    { id: 3, name: \"None\" },\n  ];\n  const paymentToList = [\n    { id: 1, name: \"Customer\" },\n    { id: 2, name: \"Dealer\" },\n  ];\n  const iscustomcolor = [\n    { value: true, name: \"Custom Color\" },\n    { value: false, name: \"Vehicle Color\" },\n  ];\n\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  function getRepairAmount(data) {\n    var variablesData = {\n      OUTLOOKREPAIR:\n        props.purchaseData.outlookrepair == null\n          ? 0\n          : parseInt(props.purchaseData.outlookrepair),\n      ENGINEREPAIR:\n        props.purchaseData.enginerepair == null\n          ? 0\n          : parseInt(props.purchaseData.enginerepair),\n      BATTERY:\n        props.purchaseData.battery == null\n          ? 0\n          : parseInt(props.purchaseData.battery),\n      TYRE:\n        props.purchaseData.tyre == null ? 0 : parseInt(props.purchaseData.tyre),\n    };\n    if (data.key == \"outlookrepair\") {\n      variablesData.OUTLOOKREPAIR = parseInt(data.value == \"\" ? 0 : data.value);\n    } else if (data.key == \"enginerepair\") {\n      variablesData.ENGINEREPAIR = parseInt(data.value == \"\" ? 0 : data.value);\n    } else if (data.key == \"battery\") {\n      variablesData.BATTERY = parseInt(data.value == \"\" ? 0 : data.value);\n    } else if (data.key == \"tyre\") {\n      variablesData.TYRE = parseInt(data.value == \"\" ? 0 : data.value);\n    }\n    var repairAmountObj = {\n      code: \"ESTIMATIONREPAIR\",\n      variables: variablesData,\n    };\n    getCustomerPayable({\n      key: \"totalrepairamount\",\n      value:\n        variablesData.OUTLOOKREPAIR +\n        variablesData.ENGINEREPAIR +\n        variablesData.BATTERY +\n        variablesData.TYRE,\n    });\n    props.getFormulaExecuter(repairAmountObj);\n  }\n  function getCustomerPayable(data) {\n    var variablesData = {\n      PURCHASEAMOUNT:\n        props.purchaseData.purchaserate == null\n          ? 0\n          : parseInt(props.purchaseData.purchaserate),\n      LOANAMOUNT:\n        props.purchaseData.loanamount == null\n          ? 0\n          : parseInt(props.purchaseData.loanamount),\n      TOTALREPAIR:\n        props.purchaseData.totalrepairamount == null\n          ? 0\n          : parseInt(props.purchaseData.totalrepairamount),\n      INSURANCECHARGES:\n        props.purchaseData.insuranceamount == null\n          ? 0\n          : parseInt(props.purchaseData.insuranceamount),\n      GSTAMOUNT: 0,\n      RTACHARGES:\n        props.purchaseData.rtocharges == null\n          ? 0\n          : parseInt(props.purchaseData.rtocharges),\n      ECHALLAN:\n        props.purchaseData.echallan == null\n          ? 0\n          : parseInt(props.purchaseData.echallan),\n      CONSULTANCYCHARGES:\n        props.purchaseData.consultancycharges == null\n          ? 0\n          : parseInt(props.purchaseData.consultancycharges),\n    };\n    switch (data.key) {\n      case \"purchaserate\":\n        variablesData.PURCHASEAMOUNT = parseInt(\n          data.value == \"\" ? 0 : data.value\n        );\n        break;\n      case \"loanamount\":\n        variablesData.LOANAMOUNT = parseInt(data.value == \"\" ? 0 : data.value);\n        break;\n      case \"totalrepairamount\":\n        variablesData.TOTALREPAIR = parseInt(data.value == \"\" ? 0 : data.value);\n        break;\n      case \"insuranceamount\":\n        variablesData.INSURANCECHARGES = parseInt(\n          data.value == \"\" ? 0 : data.value\n        );\n        break;\n      case \"rtocharges\":\n        variablesData.RTACHARGES = parseInt(data.value == \"\" ? 0 : data.value);\n        break;\n      case \"echallan\":\n        variablesData.ECHALLAN = parseInt(data.value == \"\" ? 0 : data.value);\n        break;\n      case \"consultancycharges\":\n        variablesData.CONSULTANCYCHARGES = parseInt(\n          data.value == \"\" ? 0 : data.value\n        );\n        break;\n      default:\n        break;\n    }\n    var repairAmountObj = {\n      code: \"PURCUSTOMERPAY\",\n      variables: variablesData,\n    };\n\n    props.getFormulaExecuter(repairAmountObj);\n  }\n  function getCustomerCashAmount(data) {\n    var variablesData = {\n      TOTALAMOUNT:\n        props.purchaseData.customerpaybleamount == null\n          ? 0\n          : parseInt(props.purchaseData.customerpaybleamount),\n      CREDITAMOUNT:\n        props.purchaseData.customercreditamount == null\n          ? 0\n          : parseInt(props.purchaseData.customercreditamount),\n      BANKAMOUNT:\n        props.purchaseData.customerbankamount == null\n          ? 0\n          : parseInt(props.purchaseData.customerbankamount),\n    };\n    if (data.key == \"customercreditamount\") {\n      variablesData.CREDITAMOUNT = parseInt(data.value == \"\" ? 0 : data.value);\n    } else if (data.key == \"customerbankamount\") {\n      variablesData.BANKAMOUNT = parseInt(data.value == \"\" ? 0 : data.value);\n    }\n    var customerCashAmountObj = {\n      code: \"CASHAMOUNT\",\n      variables: variablesData,\n    };\n    props.getFormulaExecuter(customerCashAmountObj);\n  }\n  function getTotalAmount(data) {\n    var variablesData = {\n      PURCHASEAMOUNT:\n        props.purchaseData.purchaserate == null\n          ? 0\n          : parseInt(props.purchaseData.purchaserate),\n      MCAMOUNT:\n        props.purchaseData.mcamount == null\n          ? 0\n          : parseInt(props.purchaseData.mcamount),\n    };\n    if (data.key == \"purchaserate\") {\n      variablesData.PURCHASEAMOUNT = parseInt(\n        data.value == \"\" ? 0 : data.value\n      );\n    } else if (data.key == \"mcamount\") {\n      variablesData.MCAMOUNT = parseInt(\n        data.value == \"\" || data.value == null ? 0 : data.value\n      );\n    }\n    var repairAmountObj = {\n      code: \"PURTOTALPAY\",\n      variables: variablesData,\n    };\n\n    props.getFormulaExecuter(repairAmountObj);\n  }\n\n  const { TabPane } = Tabs;\n  const onFinish = () => {\n    const purchaseObj = {\n      ...props.purchaseData,\n      id: id,\n      date:\n        id == 0\n          ? moment(new Date()).format(\"YYYY-MM-DD\")\n          : moment(props.purchaseData?.date).format(\"YYYY-MM-DD\"),\n      tokendate:\n        props.purchaseData?.tokendate == null\n          ? null\n          : moment(props.purchaseData?.tokendate).format(\"YYYY-MM-DD\"),\n      insuranceexpdate:\n        props.purchaseData?.insuranceexpdate == null\n          ? null\n          : moment(props.purchaseData?.insuranceexpdate).format(\"YYYY-MM-DD\"),\n    };\n    if (parseInt(props.purchaseData.customercashamount) < 0) {\n      Modal.error({\n        icon: (\n          <span className=\"remix-icon\">\n            <RiInformationLine />\n          </span>\n        ),\n        title: (\n          <h5 className=\"hp-mb-0 hp-font-weight-500\">\n            Customer Cash Amount Error\n          </h5>\n        ),\n        content: (\n          <div>\n            <p className=\"hp-p1-body hp-text-color-black-80\">\n              Customer Cash Amount should not be negative{\" \"}\n              {props.purchaseData.customercashamount}\n            </p>\n          </div>\n        ),\n      });\n    } else {\n      props.addPurchase({ purchaseObj, history });\n    }\n  };\n\n  function vehicleVersion(id) {\n    props.miniVehiclesNonStockList.forEach((vehicle) => {\n      if (vehicle.id == id) {\n        props.getVehicleVersion(vehicle.version);\n        props.getVersionColors(vehicle.version?.model?.id);\n      }\n    });\n  }\n\n  function customerDetails(id) {\n    props.personlist.forEach((person) => {\n      if (person.id == id) {\n        props.getCustomerById(person);\n      }\n    });\n  }\n\n  function checkAccNumber(data) {\n    if (\n      props.customerByIdList.accono == props.purchaseData.financieraccountnumber\n    ) {\n      props.InputChangeValue({\n        key: data.key,\n        value: \"\",\n      });\n      Modal.info({\n        icon: (\n          <span className=\"remix-icon\">\n            <RiInformationLine />\n          </span>\n        ),\n        title: (\n          <h5 className=\"hp-mb-0 hp-font-weight-500\">Financier A/C No Error</h5>\n        ),\n        content: (\n          <div>\n            <p className=\"hp-p1-body hp-text-color-black-80\">\n              Please Enter Customer & Financier A/C No same{\" \"}\n              {props.customerByIdList.accono}\n            </p>\n          </div>\n        ),\n      });\n    }\n    // else{\n\n    //   if(data.target.value ==  props.rowdata?.engineno){\n    //     props.InputChangeValue({\n    //       key: type,\n    //       value: \"\",\n    //     });\n    //     Modal.info({\n    //       icon: (\n    //         <span className=\"remix-icon\">\n    //           <RiInformationLine />\n    //         </span>\n    //       ),\n    //       title: (\n    //         <h5 className=\"hp-mb-0 hp-font-weight-500\">Chassise Numbe Error</h5>\n    //       ),\n    //       content: (\n    //         <div>\n    //           <p className=\"hp-p1-body hp-text-color-black-80\">\n    //             Please Enter Engine & Chassis Number same  {props.rowdata?.engineno} to{\" \"}\n    //             {props.rowdata?.chassisno}\n    //           </p>\n    //         </div>\n    //       ),\n    //     });\n    //   }\n    // }\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  function callback(key) {\n    console.log(key);\n  }\n\n  const uploadButton = (\n    <>\n      {\" \"}\n      <div className=\"hp-center hp-mt-0 \">\n        {props.imageLooading ? (\n          <LoadingOutlined />\n        ) : (\n          <PlusOutlined className=\"hp-mt-16\" />\n        )}\n        <div className=\"hp-mt-8 hp-mb-16\">Upload</div>\n      </div>\n    </>\n  );\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck = current && current < moment(startDate, \"YYYY-MM-DD\");\n      }\n      if (endDate) {\n        endCheck = current && current > moment(endDate, \"YYYY-MM-DD\");\n      }\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n  function checkAmount(data) {\n    if (parseInt(data.value) > 0 && parseInt(data.value) <= 99) {\n      props.InputChangeValue({\n        key: data.key,\n        value: \"\",\n      });\n      Modal.error({\n        icon: (\n          <span className=\"remix-icon\">\n            <RiInformationLine />\n          </span>\n        ),\n        title: (\n          <h5 className=\"hp-mb-0 hp-font-weight-500\">Amount Validation</h5>\n        ),\n        content: (\n          <div>\n            <p className=\"hp-p1-body hp-text-color-black-80\">\n              Amount must be minimum 3 Digits\n            </p>\n          </div>\n        ),\n      });\n    } else {\n    }\n  }\n  useEffect(() => {\n    form.setFieldsValue({\n      date: props.purchaseData.date,\n      partytype: props.purchaseData.partytype,\n      counter_id: props.purchaseData.counter_id,\n      customer_id: props.purchaseData.customer_id,\n      dealer_id: props.purchaseData.dealer_id,\n      hypothecation: props.purchaseData.hypothecation,\n      hypothecationisinternal: props.purchaseData.hypothecationisinternal,\n      internalfinancier_id: props.purchaseData.internalfinancier_id,\n      externalfinanciername: props.purchaseData.externalfinanciername,\n      financierbank_id: props.purchaseData.financierbank_id,\n      financieraccountnumber: props.purchaseData.financieraccountnumber,\n      financierifsccode: props.purchaseData.financierifsccode,\n      loanstatus: props.purchaseData.loanstatus,\n      loanamount: props.purchaseData?.loanamount,\n      loannumber: props.purchaseData?.loannumber,\n      tokenstatus: props.purchaseData.tokenstatus,\n      tokennumber: props.purchaseData.tokennumber,\n      tokendate: props.purchaseData.tokendate,\n      insurancestatus: props.purchaseData.insurancestatus,\n      insurancecompany_id: props.purchaseData.insurancecompany_id,\n      insurancenumber: props.purchaseData.insurancenumber,\n      insuranceexpdate: props.purchaseData.insuranceexpdate,\n      insuranceamount: props.purchaseData?.insuranceamount,\n      vehicle_id: props.purchaseData.vehicle_id,\n      iscustomcolor: props.purchaseData.iscustomcolor,\n      color_id: props.purchaseData.color_id,\n      customcolor: props.purchaseData.customcolor,\n      vehiclereading: props.purchaseData?.vehiclereading?.toString(),\n      purchaserate: props.purchaseData.purchaserate,\n      outlookrepair: props.purchaseData.outlookrepair,\n      enginerepair: props.purchaseData.enginerepair,\n      battery: props.purchaseData.battery,\n      tyre: props.purchaseData.tyre,\n      echallan: props.purchaseData.echallan,\n      consultancycharges: props.purchaseData.consultancycharges,\n      rtocharges: props.purchaseData?.rtocharges,\n      customercreditamount: props.purchaseData?.customercreditamount,\n      customerbankamount: props.purchaseData?.customerbankamount,\n      customercashamount: props.purchaseData?.customercashamount,\n      mc_internal_type: props.purchaseData.mc_internal_type,\n      mcamount: props.purchaseData?.mcamount,\n      externalmcname: props.purchaseData.externalmcname,\n      externalmcmobile: props.purchaseData.externalmcmobile,\n      externalmcbank_id: props.purchaseData.externalmcbank_id,\n      externalmcbankacno: props.purchaseData.externalmcbankacno,\n      externalmcifsccode: props.purchaseData.externalmcifsccode,\n      mcinternal_id: props.purchaseData.mcinternal_id,\n      addressproof1_id: props.purchaseData.addressproof1_id,\n      addressproof2_id: props.purchaseData.addressproof2_id,\n    });\n  }, [props.purchaseData]);\n\n  return (\n    <Row gutter={[24, 24]}>\n      <PageTitle\n        pageTitle={id == 0 ? \"New Purchases\" : \"Update Purchases\"}\n        goBack={true}\n        addModelTile=\"Add Customer\"\n        addModelTile2=\"Add Vehicle\"\n        setIsModalVisible={props.customerIsModelVisible}\n        setIsModalVisible2={props.vehicleIsModelVisible}\n        isModalVisible={props.model}\n        isModalVisible2={props.model}\n      />\n      <Col span={24}>\n        <Card>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Row gutter={[12, 0]}>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item label=\"Date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    defaultValue={\n                      props.purchaseData.id == 0\n                        ? moment(new Date())\n                        : moment(props.purchaseData?.date)\n                    }\n                    // defaultValue={moment(new Date())}\n                    disabled\n                    format=\"DD-MM-YYYY\"\n                    value={moment(props.purchaseData?.date)}\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"date\",\n                        value: date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Counter\"\n                  name=\"counter_id\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Select Counter\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Select a Counter\"\n                    optionFilterProp=\"Counter\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"counter_id\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseData.counter_id == null\n                        ? \"\"\n                        : props.purchaseData?.counter_id\n                    }\n                  >\n                    {props.miniCountersList.map((counter, index) => {\n                      return (\n                        <Option key={index} value={counter.id}>\n                          {counter.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Purchase Type\"\n                  name=\"partytype\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Select Purchase Type\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Select a Purchase Type\"\n                    optionFilterProp=\"partytype\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    disabled={id == 0 ? false : true}\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"partytype\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseData.partytype == null\n                        ? \"\"\n                        : props.purchaseData?.partytype\n                    }\n                  >\n                    {purchaseTypeList.map((purchase, index) => {\n                      return (\n                        <Option value={purchase.id}>{purchase.name}</Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Customer\"\n                  name=\"customer_id\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Select Customer\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Select Customer\"\n                    // notFoundContent={props.personLoading ? <Spin size=\"small\" align=\"middle\" /> : null}\n                    optionFilterProp=\"customer_id\"\n                    onSearch={(value) => {\n                      props.SetPersonParams({\n                        ...props.personParams,\n                        page: 1,\n                        search: value,\n                      });\n                      props.getPerson({\n                        ...props.personParams,\n                        page: 1,\n                        search: value,\n                      });\n                    }}\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    filterOption={false}\n                    onChange={(value) => {\n                      customerDetails(value);\n                      props.InputChangeValue({\n                        key: \"customer_id\",\n                        value: value,\n                      });\n                    }}\n                    onPopupScroll={() => {\n                      if (\n                        props.personParams.page < props.personParams.no_of_pages\n                      ) {\n                        props.SetPersonParams({\n                          ...props.personParams,\n                          page: props.personParams.page + 1,\n                        });\n                        props.getPerson({\n                          ...props.personParams,\n                          page: props.personParams.page + 1,\n                        });\n                      }\n                    }}\n                    value={\n                      props.purchaseData.customer_id == null\n                        ? \"\"\n                        : props.purchaseData?.customer_id\n                    }\n                  >\n                    {props.personlist.map((person, index) => {\n                      return (\n                        <Option value={person.id}>\n                          {person.firstname} {person.lastname} - {person.mobile}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n              {props.purchaseData.partytype == 2 && (\n                <Col span={24} xs={24} xl={6} md={8}>\n                  <Form.Item\n                    label=\"Dealer\"\n                    name=\"dealer_id\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please Select Dealer\",\n                      },\n                    ]}\n                    hasFeedback\n                  >\n                    <Select\n                      showSearch\n                      placeholder=\"Select Dealer\"\n                      optionFilterProp=\"Dealer\"\n                      // notFoundContent={props.dealerLoading ? <Spin size=\"small\" align=\"middle\" /> : null}\n                      onSearch={(value) => {\n                        props.SetDealersParams({\n                          ...props.dealersParams,\n                          page: 1,\n                          search: value,\n                        });\n                        props.getDealers({\n                          params: {\n                            ...props.dealersParams,\n                            page: 1,\n                            search: value,\n                          },\n                          searchDealerId: props.searchDealerId + 1,\n                        });\n                      }}\n                      defaultActiveFirstOption={false}\n                      showArrow={true}\n                      filterOption={false}\n                      onChange={(value) => {\n                        //   props.getMiniCity({ district: value });\n                        props.InputChangeValue({\n                          key: \"dealer_id\",\n                          value: value,\n                        });\n                      }}\n                      onPopupScroll={() => {\n                        if (\n                          props.dealersParams.page <\n                          props.dealersParams.no_of_pages\n                        ) {\n                          props.SetDealersParams({\n                            ...props.dealersParams,\n                            page: props.dealersParams.page + 1,\n                          });\n                          props.getDealers({\n                            ...props.dealersParams,\n                            page: props.dealersParams.page + 1,\n                          });\n                        }\n                      }}\n                      value={\n                        props.purchaseData.dealer_id == null\n                          ? \"\"\n                          : props.purchaseData?.dealer_id\n                      }\n                    >\n                      {props.dealerslist.map((dealer, index) => {\n                        return (\n                          <Option key={index} value={dealer.id}>\n                            {dealer.user.first_name} {dealer.user.last_name} -{\" \"}\n                            {dealer.user.phone}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  </Form.Item>\n                </Col>\n              )}\n\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Hypothecation\"\n                  name=\"hypothecation\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Select Hypothecation\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Select a Hypothecation\"\n                    optionFilterProp=\"hypothecation\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"hypothecation\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseData.hypothecation == null\n                        ? \"\"\n                        : props.purchaseData?.hypothecation\n                    }\n                  >\n                    {hypothecationList.map((hypothecation, index) => {\n                      return (\n                        <Option key={index} value={hypothecation.value}>\n                          {hypothecation.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              {props.purchaseData.hypothecation && (\n                <>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"Loan status\"\n                      name=\"loanstatus\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please Select \",\n                        },\n                      ]}\n                      hasFeedback\n                    >\n                      <Select\n                        showSearch\n                        placeholder=\"Loan Status\"\n                        optionFilterProp=\"loanstatus\"\n                        filterOption={(input, option) =>\n                          option.children\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                        onChange={(value) => {\n                          props.InputChangeValue({\n                            key: \"loanstatus\",\n                            value: value,\n                          });\n                        }}\n                        value={\n                          props.purchaseData.loanstatus == null\n                            ? \"\"\n                            : props.purchaseData?.loanstatus\n                        }\n                      >\n                        {loanstatus.map((loan, index) => {\n                          return (\n                            <Option key={index} value={loan.value}>\n                              {loan.name}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"Is Internal ?\"\n                      name=\"hypothecationisinternal\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please Select \",\n                        },\n                      ]}\n                      hasFeedback\n                    >\n                      <Select\n                        showSearch\n                        placeholder=\"Is Internal ?\"\n                        optionFilterProp=\"hypothecationisinternal\"\n                        filterOption={(input, option) =>\n                          option.children\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                        onChange={(value) => {\n                          props.InputChangeValue({\n                            key: \"hypothecationisinternal\",\n                            value: value,\n                          });\n                        }}\n                        value={\n                          props.purchaseData.hypothecationisinternal == null\n                            ? \"\"\n                            : props.purchaseData?.hypothecationisinternal\n                        }\n                      >\n                        {isinternal.map((isinternal, index) => {\n                          return (\n                            <Option key={index} value={isinternal.value}>\n                              {isinternal.name}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  {props.purchaseData.hypothecationisinternal ? (\n                    <Col span={24} xs={24} xl={6} md={8}>\n                      <Form.Item\n                        label=\"Financier:\"\n                        name=\"internalfinancier_id\"\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please Select \",\n                          },\n                        ]}\n                        hasFeedback\n                      >\n                        <Select\n                          showSearch\n                          placeholder=\"Select Financier\"\n                          optionFilterProp=\"internalfinancier_id\"\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .includes(input.toLowerCase())\n                          }\n                          onChange={(value) => {\n                            props.InputChangeValue({\n                              key: \"internalfinancier_id\",\n                              value: value,\n                            });\n                          }}\n                          value={\n                            props.purchaseData.internalfinancier_id == null\n                              ? \"\"\n                              : props.purchaseData?.internalfinancier_id\n                          }\n                        >\n                          {props.miniFinanciersList.map((Financier, index) => {\n                            return (\n                              <Option key={index} value={Financier.id}>\n                                {Financier.name}\n                              </Option>\n                            );\n                          })}\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                  ) : (\n                    <>\n                      <Col span={24} xs={24} xl={6} md={8}>\n                        <Form.Item\n                          label=\"Financier Name\"\n                          name=\"externalfinanciername\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please input your Financier name\",\n                            },\n                          ]}\n                          hasFeedback\n                        >\n                          <Input\n                            id=\"financiername\"\n                            name=\"externalfinanciername\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"Financier Name\"\n                            value={\n                              props.purchaseData.externalfinanciername == null\n                                ? \"\"\n                                : props.purchaseData?.externalfinanciername\n                            }\n                            onChange={ChangeHandeler}\n                          />\n                        </Form.Item>\n                      </Col>\n                      {props.purchaseData.loanstatus && (\n                        <>\n                          <Col span={24} xs={24} xl={6} md={8}>\n                            <Form.Item\n                              label=\"Financier Bank\"\n                              name=\"financierbank_id\"\n                              rules={[\n                                {\n                                  required: true,\n                                  message: \"Please Select Financier Bank\",\n                                },\n                              ]}\n                              hasFeedback\n                            >\n                              <Select\n                                showSearch\n                                placeholder=\"Select Financier Bank\"\n                                optionFilterProp=\"financierbank_id\"\n                                onChange={(value) => {\n                                  props.InputChangeValue({\n                                    key: \"financierbank_id\",\n                                    value: value,\n                                  });\n                                }}\n                                filterOption={(input, option) =>\n                                  option.children\n                                    .toLowerCase()\n                                    .includes(input.toLowerCase())\n                                }\n                                value={\n                                  props.purchaseData.financierbank_id == null\n                                    ? \"\"\n                                    : props.purchaseData?.financierbank_id\n                                }\n                              >\n                                {props.miniBanksList.map((mcBank, index) => {\n                                  return (\n                                    <Option key={index} value={mcBank.id}>\n                                      {mcBank.name}\n                                    </Option>\n                                  );\n                                })}\n                              </Select>\n                            </Form.Item>\n                          </Col>\n                          <Col span={24} xs={24} xl={6} md={8}>\n                            <Form.Item\n                              label=\"Financier A/C No\"\n                              name=\"financieraccountnumber\"\n                              rules={[\n                                {\n                                  required: true,\n                                  message: \"Please input your Financier A/C No\",\n                                },\n                                {\n                                  min: 9,\n                                  message:\n                                    \"A/C Number must be minimum 9 characters.\",\n                                },\n                              ]}\n                              getValueProps={() => {}}\n                              hasFeedback\n                            >\n                              <NumericInput\n                                id=\"accountnumber\"\n                                name=\"financieraccountnumber\"\n                                style={{ width: \"100%\" }}\n                                placeholder=\"Financier A/C No\"\n                                maxLength={18}\n                                onBlur={(value) => {\n                                  checkAccNumber(value);\n                                }}\n                                value={\n                                  props.purchaseData.financieraccountnumber ==\n                                  null\n                                    ? \"\"\n                                    : props.purchaseData?.financieraccountnumber\n                                }\n                                onChange={props.InputChangeValue}\n                              />\n                            </Form.Item>\n                          </Col>\n                          <Col span={24} xs={24} xl={6} md={8}>\n                            <Form.Item\n                              label=\"Financier IFSC Code\"\n                              name=\"financierifsccode\"\n                              rules={[\n                                {\n                                  required: true,\n                                  message: \"Please input Financier IFSC Code  \",\n                                },\n                                {\n                                  pattern: new RegExp(\n                                    /[A-Z]{4}[0][a-zA-Z0-9]{6}$/i\n                                  ),\n                                  message: \"field does not accept IFSC code\",\n                                },\n                              ]}\n                              hasFeedback\n                            >\n                              <Input\n                                id=\"financierifsccode\"\n                                name=\"financierifsccode\"\n                                style={{ width: \"100%\" }}\n                                placeholder=\"Financier IFSC Code\"\n                                maxLength={11}\n                                value={\n                                  props.purchaseData.financierifsccode == null\n                                    ? \"\"\n                                    : props.purchaseData?.financierifsccode\n                                }\n                                onChange={(e) => {\n                                  props.InputChangeValue({\n                                    key: e.target.name,\n                                    value: e.target.value.toUpperCase(),\n                                  });\n                                }}\n                              />\n                            </Form.Item>\n                          </Col>\n                        </>\n                      )}\n                    </>\n                  )}{\" \"}\n                  {props.purchaseData.loanstatus ? (\n                    <>\n                      <Col span={24} xs={24} xl={6} md={8}>\n                        <Form.Item\n                          label=\"Loan Amount\"\n                          name=\"loanamount\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please input Loan Amount \",\n                            },\n                          ]}\n                          getValueProps={() => {}}\n                          hasFeedback\n                        >\n                          <NumericInput\n                            id=\"loanamount\"\n                            name=\"loanamount\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"loan amount\"\n                            maxLength={6}\n                            onBlur={(value) => {\n                              getCustomerPayable(value);\n                              checkAmount(value);\n                            }}\n                            value={\n                              props.purchaseData.loanamount == null\n                                ? \"\"\n                                : props.purchaseData?.loanamount\n                            }\n                            onChange={props.InputChangeValue}\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={24} xs={24} xl={6} md={8}>\n                        <Form.Item\n                          label=\"Loan Number\"\n                          name=\"loannumber\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please input Loan Number \",\n                            },\n                          ]}\n                          hasFeedback\n                        >\n                          <Input\n                            id=\"loannumber\"\n                            name=\"loannumber\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"Loan Number\"\n                            maxLength={15}\n                            value={\n                              props.purchaseData.loannumber == null\n                                ? \"\"\n                                : props.purchaseData?.loannumber\n                            }\n                            onChange={(e) => {\n                              props.InputChangeValue({\n                                key: e.target.name,\n                                value: e.target.value.toUpperCase(),\n                              });\n                            }}\n                          />\n                        </Form.Item>\n                      </Col>\n                    </>\n                  ) : (\n                    <>\n                      <Col span={24} xs={24} xl={6} md={8}>\n                        <Form.Item\n                          label=\"Loan Number\"\n                          name=\"loannumber\"\n                          hasFeedback\n                        >\n                          <Input\n                            id=\"loannumber\"\n                            name=\"loannumber\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"Loan Number\"\n                            maxLength={15}\n                            value={\n                              props.purchaseData.loannumber == null\n                                ? \"\"\n                                : props.purchaseData?.loannumber\n                            }\n                            onChange={ChangeHandeler}\n                          />\n                        </Form.Item>\n                      </Col>\n                    </>\n                  )}\n                </>\n              )}\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Token Status\"\n                  name=\"tokenstatus\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Select Token Status\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Token Status\"\n                    optionFilterProp=\"tokenstatus\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"tokenstatus\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseData.tokenstatus == null\n                        ? \"\"\n                        : props.purchaseData?.tokenstatus\n                    }\n                    ss\n                  >\n                    {tokenstatus.map((loan, index) => {\n                      return (\n                        <Option key={index} value={loan.value}>\n                          {loan.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n              {props.purchaseData.tokenstatus && (\n                <>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"Token Number\"\n                      name=\"tokennumber\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please Input Token Number\",\n                        },\n                      ]}\n                      getValueProps={() => {}}\n                      hasFeedback\n                    >\n                      <Input\n                        id=\"tokennumber\"\n                        name=\"tokennumber\"\n                        style={{ width: \"100%\" }}\n                        placeholder=\"Token Number\"\n                        maxLength={13}\n                        value={\n                          props.purchaseData.tokennumber == null\n                            ? \"\"\n                            : props.purchaseData?.tokennumber\n                        }\n                        onChange={(e) =>\n                          props.InputChangeValue({\n                            key: e.target.name,\n                            value: e.target.value.toUpperCase(),\n                          })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"Token Date\"\n                      name=\"tokendate\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please Select Token Date\",\n                        },\n                      ]}\n                      hasFeedback\n                    >\n                      <DatePicker\n                        id=\"tokendate\"\n                        name=\"tokendate\"\n                        style={{ width: \"100%\" }}\n                        format=\"DD-MM-YYYY\"\n                        placeholder=\"Select Token Date\"\n                        value={moment(props.purchaseData?.tokendate)}\n                        onChange={(date) => {\n                          props.InputChangeValue({\n                            key: \"tokendate\",\n                            value: date,\n                          });\n                        }}\n                      />\n                    </Form.Item>\n                  </Col>\n                </>\n              )}\n\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Insurance Status\"\n                  name=\"insurancestatus\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Select Insurance Status\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Insurance Status\"\n                    optionFilterProp=\"insurancestatus\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"insurancestatus\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseData.insurancestatus == null\n                        ? \"\"\n                        : props.purchaseData?.insurancestatus\n                    }\n                  >\n                    {insurancestatusList.map((status, index) => {\n                      return (\n                        <Option key={index} value={status.value}>\n                          {status.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n              {props.purchaseData.insurancestatus && (\n                <>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"Insurance Company\"\n                      name=\"insurancecompany_id\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please Select Insurance Company\",\n                        },\n                      ]}\n                      hasFeedback\n                    >\n                      <Select\n                        showSearch\n                        placeholder=\"Insurance Company\"\n                        optionFilterProp=\"insurancecompany_id\"\n                        filterOption={(input, option) =>\n                          option.children\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                        onChange={(value) => {\n                          props.InputChangeValue({\n                            key: \"insurancecompany_id\",\n                            value: value,\n                          });\n                        }}\n                        value={\n                          props.purchaseData.insurancecompany_id == null\n                            ? \"\"\n                            : props.purchaseData.insurancecompany_id\n                        }\n                        ss\n                      >\n                        {props.miniInsuranceList.map((Insurance, index) => {\n                          return (\n                            <Option key={index} value={Insurance.id}>\n                              {Insurance.name}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"Insurance Number\"\n                      name=\"insurancenumber\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input Insurance Number\",\n                        },\n                      ]}\n                      getValueProps={() => {}}\n                      hasFeedback\n                    >\n                      <Input\n                        id=\"insurancenumber\"\n                        name=\"insurancenumber\"\n                        style={{ width: \"100%\" }}\n                        placeholder=\"insurance number\"\n                        maxLength={15}\n                        onBlur={(data) => {\n                          if (\n                            props.purchaseData.vehicle_id != \"\" &&\n                            props.purchaseData.vehicle_id != null &&\n                            props.purchaseData.vehicle_id != undefined\n                          ) {\n                            props.insuranceNumberValidate({\n                              insurancenumber: data.target.value,\n                              vehicle_id: props.purchaseData.vehicle_id,\n                            });\n                          }\n                        }}\n                        value={\n                          props.purchaseData.insurancenumber == null\n                            ? \"\"\n                            : props.purchaseData?.insurancenumber\n                        }\n                        onChange={(e) =>\n                          props.InputChangeValue({\n                            key: e.target.name,\n                            value: e.target.value.toUpperCase(),\n                          })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"Insurance Exp Date\"\n                      name=\"insuranceexpdate\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please Select Insurance Exp Date\",\n                        },\n                      ]}\n                      hasFeedback\n                    >\n                      <DatePicker\n                        id=\"insuranceexpdate\"\n                        name=\"insuranceexpdate\"\n                        style={{ width: \"100%\" }}\n                        disabledDate={disableDateRanges({\n                          endDate: moment().add(5, \"years\"),\n                          startDate: new Date(),\n                        })}\n                        format=\"DD-MM-YYYY\"\n                        placeholder=\"Select Insurance Exp Date\"\n                        value={\n                          props.purchaseData.insuranceexpdate == null\n                            ? \"\"\n                            : props.purchaseData?.insuranceexpdate\n                        }\n                        onChange={(date) => {\n                          props.InputChangeValue({\n                            key: \"insuranceexpdate\",\n                            value: date,\n                          });\n                        }}\n                      />\n                    </Form.Item>\n                  </Col>\n                </>\n              )}\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Insurance Amount\"\n                  name=\"insuranceamount\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input Insurance Amount\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"insuranceamount\"\n                    name=\"insuranceamount\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Insurance Amount\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.insuranceamount == null\n                        ? \"\"\n                        : props.purchaseData?.insuranceamount\n                    }\n                    onBlur={(value) => {\n                      getCustomerPayable(value);\n                      checkAmount(value);\n                    }}\n                    onChange={(value) => {\n                      props.InputChangeValue(value);\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n              {id == 0 ? (\n                <>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"Vehicle Number\"\n                      name=\"vehicle_id\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please Input Vehicle Number\",\n                        },\n                      ]}\n                      hasFeedback\n                    >\n                      <Select\n                        showSearch\n                        placeholder=\"Select vehicle \"\n                        optionFilterProp=\"vehicle\"\n                        defaultActiveFirstOption={false}\n                        showArrow={true}\n                        filterOption={false}\n                        onSearch={(value) => {\n                          props.setMiniVehiclesNonStockParams({\n                            ...props.miniVehiclesNonStockParams,\n                            page: 1,\n                            search: value,\n                          });\n                          props.getMiniVehiclesNonStock({\n                            ...props.miniVehiclesNonStockParams,\n                            page: 1,\n                            search: value,\n                          });\n                        }}\n                        onChange={(value) => {\n                          vehicleVersion(value);\n                          if (\n                            props.purchaseData.insurancenumber != \"\" &&\n                            props.purchaseData.insurancenumber != null\n                          ) {\n                            props.insuranceNumberValidate({\n                              insurancenumber:\n                                props.purchaseData.insurancenumber,\n                              vehicle_id: value,\n                            });\n                          }\n                          props.InputChangeValue({\n                            key: \"vehicle_id\",\n                            value: value,\n                          });\n                        }}\n                        onPopupScroll={() => {\n                          if (\n                            props.miniVehiclesNonStockParams.page <\n                            props.miniVehiclesNonStockParams.no_of_pages\n                          ) {\n                            props.setMiniVehiclesNonStockParams({\n                              ...props.miniVehiclesNonStockParams,\n                              page: props.miniVehiclesNonStockParams.page + 1,\n                            });\n                            props.getMiniVehiclesNonStock({\n                              ...props.miniVehiclesNonStockParams,\n                              page: props.miniVehiclesNonStockParams.page + 1,\n                            });\n                          }\n                        }}\n                        value={\n                          props.purchaseData.vehicle_id == null\n                            ? \"\"\n                            : props.purchaseData?.vehicle_id\n                        }\n                      >\n                        {props.miniVehiclesNonStockList.map(\n                          (vehicle, index) => {\n                            return (\n                              <Option key={index} value={vehicle.id}>\n                                {vehicle.vehicleno}\n                              </Option>\n                            );\n                          }\n                        )}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                </>\n              ) : (\n                <>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item label=\"Vehicle Number\">\n                      <Input\n                        id=\"vehicleno\"\n                        name=\"vehicleno\"\n                        style={{ width: \"100%\" }}\n                        placeholder=\"Vehicle Number\"\n                        value={props.purchaseData?.vehicle?.vehicleno}\n                        disabled\n                      />\n                    </Form.Item>\n                  </Col>\n                </>\n              )}\n\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item label=\"Vehicle Version\">\n                  <Input\n                    id=\"vehicleVersion\"\n                    name=\"vehicleVersion\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Vehicle Version\"\n                    value={\n                      id == 0\n                        ? props.vehicleVersion?.name\n                        : props.purchaseData?.vehicle?.version?.name\n                    }\n                    disabled\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Color Type\"\n                  name=\"iscustomcolor\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Select Color Type\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Select Color Type\"\n                    optionFilterProp=\"iscustomcolor\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"iscustomcolor\",\n                        value: value,\n                      });\n                    }}\n                    value={props.purchaseData?.iscustomcolor}\n                  >\n                    {iscustomcolor.map((colorType, index) => {\n                      return (\n                        <Option key={index} value={colorType.value}>\n                          {colorType.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n              {props.purchaseData.iscustomcolor ? (\n                <>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"Custom Color\"\n                      name=\"customcolor\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input custom color\",\n                        },\n                        { whitespace: true },\n                      ]}\n                      hasFeedback\n                    >\n                      <Input\n                        id=\"customcolor\"\n                        name=\"customcolor\"\n                        style={{ width: \"100%\" }}\n                        placeholder=\"Custom Color\"\n                        maxLength={20}\n                        value={\n                          props.purchaseData.customcolor == null\n                            ? \"\"\n                            : props.purchaseData?.customcolor\n                        }\n                        onChange={ChangeHandeler}\n                      />\n                    </Form.Item>\n                  </Col>\n                </>\n              ) : (\n                <>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"Color\"\n                      name=\"color_id\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please Select Color\",\n                        },\n                      ]}\n                      hasFeedback\n                    >\n                      <Select\n                        showSearch\n                        placeholder=\"Select Color\"\n                        optionFilterProp=\"color_id\"\n                        filterOption={(input, option) =>\n                          option.children\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                        onChange={(value) => {\n                          props.InputChangeValue({\n                            key: \"color_id\",\n                            value: value,\n                          });\n                        }}\n                        value={\n                          props.purchaseData.color_id == null\n                            ? \"\"\n                            : props.purchaseData?.color_id\n                        }\n                      >\n                        {props.versionColorsList.map((color, index) => {\n                          return (\n                            <Option key={index} value={color.id}>\n                              {color.name}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                </>\n              )}\n\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Vehicle Reading\"\n                  name=\"vehiclereading\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input Vehicle Reading\",\n                    },\n                    { whitespace: true },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"vehiclereading\"\n                    name=\"vehiclereading\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"vehicle reading\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.vehiclereading == null\n                        ? \"\"\n                        : props.purchaseData?.vehiclereading\n                    }\n                    onChange={props.InputChangeValue}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Purchase Rate\"\n                  name=\"purchaserate\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input Purchase Rate\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"purchaserate\"\n                    name=\"purchaserate\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"purchase rate\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.purchaserate == null\n                        ? \"\"\n                        : props.purchaseData?.purchaserate\n                    }\n                    onBlur={(value) => {\n                      getCustomerPayable(value);\n                      getTotalAmount(value);\n                      checkAmount(value);\n                    }}\n                    onChange={(value) => {\n                      props.InputChangeValue(value);\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Outlook Repair\"\n                  name=\"outlookrepair\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input Outlook Rate\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"outlookrepair\"\n                    name=\"outlookrepair\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"outlook repair\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.outlookrepair == null\n                        ? \"\"\n                        : props.purchaseData?.outlookrepair\n                    }\n                    onBlur={(value) => {\n                      getRepairAmount(value);\n                    }}\n                    onChange={(value) => {\n                      props.InputChangeValue(value);\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Engine Repair\"\n                  name=\"enginerepair\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input Engine Repair\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"enginerepair\"\n                    name=\"enginerepair\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Engine Repair\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.enginerepair == null\n                        ? \"\"\n                        : props.purchaseData?.enginerepair\n                    }\n                    onBlur={(value) => {\n                      getRepairAmount(value);\n                    }}\n                    onChange={(value) => {\n                      props.InputChangeValue(value);\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Battery Repair\"\n                  name=\"battery\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input Battery Repair\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"battery\"\n                    name=\"battery\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Battery Repair\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.battery == null\n                        ? \"\"\n                        : props.purchaseData?.battery\n                    }\n                    onBlur={(value) => {\n                      getRepairAmount(value);\n                    }}\n                    onChange={(value) => {\n                      props.InputChangeValue(value);\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Tyre Repair\"\n                  name=\"tyre\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input Tyre Repair\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"tyre\"\n                    name=\"tyre\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Tyre Repair\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.tyre == null\n                        ? \"\"\n                        : props.purchaseData?.tyre\n                    }\n                    onBlur={(value) => {\n                      getRepairAmount(value);\n                    }}\n                    onChange={(value) => {\n                      props.InputChangeValue(value);\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item label=\"Total Estimation Repair\">\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Total Estimation Repair\"\n                    value={props.purchaseData?.totalrepairamount}\n                    onBlur={() => {\n                      getCustomerPayable({\n                        key: \"totalrepairamount\",\n                        value: props.purchaseData?.totalrepairamount,\n                      });\n                    }}\n                    disabled\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"E Challan\"\n                  name=\"echallan\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input E-Challan\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"echallan\"\n                    name=\"echallan\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"E Challan\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.echallan == null\n                        ? \"\"\n                        : props.purchaseData?.echallan\n                    }\n                    onBlur={(value) => {\n                      getCustomerPayable(value);\n                    }}\n                    onChange={(value) => {\n                      props.InputChangeValue(value);\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Refurbishment Charges\"\n                  name=\"consultancycharges\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input Refurbishment Charges\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"consultancycharges\"\n                    name=\"consultancycharges\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Refurbishment Charges\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.consultancycharges == null\n                        ? \"\"\n                        : props.purchaseData?.consultancycharges.toString()\n                    }\n                    onBlur={(value) => {\n                      getCustomerPayable(value);\n                    }}\n                    onChange={props.InputChangeValue}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"RTO Charges\"\n                  name=\"rtocharges\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input RTO Charges\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"rtocharges\"\n                    name=\"rtocharges\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"RTO charges\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.rtocharges == null\n                        ? \"\"\n                        : props.purchaseData?.rtocharges\n                    }\n                    onBlur={(value) => {\n                      getCustomerPayable(value);\n                    }}\n                    onChange={props.InputChangeValue}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item label=\"Payable Amount\">\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Payable Amount\"\n                    value={props.purchaseData?.customerpaybleamount}\n                    disabled\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Customer Pending Amount\"\n                  name=\"customercreditamount\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input Customer Credit Amount\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"customercreditamount\"\n                    name=\"customercreditamount\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Customer Pending Amount\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.customercreditamount == null\n                        ? \"\"\n                        : props.purchaseData?.customercreditamount.toString()\n                    }\n                    onBlur={(value) => {\n                      getCustomerCashAmount(value);\n                      checkAmount(value);\n                    }}\n                    onChange={props.InputChangeValue}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Customer Bank amount\"\n                  name=\"customerbankamount\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input Customer Bank Amount\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"customerbankamount\"\n                    name=\"customerbankamount\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Customer Bank amount\"\n                    maxLength={6}\n                    value={\n                      props.purchaseData.customerbankamount == null\n                        ? \"\"\n                        : props.purchaseData?.customerbankamount.toString()\n                    }\n                    onBlur={(value) => {\n                      getCustomerCashAmount(value);\n                      checkAmount(value);\n                    }}\n                    onChange={props.InputChangeValue}\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Customer Cash Amount\"\n                  name=\"customercashamount\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Input Customer Cash Amount\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"customercashamount\"\n                    name=\"customercashamount\"\n                    style={{ width: \"100%\" }}\n                    disabled\n                    placeholder=\"Customer Cash Amount\"\n                    value={\n                      props.purchaseData.customercashamount == null\n                        ? \"\"\n                        : props.purchaseData?.customercashamount.toString()\n                    }\n                    onChange={props.InputChangeValue}\n                  />\n                </Form.Item>\n              </Col>\n              {props.purchaseData.partytype == 2 && (\n                <>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"Payment To\"\n                      name=\"paymentto\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please Select payment to\",\n                        },\n                      ]}\n                      hasFeedback\n                    >\n                      <Select\n                        showSearch\n                        placeholder=\"Payment To\"\n                        optionFilterProp=\"paymentto\"\n                        filterOption={(input, option) =>\n                          option.children\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                        onChange={(value) => {\n                          props.InputChangeValue({\n                            key: \"paymentto\",\n                            value: value,\n                          });\n                        }}\n                        value={\n                          props.purchaseData.paymentto == null\n                            ? \"\"\n                            : props.purchaseData?.paymentto\n                        }\n                      >\n                        {paymentToList.map((payment, index) => {\n                          return (\n                            <Option key={index} value={payment.id}>\n                              {payment.name}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                </>\n              )}\n              {(props.purchaseData.partytype == 1 ||\n                props.purchaseData.partytype == 2 ||\n                props.purchaseData.partytype == 3) && (\n                <>\n                  <Col span={24} xs={24} xl={6} md={8}>\n                    <Form.Item\n                      label=\"MC Type\"\n                      name=\"mc_internal_type\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please Select MC Type\",\n                        },\n                      ]}\n                      hasFeedback\n                    >\n                      <Select\n                        showSearch\n                        placeholder=\"MC Type\"\n                        optionFilterProp=\"mc_internal_type\"\n                        filterOption={(input, option) =>\n                          option.children\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                        onBlur={() => {\n                          getTotalAmount({\n                            key: \"mcamount\",\n                            value: props.purchaseData?.mcamount,\n                          });\n                        }}\n                        onChange={(value) => {\n                          props.InputChangeValue({\n                            key: \"mc_internal_type\",\n                            value: value,\n                          });\n                        }}\n                        value={\n                          props.purchaseData.mc_internal_type == null\n                            ? \"\"\n                            : props.purchaseData?.mc_internal_type\n                        }\n                      >\n                        {props.purchaseData.partytype == 1 ||\n                        props.purchaseData.partytype == 3 ? (\n                          <>\n                            {mcInternalTypeList1.map((mc, index) => {\n                              return (\n                                <Option key={index} value={mc.id}>\n                                  {mc.name}\n                                </Option>\n                              );\n                            })}\n                          </>\n                        ) : props.purchaseData.partytype == 2 ? (\n                          <>\n                            {mcInternalTypeList2.map((mc, index) => {\n                              return (\n                                <Option key={index} value={mc.id}>\n                                  {mc.name}\n                                </Option>\n                              );\n                            })}\n                          </>\n                        ) : (\n                          <>\n                            {mcInternalTypeList.map((mc, index) => {\n                              return (\n                                <Option key={index} value={mc.id}>\n                                  {mc.name}\n                                </Option>\n                              );\n                            })}\n                          </>\n                        )}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  {props.purchaseData.mc_internal_type == 4 && (\n                    <Col span={24} xs={24} xl={6} md={8}>\n                      <Form.Item\n                        label=\"MC Name\"\n                        name=\"mcinternal_id\"\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please Select MC Name\",\n                          },\n                        ]}\n                        hasFeedback\n                      >\n                        <Select\n                          showSearch\n                          placeholder=\"Select MC Name\"\n                          optionFilterProp=\"mcinternal_id\"\n                          onSearch={(value) => {\n                            props.setMCApplicableParams({\n                              ...props.mcApplicableParams,\n                              page: 1,\n                              search: value,\n                            });\n                            props.getMCApplicable({\n                              ...props.mcApplicableParams,\n                              page: 1,\n                              search: value,\n                            });\n                          }}\n                          defaultActiveFirstOption={false}\n                          showArrow={true}\n                          filterOption={false}\n                          onChange={(value) => {\n                            props.InputChangeValue({\n                              key: \"mcinternal_id\",\n                              value: value,\n                            });\n                          }}\n                          value={\n                            props.purchaseData?.mcinternal_id == null\n                              ? \"\"\n                              : props.purchaseData?.mcinternal_id\n                          }\n                          onPopupScroll={() => {\n                            if (\n                              props.mcApplicableParams.page <\n                              props.mcApplicableParams.no_of_pages\n                            ) {\n                              props.setMCApplicableParams({\n                                ...props.mcApplicableParams,\n                                page: props.mcApplicableParams.page + 1,\n                              });\n                              props.getMCApplicable({\n                                ...props.mcApplicableParams,\n                                page: props.mcApplicableParams.page + 1,\n                              });\n                            }\n                          }}\n                        >\n                          {props.mcApplicableList.map((mcName, index) => {\n                            return (\n                              <Option key={index} value={mcName.id}>\n                                {mcName.first_name} {mcName.last_name} -{\" \"}\n                                {mcName.username}\n                              </Option>\n                            );\n                          })}\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                  )}\n\n                  {props.purchaseData.mc_internal_type == 2 ||\n                  props.purchaseData.mc_internal_type == 4 ? (\n                    <>\n                      <Col span={24} xs={24} xl={6} md={8}>\n                        <Form.Item\n                          label=\"MC Amount\"\n                          name=\"mcamount\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please Input MC Amount\",\n                            },\n                          ]}\n                          getValueProps={() => {}}\n                          hasFeedback\n                        >\n                          <NumericInput\n                            id=\"mcamount\"\n                            name=\"mcamount\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"MC amount\"\n                            maxLength={6}\n                            value={\n                              props.purchaseData.mcamount == null\n                                ? \"\"\n                                : props.purchaseData?.mcamount\n                            }\n                            onBlur={(value) => {\n                              getTotalAmount(value);\n                              checkAmount(value);\n                            }}\n                            onChange={props.InputChangeValue}\n                          />\n                        </Form.Item>\n                      </Col>\n                    </>\n                  ) : props.purchaseData.mc_internal_type == 1 ? (\n                    <>\n                      <Col span={24} xs={24} xl={6} md={8}>\n                        <Form.Item\n                          label=\"MC Name\"\n                          name=\"externalmcname\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please input MC Name \",\n                            },\n                          ]}\n                          hasFeedback\n                        >\n                          <Input\n                            id=\"externalmcname\"\n                            name=\"externalmcname\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"MC Name\"\n                            value={\n                              props.purchaseData.externalmcname == null\n                                ? \"\"\n                                : props.purchaseData?.externalmcname\n                            }\n                            onChange={ChangeHandeler}\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={24} xs={24} xl={6} md={8}>\n                        <Form.Item\n                          label=\"MC Mobile\"\n                          name=\"externalmcmobile\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please input MC Name \",\n                            },\n                          ]}\n                          getValueProps={() => {}}\n                          hasFeedback\n                        >\n                          <NumericInput\n                            id=\"externalmcmobile\"\n                            name=\"externalmcmobile\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"MC Mobile\"\n                            maxLength={10}\n                            value={\n                              props.purchaseData.externalmcmobile == null\n                                ? \"\"\n                                : props.purchaseData?.externalmcmobile\n                            }\n                            onChange={props.InputChangeValue}\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={24} xs={24} xl={6} md={8}>\n                        <Form.Item\n                          label=\"MC Bank\"\n                          name=\"externalmcbank_id\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please Select MC Bank\",\n                            },\n                          ]}\n                          hasFeedback\n                        >\n                          <Select\n                            showSearch\n                            placeholder=\"Select MC Bank\"\n                            optionFilterProp=\"externalmcbank_id\"\n                            onChange={(value) => {\n                              props.InputChangeValue({\n                                key: \"externalmcbank_id\",\n                                value: value,\n                              });\n                            }}\n                            filterOption={(input, option) =>\n                              option.children\n                                .toLowerCase()\n                                .includes(input.toLowerCase())\n                            }\n                            value={\n                              props.purchaseData.externalmcbank_id == null\n                                ? \"\"\n                                : props.purchaseData?.externalmcbank_id\n                            }\n                          >\n                            {props.miniBanksList.map((mcBank, index) => {\n                              return (\n                                <Option key={index} value={mcBank.id}>\n                                  {mcBank.name}\n                                </Option>\n                              );\n                            })}\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                      <Col span={24} xs={24} xl={6} md={8}>\n                        <Form.Item\n                          label=\"MC A/C No\"\n                          name=\"externalmcbankacno\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please input MC Bank A/C no \",\n                            },\n                            {\n                              min: 9,\n                              message:\n                                \"A/C Number must be minimum 9 characters.\",\n                            },\n                          ]}\n                          getValueProps={() => {}}\n                          hasFeedback\n                        >\n                          <NumericInput\n                            id=\"externalmcbankacno\"\n                            name=\"externalmcbankacno\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"MC A/C No\"\n                            maxLength={18}\n                            value={\n                              props.purchaseData.externalmcbankacno == null\n                                ? \"\"\n                                : props.purchaseData?.externalmcbankacno\n                            }\n                            onChange={props.InputChangeValue}\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={24} xs={24} xl={6} md={8}>\n                        <Form.Item\n                          label=\"MC IFSC Code\"\n                          name=\"externalmcifsccode\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please Input MC IFSC Code \",\n                            },\n                            {\n                              pattern: new RegExp(\n                                /[A-Z|a-z]{4}[0][a-zA-Z0-9]{6}$/i\n                              ),\n                              message: \"field does not accept IFSC code\",\n                            },\n                          ]}\n                          hasFeedback\n                        >\n                          <Input\n                            id=\"externalmcifsccode\"\n                            name=\"externalmcifsccode\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"MC IFSC Code\"\n                            maxLength={11}\n                            value={\n                              props.purchaseData.externalmcifsccode == null\n                                ? \"\"\n                                : props.purchaseData?.externalmcifsccode\n                            }\n                            onChange={(e) => {\n                              props.InputChangeValue({\n                                key: e.target.name,\n                                value: e.target.value.toUpperCase(),\n                              });\n                            }}\n                          />\n                        </Form.Item>\n                      </Col>\n                      <Col span={24} xs={24} xl={6} md={8}>\n                        <Form.Item\n                          label=\"MC Amount\"\n                          name=\"mcamount\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Please Input MC Amount \",\n                            },\n                          ]}\n                          getValueProps={() => {}}\n                          hasFeedback\n                        >\n                          <NumericInput\n                            id=\"mcamount\"\n                            name=\"mcamount\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"MC amount\"\n                            maxLength={6}\n                            value={\n                              props.purchaseData.mcamount == null\n                                ? \"\"\n                                : props.purchaseData?.mcamount\n                            }\n                            onBlur={(value) => {\n                              getTotalAmount(value);\n                              checkAmount(value);\n                            }}\n                            onChange={props.InputChangeValue}\n                          />\n                        </Form.Item>\n                      </Col>\n                    </>\n                  ) : (\n                    <></>\n                  )}\n                </>\n              )}\n\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item label=\"Total\" getValueProps={() => {}}>\n                  <NumericInput\n                    id=\"total\"\n                    name=\"total\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Total\"\n                    value={\n                      props.purchaseData.total == null\n                        ? \"\"\n                        : props.purchaseData?.total\n                    }\n                    onChange={props.InputChangeValue}\n                    disabled\n                  />\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Address Proof 1\"\n                  name=\"addressproof1_id\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Select Address Proof 1\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Address Proof 1\"\n                    optionFilterProp=\"addressproof1_id\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"addressproof1_id\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseData.addressproof1_id == null\n                        ? \"\"\n                        : props.purchaseData?.addressproof1_id\n                    }\n                  >\n                    {props.miniAddressProofList.map((Addressproof, index) => {\n                      return (\n                        <Option key={index} value={Addressproof.id}>\n                          {Addressproof.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} xl={6} md={8}>\n                <Form.Item\n                  label=\"Address Proof 2\"\n                  name=\"addressproof2_id\"\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Address Proof 2\"\n                    optionFilterProp=\"addressproof2_id\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"addressproof2_id\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseData.addressproof2_id == null\n                        ? \"\"\n                        : props.purchaseData?.addressproof2_id\n                    }\n                  >\n                    {props.miniAddressProofList.map((Addressproof, index) => {\n                      return (\n                        <Option key={index} value={Addressproof.id}>\n                          {Addressproof.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n              {/* // Images Upload // */}\n\n              <Col span={24}>\n                <Tabs onChange={callback} type=\"card\">\n                  <TabPane tab=\"Vehicle Images\" key=\"1\">\n                    <Row gutter={[24, 24]}>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Vehicle Image Front\n                        </p>\n                        <Upload\n                          listType=\"picture-card hp-w-100\"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"vehiclefront_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.vehiclefront_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={\n                                  props.purchaseData.vehiclefront_image?.file\n                                }\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Vehicle Image Back\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"vehicleback_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.vehicleback_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={props.purchaseData.vehicleback_image?.file}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Vehicle Image Left\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"vehicleleft_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.vehicleleft_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={props.purchaseData.vehicleleft_image?.file}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Vehicle Image Right\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"vehicleright_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.vehicleright_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={\n                                  props.purchaseData.vehicleright_image?.file\n                                }\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Insurance\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"insuranceimage\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.insuranceimage != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={props.purchaseData.insuranceimage?.file}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          35C\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"c35_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.c35_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={props.purchaseData.c35_image?.file}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          RC Front\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"rcfront_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.rcfront_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={props.purchaseData.rcfront_image?.file}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          RC Back\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"rcback_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.rcback_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={props.purchaseData.rcback_image?.file}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Pollution\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"pollution_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.pollution_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={props.purchaseData.pollution_image?.file}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Covering Letter\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"coveringletter_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.coveringletter_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={\n                                  props.purchaseData.coveringletter_image?.file\n                                }\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          NOC Image\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100\"\n                          className=\"avatar-uploader \"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"noc_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.noc_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={props.purchaseData.noc_image?.file}\n                                alt=\"avatar\"\n                              />\n\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </Col>\n                    </Row>\n                  </TabPane>\n\n                  <TabPane tab=\"Customer Images\" key=\"2\">\n                    <Row gutter={[24, 24]}>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Customer Image\n                        </p>\n\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"customer_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.customer_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={props.purchaseData.customer_image?.file}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            <div\n                              className=\"hp-bg-img hp-mb-16\"\n                              style={{\n                                opacity: 0.6,\n                                backgroundImage: `url(${dummy})`,\n                              }}\n                            >\n                              {uploadButton}\n                            </div>\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Aadhaar Card Front\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"aadharfront_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.aadharfront_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={props.purchaseData.aadharfront_image?.file}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            <div\n                              className=\"hp-bg-img hp-mb-16\"\n                              style={{\n                                opacity: 0.6,\n                                backgroundImage: `url(${aadhar})`,\n                              }}\n                            >\n                              {uploadButton}\n                            </div>\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Aadhaar Card Back\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"aadharback_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.aadharback_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={props.purchaseData.aadharback_image?.file}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            <div\n                              className=\"hp-bg-img hp-mb-16\"\n                              style={{\n                                opacity: 0.6,\n                                backgroundImage: `url(${aadharBack})`,\n                              }}\n                            >\n                              {uploadButton}\n                            </div>\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Address Proof 1\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"addressproof1_image\",\n                            });\n                          }}\n                        >\n                          {props.purchaseData.addressproof1_image != null ? (\n                            <div className=\"hp-d-flex\">\n                              <img\n                                className=\"ant-upload-select-picture-card hp-preview-img\"\n                                src={\n                                  props.purchaseData.addressproof1_image?.file\n                                }\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                }}\n                              />\n                              <EditOutlined />\n                            </div>\n                          ) : (\n                            <div\n                              className=\"hp-bg-img hp-mb-16\"\n                              style={{\n                                opacity: 0.6,\n                                backgroundImage: `url(${sampleProof})`,\n                              }}\n                            >\n                              {uploadButton}\n                            </div>\n                          )}\n                        </Upload>\n                      </Col>\n                      <Col span={24} xs={8} xl={4} md={6}>\n                        <p className=\"hp-pb-xs-16 hp-mb-2 hp-text-color-primary-1 hp-font-weight-600\">\n                          Address Proof 2\n                        </p>\n                        <Upload\n                          listType=\"picture-card  hp-w-100 \"\n                          className=\"avatar-uploader\"\n                          showUploadList={false}\n                          accept=\"image/*\"\n                          beforeUpload={beforeUpload}\n                          customRequest={(info) => {\n                            props.getPurchasesImageUpload({\n                              file: info.file,\n                              imageType: \"addressproof2_image\",\n                            });\n                          }}\n                        >\n                          <div className=\"hp-bg-img hp-mb-16\">\n                            {props.purchaseData.addressproof2_image != null ? (\n                              <div className=\"hp-d-flex\">\n                                <img\n                                  className=\"ant-upload-select-picture-card hp-preview-img\"\n                                  src={\n                                    props.purchaseData.addressproof2_image?.file\n                                  }\n                                  alt=\"avatar\"\n                                  style={{\n                                    width: \"100%\",\n                                  }}\n                                />\n                                <EditOutlined />\n                              </div>\n                            ) : (\n                              <div\n                                className=\"hp-bg-img hp-mb-16\"\n                                style={{\n                                  opacity: 0.6,\n                                  backgroundImage: `url(${sampleProof})`,\n                                }}\n                              >\n                                {uploadButton}\n                              </div>\n                            )}\n                          </div>\n                        </Upload>\n                      </Col>\n                    </Row>\n                  </TabPane>\n                </Tabs>\n              </Col>\n            </Row>\n            <Button\n              type=\"primary\"\n              className=\"hp-submit-btn hp-mt-10\"\n              htmlType=\"submit\"\n              disabled={props.formSubmitLoading}\n            >\n              Submit\n            </Button>\n          </Form>\n        </Card>\n        <AddPerson />\n        <AddVehicles />\n      </Col>\n    </Row>\n  );\n}\nfunction mapStateToProps({ purchase, mini, person, dealers, counterSales }) {\n  return {\n    miniVehiclesNonStockList: mini.miniVehiclesNonStockList,\n    miniVehiclesNonStockParams: mini.miniVehiclesNonStockParams,\n    miniCountersList: mini.miniCountersList,\n    miniFinanciersList: mini.miniFinanciersList,\n    versionColorsList: mini.versionColorsList,\n    miniBanksList: mini.miniBanksList,\n    miniAddressProofList: mini.miniAddressProofList,\n    miniInsuranceList: mini.miniInsuranceList,\n    purchaseData: purchase.purchaseData,\n    counterData: purchase.counterData,\n    vehicleVersion: purchase.vehicleVersion,\n    imageLooading: purchase.imageLooading,\n    formSubmitLoading: purchase.formSubmitLoading,\n    personlist: person.personlist,\n    personLoading: person.loading,\n    personParams: person.personParams,\n    dealerslist: dealers.dealerslist,\n    dealersParams: dealers.dealersParams,\n    searchPersonId: person.searchPersonId,\n    searchDealerId: dealers.searchDealerId,\n    dealerLoading: dealers.loading,\n    searchVehicleNonStockId: mini.searchVehicleNonStockId,\n    customerByIdList: purchase.customerByIdList,\n    mcApplicableList: counterSales.mcApplicableList,\n    mcApplicableParams: counterSales.mcApplicableParams,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  InputChangeValue,\n  getVehicleData,\n  getVehicleVersion,\n  getPurchasesImageUpload,\n  getFormulaExecuter,\n  addPurchase,\n  purchaseClear,\n  getMiniVehiclesNonStock,\n  setMiniVehiclesNonStockParams,\n  getMiniCounters,\n  getPurchaseDoc,\n  getMiniFinanciers,\n  getMiniBanks,\n  getMiniAddressProof,\n  getMiniInsurance,\n  getVersionColors,\n  SetPersonParams: Person.SetPersonParams,\n  getPerson: Person.getPerson,\n  customerIsModelVisible: Person.isModelVisible,\n  vehicleIsModelVisible: Vehicles.isModelVisible,\n  SetDealersParams,\n  getDealers,\n  getCustomerById,\n  insuranceNumberValidate,\n  getMCApplicable,\n  setMCApplicableParams,\n  getSystemFormulas,\n})(purchasesAdd);\n"],"sourceRoot":""}