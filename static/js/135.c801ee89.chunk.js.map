{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","assets/images/app/empty-list.svg","view/pages/Reports/SaleQuotation/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","reports","mini","modelName","reportParamsData","reportDataList","loading","columnsList","reportView","miniCountersList","miniOccupationList","miniVersionList","InputChangeValue","getReportList","clearData","getMiniCounters","getMiniOccupation","getMiniVersion","Form","useForm","form","disableDateRanges","range","startDate","endDate","current","startCheck","endCheck","moment","format","useEffect","columns","map","column","title","dataIndex","unshift","data","row","key","index","setFieldsValue","start_date","end_date","file_format","saletype","occupation","counter","version","gutter","layout","name","initialValues","remember","onFinish","params","objData","model_name","ParamsData","add","xs","md","xl","Item","label","rules","required","message","style","width","picker","placeholder","disabledDate","onChange","date","value","disabled","showSearch","allowClear","filterOption","input","option","children","toLowerCase","includes","optionFilterProp","id","Option","occupation_id","counter_id","bank","version_id","Group","e","target","Button","offset","htmlType","submit","length","dataSource","scroll","x","pagination","image","EmptyImage","imageStyle","height","description"],"mappings":"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","file":"static/js/135.c801ee89.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/empty-list.6fd5c5d1.svg\";","import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  DatePicker,\n  Button,\n  Radio,\n  Select,\n  Empty,\n} from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport EmptyImage from \"../../../../assets/images/app/empty-list.svg\";\nimport {\n  InputChangeValue,\n  getReportList,\n  clearData,\n} from \"../../../../store/reports/reportsSlice\";\nimport {\n  getMiniCounters,\n  getMiniOccupation,\n  getMiniVersion,\n} from \"../../../../store/mini/miniSlice\";\n\nfunction SaleQuotationReport(props) {\n  const [form] = Form.useForm();\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  useEffect(() => {\n    props.clearData();\n    props.getMiniOccupation();\n    props.getMiniCounters();\n    props.getMiniVersion();\n  }, []);\n\n  const enquiryTypeList = [\n    { id: 1, name: \"Direct Sale\" },\n    { id: 2, name: \"Finance Sale\" },\n    { id: 3, name: \"OVF Sale\" },\n  ];\n\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const onFinish = () => {\n    if (props.reportParamsData.saletype == 1 || props.reportParamsData.saletype == 2) {\n      var { file_format, ...params } = props.reportParamsData;\n      var objData = {\n        file_format: file_format,\n        model_name:\"SaleQuotation\",\n      };\n    } else {\n      var { file_format, ...params } = props.reportParamsData;\n      var objData = {\n        file_format: file_format,\n        model_name: \"OVFQuotation\",\n      };\n    }\n    props.getReportList({\n      objData,\n      ParamsData: {\n        ...params,\n        start_date:\n          params.start_date != null\n            ? moment(params.start_date).format(\"YYYY-MM-DD\")\n            : \"\",\n        end_date:\n          params.end_date != null\n            ? moment(params.end_date).add(1, \"days\").format(\"YYYY-MM-DD\")\n            : \"\",\n      },\n    });\n  };\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  const columns = props.columnsList.map((column) => {\n    return {\n      title: column,\n      dataIndex: column,\n    };\n  });\n  columns.unshift({ title: \"S.No\", dataIndex: \"index\" });\n\n  const data = props.reportDataList.map((row, key) => ({\n    ...row,\n    index: key + 1,\n  }));\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.reportParamsData?.start_date,\n      end_date: props.reportParamsData?.end_date,\n      file_format: props.reportParamsData?.file_format,\n      saletype: props.reportParamsData?.saletype,\n      occupation: props.reportParamsData?.occupation,\n      counter: props.reportParamsData?.counter,\n      version: props.reportParamsData?.version,\n    });\n  }, [props.reportParamsData]);\n  return (\n    <Row gutter={[12, 12]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Sale Quotation Report\"\n        // addModelTile=\"Add Zone\"\n        goBack={true}\n        // setIsModalVisible={props.isModelVisible}\n        // isModalVisible={props.model}\n      />\n      <Col span={24}>\n        <Card>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item\n                  label=\"From Date\"\n                  name=\"start_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your From Date!\",\n                    },\n                  ]}\n                >\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment(),\n                    })}\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"start_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                      if (date == null) {\n                        props.InputChangeValue({\n                          key: \"end_date\",\n                          value: \"\",\n                        });\n                      }\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item\n                  label=\"To Date\"\n                  name=\"end_date\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your To Date!\",\n                    },\n                  ]}\n                >\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment().format(\"YYYY-MM-DD\"),\n                      startDate: moment(\n                        props.reportParamsData?.start_date\n                      ).format(\"YYYY-MM-DD\"),\n                    })}\n                    disabled={\n                      props.reportParamsData.start_date == null ||\n                      props.reportParamsData.start_date == \"\"\n                        ? true\n                        : false\n                    }\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"end_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Sale Type\" name=\"saletype\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Sale Type\"\n                    optionFilterProp=\"saletype\"\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"saletype\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.saletype == null\n                        ? \"\"\n                        : props.reportParamsData?.saletype\n                    }\n                  >\n                    {enquiryTypeList.map((saletype, index) => {\n                      return (\n                        <Option key={index} value={saletype.id}>\n                          {saletype.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Occupation :\" name=\"occupation\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Occupation\"\n                    optionFilterProp=\"occupation\"\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"occupation\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.occupation_id == null\n                        ? \"\"\n                        : props.reportParamsData?.occupation_id\n                    }\n                  >\n                    {props.miniOccupationList.map((occupation, index) => {\n                      return (\n                        <Option key={index} value={occupation.id}>\n                          {occupation.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Counter :\" name=\"counter\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select a Counter\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"counter\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.counter_id == null\n                        ? \"\"\n                        : props.reportParamsData?.counter_id\n                    }\n                  >\n                    {props.miniCountersList.map((bank, index) => {\n                      return (\n                        <Option key={index} value={bank.id}>\n                          {bank.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={8} xl={6}>\n                <Form.Item label=\"Version :\" name=\"version\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Version\"\n                    optionFilterProp=\"Version\"\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"version\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.reportParamsData.version_id == null\n                        ? \"\"\n                        : props.reportParamsData?.version_id\n                    }\n                  >\n                    {props.miniVersionList.map((version, index) => {\n                      return (\n                        <Option key={index} value={version.id}>\n                          {version.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={10} xl={10}>\n                <Form.Item\n                  label=\"Report Format\"\n                  name=\"file_format\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select Your Report Format!\",\n                    },\n                  ]}\n                >\n                  <Radio.Group\n                    name=\"file_format\"\n                    onChange={ChangeHandeler}\n                    value={props.reportParamsData?.file_format}\n                  >\n                    <Radio.Button value={0}>CSV</Radio.Button>\n                    <Radio.Button value={2}>XLSX</Radio.Button>\n                    {/* <Radio.Button value={\"HRMS\"}>HRMS</Radio.Button> */}\n                    <Radio.Button value={5}>VIEW</Radio.Button>\n                  </Radio.Group>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col md={12} offset={12}>\n                <Button\n                  // block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-float-right hp-mt-10 hp-ml-10\"\n                  onClick={() => {\n                    props.clearData();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n                <Button\n                  // block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-float-right hp-mt-10\"\n                  disabled={props.loading}\n                  loading={props.loading}\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Generate Report\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Card>\n      </Col>\n\n      <Col span={24}>\n      {props.reportView && (\n          <>\n        {props.reportDataList.length != 0 &&\n        props.reportParamsData.file_format == 5 ? (\n          <>\n            <Card>\n              <Row className=\"hp-mb-12\">\n                <Col span={24}>\n                  <Table\n                    columns={columns}\n                    dataSource={data}\n                    scroll={{ x: 500 }}\n                    pagination={false}\n                    size=\"middle\"\n                    loading={props.loading}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </>\n        ) : (\n          <Card>\n            <Empty\n              className=\"hp-m-32\"\n              image={EmptyImage}\n              imageStyle={{\n                height: 160,\n              }}\n              description={<h5>Your Sale Quotation is empty</h5>}\n            ></Empty>\n          </Card>\n        )}\n         </>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ reports, mini }) {\n  return {\n    modelName: reports.modelName,\n    reportParamsData: reports.reportParamsData,\n    reportDataList: reports.reportDataList,\n    loading: reports.loading,\n    columnsList: reports.columnsList,\n    reportView: reports.reportView,\n    miniCountersList: mini.miniCountersList,\n    miniOccupationList: mini.miniOccupationList,\n    miniVersionList: mini.miniVersionList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  InputChangeValue,\n  getReportList,\n  clearData,\n  getMiniCounters,\n  getMiniOccupation,\n  getMiniVersion,\n})(SaleQuotationReport);\n"],"sourceRoot":""}