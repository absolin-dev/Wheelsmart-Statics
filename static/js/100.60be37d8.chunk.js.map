{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/components/data-entry/inputs/numberInput.jsx","view/pages/MastersDashboard/fvQuestions/addFvQuestions.jsx","view/pages/MastersDashboard/fvQuestions/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","NumericInput","value","onChange","onBlur","e","inputValue","target","test","key","name","valueTemp","charAt","length","slice","replace","connect","fvQuestion","mini","rowdata","model","miniCountersList","purchaseStockList","purchaseStockParams","rowDataView","fvQuestionsAdd","isModelVisible","InputChangeValue","getMiniCounters","getPurchaseStock","setPurchaseStockParams","Form","useForm","form","handleResetInputValues","useEffect","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","setFieldsValue","question","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","handleAdd","handleUpdate","Item","label","rules","required","message","hasFeedback","style","maxLength","placeholder","system","fvQuestionsList","noofpages","listCount","fvQuestionsParams","loading","userAccessList","getFvQuestions","getFvQuestionsByID","fvQuestionsDelete","SetFvQuestionsParams","page","search","page_size","columns","dataIndex","filterSearch","render","row","filterMode","checkedChildren","unCheckedChildren","checked","is_active","data","questionObj","questionActive","record","indexOf","cursor","color","placement","onConfirm","okText","cancelText","Search","Input","map","index","gutter","isModalVisible","xs","sm","md","allowClear","onSearch","val","tip","spinning","delay","dataSource","scroll","x","pagination","current","pageSize","total","showTotal","showSizeChanger"],"mappings":"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","file":"static/js/100.60be37d8.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Input, Tooltip } from \"antd\";\n\nconst formatNumber = (value) => new Intl.NumberFormat().format(value);\n\nexport default function NumericInput(props) {\n  const { value, onChange, onBlur } = props;\n\n  const handleChange = (e) => {\n    const { value: inputValue } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n\n    if (reg.test(inputValue) || inputValue === \"\" || inputValue === \"-\") {\n      onChange({ key: props.name, value: inputValue });\n    }\n  }; // '.' at the end or only '-' in the input box.\n\n  const handleBlur = () => {\n    let valueTemp = value;\n\n    if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n      valueTemp = value.slice(0, -1);\n    }\n\n    // onChange({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n    onBlur({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n  };\n\n  return (\n    <Input\n      {...props}\n      onChange={handleChange}\n      onBlur={props.onBlur && handleBlur}\n    />\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\n\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  getMiniCounters,\n  getPurchaseStock,\n  setPurchaseStockParams\n} from \"../../../../store/mini/miniSlice\";\n\nimport {\n  fvQuestionsAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/FvQuestions/fvQuestionSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddFvQuestions = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      question: props.rowdata?.question,\n    };\n      props.fvQuestionsAdd(obj);\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      question: props.rowdata?.question,\n    };\n    props.fvQuestionsAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  useEffect(() => {\n    props.getMiniCounters();\n  }, []);\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Field Verification Questions\n    </h5>\n  );\n\n  const onSearch = (value) => {\n    console.log(\"search:\", value);\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      question: props.rowdata.question,\n    });\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={616}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"userForm\"\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n          <Form.Item label=\"Question :\"\n            name=\"question\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Question!\"\n              },\n            ]}\n            hasFeedback>\n            <Input\n              id=\"question\"\n              name=\"question\"\n              style={{ width: \"100%\" }}\n              maxLength={50}\n              placeholder=\"Question\"\n              value={props.rowdata?.question}\n              onChange={ChangeHandeler}\n            />\n          </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ fvQuestion, mini }) {\n  return {\n    rowdata: fvQuestion.rowdata,\n    model: fvQuestion.model,\n    miniCountersList: mini.miniCountersList,\n    purchaseStockList: mini.purchaseStockList,\n    purchaseStockParams: mini.purchaseStockParams,\n    rowDataView: fvQuestion.rowDataView\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fvQuestionsAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniCounters,\n  getPurchaseStock,\n  setPurchaseStockParams\n})(AddFvQuestions);\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Input,\n  Card,\n  Pagination,\n  Switch,\n  Spin,\n  Popconfirm,\n} from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { FilterOutlined } from \"@ant-design/icons\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\n\nimport {\n  getFvQuestions,\n  getFvQuestionsByID,\n  fvQuestionsDelete,\n  isModelVisible,\n  SetFvQuestionsParams,\n  fvQuestionsAdd,\n} from \"../../../../store/Masters/FvQuestions/fvQuestionSlice\";\n\nimport AddFvQuestions from \"./addFvQuestions\";\n\nfunction FvQuestions(props) {\n  useEffect(() => {\n    props.getFvQuestions({ page: 1, search: \"\", page_size: 10 });\n  }, []);\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"5%\",\n      // sorter: (a, b) => a.index - b.index,\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      filterSearch: true,\n      width: \"15%\",\n    },\n    {\n      title: \"Question\",\n      render: (row) => <span className={columnClass}>{row.question}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"20%\",\n    },\n    {\n      title: \"Status\",\n      width: \"10%\",\n      render: (row) => (\n        <Space size=\"middle\">\n          <Switch\n            id=\"questionActive\"\n            size=\"default\"\n            checkedChildren=\"Active\"\n            unCheckedChildren=\"InActive\"\n            checked={row.is_active}\n            onChange={(value) => {\n              questionActive(row);\n            }}\n          />\n        </Space>\n      ),\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: \"10%\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {props.userAccessList?.indexOf(\"Masters.change_fieldverificationquestions\") !== -1 && (\n          <i\n            className=\"ri-edit-box-line hp-mr-2 \"\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n            onClick={() => {\n              props.getFvQuestionsByID(row.id);\n              props.isModelVisible(true);\n            }}\n          ></i>\n          )}\n\n        {props.userAccessList?.indexOf(\"Masters.delete_fieldverificationquestions\") !== -1 && (\n          <Popconfirm\n            placement=\"topRight\"\n            title=\"Are you sure to delete this Record?\"\n            onConfirm={() => props.fvQuestionsDelete(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            className=\"hp-ml-8\"\n            icon={\n              <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n            }\n          >\n            <i\n              className=\"ri-delete-bin-2-line \"\n              style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n            ></i>\n          </Popconfirm>\n        )}\n        </Space>\n      ),\n    },\n  ];\n  const { Search } = Input;\n\n  const data = props.fvQuestionsList.map((row, key) => ({\n    ...row,\n    index:\n      (props.fvQuestionsParams.page - 1) * props.fvQuestionsParams.page_size +\n      key +\n      1,\n  }));\n\n  function questionActive(data) {\n    const questionObj = {\n      id: data.id,\n      is_active: !data.is_active,\n    };\n    props.fvQuestionsAdd(questionObj);\n  }\n\n  function onPageChange(page, pageSize) {\n    props.SetFvQuestionsParams({\n      ...props.fvQuestionsParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getFvQuestions({\n      ...props.fvQuestionsParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.SetFvQuestionsParams({ ...props.fvQuestionsParams, search: val });\n    props.getFvQuestions({ ...props.fvQuestionsParams, search: val });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Field Verification Questions Master\"\n        addModelTile={\n          props.userAccessList?.indexOf(\"Masters.add_fieldverificationquestions\") !== -1 &&\n          \"Add FV Question\"\n        }\n        goBack={true}\n        setIsModalVisible={props.isModelVisible}\n        isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\">\n            <Col span={12} xs={24} sm={24} md={14} className=\"hp-mb-10\">\n              <Search\n                placeholder=\"Search...\"\n                allowClear\n                onChange={(e) => {\n                  if (e.target.value == \"\") {\n                    props.getFvQuestions({\n                      ...props.fvQuestionsParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                    props.SetFvQuestionsParams({\n                      ...props.fvQuestionsParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                  }\n                }}\n                onSearch={(value) => {\n                  onSearch(value);\n                }}\n              />\n            </Col>\n\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 500 }}\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.fvQuestionsParams?.page}\n                pageSize={props.fvQuestionsParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <AddFvQuestions />\n    </Row>\n  );\n}\n\nfunction mapAreaToProps({ fvQuestion, mini, system }) {\n  return {\n    fvQuestionsList: fvQuestion.fvQuestionsList,\n    noofpages: fvQuestion.noofpages,\n    listCount: fvQuestion.listCount,\n    fvQuestionsParams: fvQuestion.fvQuestionsParams,\n    loading: fvQuestion.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapAreaToProps, {\n  getFvQuestions,\n  getFvQuestionsByID,\n  fvQuestionsDelete,\n  isModelVisible,\n  SetFvQuestionsParams,\n  fvQuestionsAdd,\n})(FvQuestions);\n"],"sourceRoot":""}