{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","layout/components/content/page-title/index.jsx","assets/images/app/empty-list.svg","assets/images/pages/profile/dummy-img.jpeg","assets/images/defaultVechicleImg.svg","view/pages/Dashboard/stock/stockGrid.jsx","view/pages/Dashboard/stock/stockList.jsx","view/pages/Dashboard/stock/filter.jsx","view/pages/Dashboard/stock/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","PageTitle","addModelTile2","setIsModalVisible2","xs","md","xl","StockGrid","value","Text","Typography","Link","sm","lg","xxl","gutter","vehicle","vehicleno","title","version","name","length","substring","counter","division","cluster","zone","approvalstatus","approvalstatus_name","partytype_name","href","id","ArrowRightOutlined","connect","stock","loading","stockParams","stockList","columnClass","columns","dataIndex","width","render","text","row","customer","firstname","brand","brandfamily","data","map","key","index","page","page_size","tip","spinning","delay","rowClassName","dataSource","scroll","x","pagination","mini","miniZonesList","miniCountersList","miniDivisionsList","miniClustersList","miniModelsList","miniBrandsList","miniBrandFamilyList","miniVersionList","miniVehicletypesList","InputChangeValue","clearData","getMiniCounters","getMiniZones","getMiniDivisions","getMiniClusters","getMiniModels","getStockList","setStockParams","getMiniBrands","getMiniBrandFamily","getMiniVersion","getMiniVehicletypes","getMiniZonesClearData","getMiniClustersClearData","getMiniDivisionsClearData","getMiniCountersClearData","getMiniBrandsClearData","getMiniBrandFamilyClearData","getMiniModelsClearData","getMiniVersionClearData","Form","useForm","form","useEffect","console","log","setFieldsValue","counter__zone","counter__division","counter__cluster","vehicle__year","vehicle__version__model","vehicle__version__brand","vehicle__version__brandfamily","vehicle__version__vehicletype","vehicle__version","availability","layout","initialValues","remember","onFinish","moment","format","Item","label","showSearch","allowClear","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","onChange","zone_id","Option","division_id","cluster_id","counter_id","bank","brand_id","brandfamily_id","model","model_id","version_id","vehicletype_id","vehicletype","style","picker","disabledDate","range","startDate","endDate","current","startCheck","endCheck","disableDateRanges","Date","year","date","search","htmlType","submit","system","listCount","userAccessList","getReportList","clearStockList","Search","Input","useState","productListToggle","setProductListToggle","isShown","setIsShown","onPageChange","pageSize","showTotal","total","start_date","end_date","e","target","onSearch","val","FilterOutlined","AppstoreOutlined","OrderedListOutlined","showSizeChanger","renderItem","image","EmptyImage","imageStyle","height","description"],"mappings":"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","file":"static/js/25.27715883.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import React from \"react\";\n\nimport { Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function PageTitle(props) {\n  let history = useHistory();\n\n  const {\n    pageTitle,\n    pageText,\n    goBack,\n    addModelTile,\n    addModelTile2,\n    setIsModalVisible,\n    setIsModalVisible2,\n  } = props;\n\n  return (\n    <Col span={24} className=\"hp-mt-12\">\n      <Row>\n        <Col span={16} xs={16} md={12} xl={16}>\n          {goBack && (\n            <Link\n              to=\"#\"\n              onClick={() => {\n                history.goBack();\n              }}\n              className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n            >\n              <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n            </Link>\n          )}\n          <Row className=\"hp-d-inline-block\">\n            <Col span={24}>\n              {pageTitle && <h3 className=\"hp-mb-2 hp-mt-4\">{pageTitle}</h3>}\n            </Col>\n\n            <Col span={24}>\n              {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n            </Col>\n          </Row>\n        </Col>\n        <Col span={8} xs={8} md={12} xl={8}>\n          <div className=\"hp-float-right hp-d-inline-block\">\n            {addModelTile && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile}\n                </Button>\n              </div>\n            )}\n            {addModelTile2 && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"hp-pr-12\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible2(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile2}\n                </Button>\n              </div>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/empty-list.6fd5c5d1.svg\";","export default __webpack_public_path__ + \"static/media/dummy-img.4128e0e1.jpeg\";","export default __webpack_public_path__ + \"static/media/defaultVechicleImg.5d5b5510.svg\";","import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\nimport { Row, Col, Button, Card, Avatar, Typography, InputNumber, Tooltip  } from \"antd\";\n\nimport { ArrowRightOutlined   } from \"@ant-design/icons\";\nimport dummy from \"../../../../assets/images/pages/profile/dummy-img.jpeg\";\nimport defaultVehicle from \"../../../../assets/images/defaultVechicleImg.svg\";\n\nexport default function StockGrid(props) {\n\n  const { value } = props;\n  const { Text, Link } = Typography;\n  // console.log(\"PurchaseGridList\", value);\n  return (\n    <Col\n      span={24}\n      xs={24}\n      sm={12}\n      md={12}\n      lg={8}\n      xl={8}\n      xxl={6}\n      className=\"hp-mb-32\"\n      key={value.id}\n    >\n      <Card className=\"hp-border-color-black-40 hp-transition hp-hover-border-color-primary-4\n      hp-border-radius-30 hp-card-6 hp-eCommerceCardOne hp-eCommerceCardOne-wishlist hp-icon-card\">\n        \n        <Col span={24}>\n          <Row gutter={[24, 24]} className=\"hp-mb-10\">\n            <Col className=\" hp-mt-0 hp-p-0\" span={12}>\n              <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                Vehicle Number :\n              </p>\n              <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                {value.vehicle?.vehicleno}\n              </p>\n            </Col>\n\n            <Col span={12}>\n              <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                Version :\n              </p>\n              <Tooltip title={value.vehicle?.version?.name}>\n                <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                  {/* {value.vehicle?.version?.name} */}\n                   {value.vehicle?.version?.name.length > 10 ?\n                    `${value.vehicle?.version?.name.substring(0, 10)}...` : value.vehicle?.version?.name}\n                </p>\n              </Tooltip>\n            </Col>\n          </Row>\n          <Row gutter={[24, 24]} className=\"hp-mb-10\">\n            <Col className=\"hp-mt-0 hp-p-0\" span={12}>\n              <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                Counter :\n              </p>\n              <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                {value.counter?.name}\n              </p>\n            </Col>\n\n            <Col span={12}>\n              <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                Division :\n              </p>\n              <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                {value.counter?.division?.name}\n              </p>\n            </Col>\n          </Row>\n\n          <Row gutter={[24, 24]} className=\"hp-mb-10\">\n            <Col className=\"hp-mt-0 hp-p-0\" span={12}>\n              <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                Cluster :\n              </p>\n              <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                {value.counter?.cluster?.name}\n              </p>\n            </Col>\n\n            <Col span={12}>\n              <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                Zone :\n              </p>\n              <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                {value.counter?.zone?.name}\n              </p>\n            </Col>\n          </Row>\n\n          <Row gutter={[24, 24]} className=\"hp-mb-10\">\n            <Col className=\"hp-mt-0 hp-p-0\" span={10}>\n              <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                Status :\n              </p>\n              <Text\n              type={\n                value.approvalstatus == 2\n                  ? \"success\"\n                  : value.approvalstatus == 3\n                  ? \"danger\"\n                  : \"warning\"\n              }\n            >\n              {value.approvalstatus_name == null\n                ? \"Pending\"\n                : value.approvalstatus_name}\n            </Text>\n            </Col>\n\n            <Col span={10}>\n              <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                Party Type :\n              </p>\n              <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                {value.partytype_name}\n              </p>\n            </Col>\n\n            <Col span={4}>\n              <Link href={`/pages/stock-view/` + value.id}>\n                <Avatar size={35} icon={ <ArrowRightOutlined  /> } />\n              </Link>\n            </Col>\n          </Row>\n\n          {/* <Row gutter={[8, 8]}>\n            <Col span={24} className=\"hp-w-100\">\n              <Link href={`/pages/purchases-view/` + value.id}>\n                <Button\n                  block\n                  // icon={<RiShoppingBagLine className=\"remix-icon\" />}\n                  className=\"hp-px-12 hp-btn-bg-color\"\n                >\n                  View Details\n                </Button>\n              </Link>\n            </Col>\n          </Row> */}\n        </Col>\n      </Card>\n    </Col>\n  );\n}\n","import React from \"react\";\n\nimport { Card, Row, Col, Table, Space, Spin } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction StockList(props) {\n  const { stockList,  } = props;\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-100 hp-text-color-dark-0 hp-font-weight-600 \";\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"3%\",\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"date\",\n      width: \"10%\",\n      render: (text) => <span className={columnClass}>{text}</span>,\n    },\n    {\n      title: \"Doc No\",\n      dataIndex: \"code\",\n      width: \"10%\",\n      render: (text) => <span className={columnClass}>{text}</span>,\n    },\n    {\n      title: \"Customer\",\n      width: \"10%\",\n      render: (row) => (\n        <span className={columnClass}>{row.customer?.firstname}</span>\n      ),\n    },\n    {\n      title: \"Vehicle No\",\n      width: \"10%\",\n      render: (row) => (\n        <Link to={`/pages/purchases-view/` + row.id}>\n          {row.vehicle.vehicleno}\n        </Link>\n      ),\n    },\n    {\n      title: \"Counter Name\",\n      width: \"10%\",\n      render: (row) => <span className={columnClass}>{row.counter?.name}</span>,\n    },\n    {\n      title: \"Party Type\",\n      width: \"10%\",\n      render: (row) => <span className={columnClass}>{row.partytype_name}</span>,\n    },\n    {\n      title: \"Version\",\n      width: \"10%\",\n      render: (row) => <span className={columnClass}>{row.vehicle?.version?.name}</span>,\n    },\n    {\n      title: \"Brand\",\n      width: \"10%\",\n      render: (row) => <span className={columnClass}>{row.vehicle?.version?.brand?.name}</span>,\n    },\n    {\n      title: \"Brand Family\",\n      width: \"10%\",\n      render: (row) => <span className={columnClass}>{row.vehicle?.version?.brandfamily?.name}</span>,\n    },\n    {\n      title: \"Status\",\n      width: \"10%\",\n      render: (row) => <span className={columnClass}>{row.approvalstatus_name}</span>,\n    },\n    // {\n    //   title: \"Actions\",\n    //   key: \"action\",\n    //   sorter: true,\n    //   width: \"10%\",\n    //   render: (row, record) => (\n    //     <Space size=\"middle\">\n    //       <Link to={`/pages/purchasesadd/` + row.id}>\n    //         <i\n    //           className=\"ri-edit-box-line hp-mr-2 \"\n    //           style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n    //         ></i>\n    //       </Link>\n    //       <i\n    //         className=\"ri-delete-bin-2-line \"\n    //         style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n    //         onClick={() => deletePurchase(row)}\n    //       ></i>\n    //     </Space>\n    //   ),\n    // },\n  ];\n  const data = stockList.map((row, key) => ({\n    ...row,\n    // index: key + 1,\n    index: (props.stockParams.page - 1) * props.stockParams.page_size + (key + 1),\n  }));\n\n  return (\n    <Card>\n      <Row className=\"hp-mb-12\">\n        <Col span={24}>\n          <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n            <Table\n              columns={columns}\n              rowClassName=\"hp-btn-bg-color-none\"\n              dataSource={data}\n              scroll={{x: 1300}}\n              pagination={false}\n              size=\"middle\"\n            />\n          </Spin>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\n\nfunction mapStateToProps({ stock }) {\n  return {\n    loading: stock.loading,\n    stockParams: stock.stockParams,\n  };\n}\n\nexport default connect(mapStateToProps, {\n\n})(StockList);","import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  DatePicker,\n  Button,\n  Radio,\n  Select,\n  Empty,\n} from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { connect } from \"react-redux\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport EmptyImage from \"../../../../assets/images/app/empty-list.svg\";\nimport {\n  InputChangeValue,\n  clearData,\n  getStockList,\n  setStockParams,\n} from \"../../../../store/sideMenu/stock/stockSlice\";\nimport {\n  getMiniCounters,\n  getMiniZones,\n  getMiniDivisions,\n  getMiniClusters,\n  getMiniModels,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniVersion,\n  getMiniVehicletypes,\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n  getMiniBrandsClearData,\n  getMiniBrandFamilyClearData,\n  getMiniModelsClearData,\n  getMiniVersionClearData\n} from \"../../../../store/mini/miniSlice\";\nimport moment from \"moment\";\nfunction Filter(props) {\n  const [form] = Form.useForm();\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  useEffect(() => {\n    props.clearData();\n    props.getMiniZones();\n    props.getMiniCounters();\n    props.getMiniDivisions();\n    props.getMiniClusters();\n    props.getMiniModels();\n    props.getMiniBrands();\n    props.getMiniVehicletypes();\n    props.getMiniVersion();\n    props.getMiniBrandFamily();\n  }, []);\n\n  const availabilityList = [\n    { value: true, name: \"Yes\" },\n    { value: false, name: \"No\" },\n  ];\n\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const onFinish = () => {\n    props.getStockList({\n      ...props.stockParams,\n      page: 1,\n      vehicle__year: props.stockParams.vehicle__year\n        ? moment(props.stockParams.vehicle__year).format(\"YYYY\")\n        : \"\",\n    });\n  };\n\n  function clearFilter() {\n    props.setStockParams({\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getStockList({\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getMiniZones();\n    props.getMiniCounters();\n    props.getMiniDivisions();\n    props.getMiniClusters();\n    props.getMiniModels();\n    props.getMiniVehicletypes();\n    props.getMiniBrandFamily();\n    props.getMiniVersion();\n    props.getMiniBrands();\n  }\n\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck = current && current < moment(startDate, \"YYYY\");\n      }\n      if (endDate) {\n        endCheck = current && current > moment(endDate, \"YYYY\");\n      }\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  console.log(\"props.miniModelsList\", props.miniModelsList);\n\n  useEffect(() => {\n    form.setFieldsValue({\n      counter__zone: props.stockParams?.counter__zone,\n      counter__division: props.stockParams?.counter__division,\n      counter__cluster: props.stockParams?.counter__cluster,\n      counter: props.stockParams.counter,\n      vehicle__year: props.stockParams.vehicle__year,\n      vehicle__version__model:\n        props.stockParams.vehicle__version__model,\n      vehicle__version__brand: props.stockParams.vehicle__version__brand,\n      vehicle__version__brandfamily:\n        props.stockParams.vehicle__version__brandfamily,\n      vehicle__version__vehicletype:\n        props.stockParams.vehicle__version__vehicletype,\n      vehicle__version: props.stockParams.vehicle__version,\n      availability: props.stockParams?.availability,\n    });\n  }, [props.stockParams]);\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>\n        <Card>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              <Col\n                span={24}\n                xs={24}\n                md={6}\n                xl={6}\n                className=\"hp-pr-sm-0 hp-pr-12\"\n              >\n                <Form.Item label=\"Zone Name:\" name=\"counter__zone\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Zone\"\n                    optionFilterProp=\"zone\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniDivisions({ zone: value });\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.InputChangeValue({\n                        key: \"counter__zone\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.stockParams.zone_id == null\n                        ? \"\"\n                        : props.stockParams?.zone_id\n                    }\n                  >\n                    {props.miniZonesList.map((zone, index) => {\n                      return (\n                        <Option key={index} value={zone.id}>\n                          {zone.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Division Name:\" name=\"counter__division\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Division\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniClusters({ division: value });\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.InputChangeValue({\n                        key: \"counter__division\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.stockParams.division_id == null\n                        ? \"\"\n                        : props.stockParams?.division_id\n                    }\n                  >\n                    {props.miniDivisionsList.map((division, index) => {\n                      return (\n                        <Option key={index} value={division.id}>\n                          {division.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Cluster Name:\" name=\"counter__cluster\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Cluster\"\n                    optionFilterProp=\"cluster\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniCounters({ cluster: value });\n                      props.getMiniCountersClearData();\n                      props.InputChangeValue({\n                        key: \"counter__cluster\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.stockParams.cluster_id == null\n                        ? \"\"\n                        : props.stockParams?.cluster_id\n                    }\n                  >\n                    {props.miniClustersList.map((cluster, index) => {\n                      return (\n                        <Option key={index} value={cluster.id}>\n                          {cluster.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Counter :\" name=\"counter\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select a Counter\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"counter\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.stockParams.counter_id == null\n                        ? \"\"\n                        : props.stockParams?.counter_id\n                    }\n                  >\n                    {props.miniCountersList.map((bank, index) => {\n                      return (\n                        <Option key={index} value={bank.id}>\n                          {bank.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Brand Name:\" name=\"vehicle__version__brand\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Brand\"\n                    optionFilterProp=\"brand\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniBrandFamily({ brand: value });\n                      props.getMiniBrandFamilyClearData();\n                      props.getMiniModelsClearData();\n                      props.getMiniVersionClearData();\n                      props.InputChangeValue({\n                        key: \"vehicle__version__brand\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.stockParams.brand_id == null\n                        ? \"\"\n                        : props.stockParams?.brand_id\n                    }\n                  >\n                    {props.miniBrandsList.map((brand, index) => {\n                      return (\n                        <Option key={index} value={brand.id}>\n                          {brand.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item\n                  label=\"BrandFamily Name:\"\n                  name=\"vehicle__version__brandfamily\"\n                  className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select BrandFamily\"\n                    optionFilterProp=\"brandfamily\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniModels({ brandfamily: value });\n                      props.getMiniModelsClearData();\n                      props.getMiniVersionClearData();\n                      props.InputChangeValue({\n                        key: \"vehicle__version__brandfamily\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.stockParams.brandfamily_id == null\n                        ? \"\"\n                        : props.stockParams?.brandfamily_id\n                    }\n                  >\n                    {props.miniBrandFamilyList.map((brandfamily, index) => {\n                      return (\n                        <Option key={index} value={brandfamily.id}>\n                          {brandfamily.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col\n                span={24}\n                xs={24}\n                md={6}\n                xl={6}\n                className=\"hp-pr-sm-0 hp-pr-12\"\n              >\n                <Form.Item label=\"Model :\" name=\"vehicle__version__model\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Model\"\n                    optionFilterProp=\"Model\"\n                    onChange={(value) => {\n                      props.getMiniVersion({ model: value });\n                      props.getMiniVersionClearData(),\n                      props.InputChangeValue({\n                        key: \"vehicle__version__model\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.stockParams.model_id == null\n                        ? \"\"\n                        : props.stockParams?.model_id\n                    }\n                  >\n                    {props.miniModelsList.map((model, index) => {\n                      return (\n                        <Option key={index} value={model.id}>\n                          {model.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Version :\" name=\"vehicle__version\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Version\"\n                    optionFilterProp=\"Version\"\n                    onChange={(value) => {\n                      // props.getMiniVehicletypes({ vehicletype: value });\n                      props.InputChangeValue({\n                        key: \"vehicle__version\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.stockParams.version_id == null\n                        ? \"\"\n                        : props.stockParams?.version_id\n                    }\n                  >\n                    {props.miniVersionList.map((version, index) => {\n                      return (\n                        <Option key={index} value={version.id}>\n                          {version.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item\n                  label=\"Vehicle Type :\"\n                  name=\"vehicle__version__vehicletype\"\n                  className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Vehicle Type\"\n                    optionFilterProp=\"vehicletype\"\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"vehicle__version__vehicletype\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.stockParams.vehicletype_id == null\n                        ? \"\"\n                        : props.stockParams?.vehicletype_id\n                    }\n                  >\n                    {props.miniVehicletypesList.map((vehicletype, index) => {\n                      return (\n                        <Option key={index} value={vehicletype.id}>\n                          {vehicletype.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Availability\" name=\"availability\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Availability\"\n                    optionFilterProp=\"availability\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"availability\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.stockParams.availability == null\n                        ? \"\"\n                        : props.stockParams?.availability\n                    }\n                  >\n                    {availabilityList.map((availability, index) => {\n                      return (\n                        <Option key={index} value={availability.value}>\n                          {availability.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Year\" name=\"vehicle__year\" className=\"hp-mb-0\">\n                  <DatePicker\n                    id=\"year\"\n                    name=\"vehicle__year\"\n                    style={{ width: \"100%\" }}\n                    picker=\"year\"\n                    format=\"YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: new Date(),\n                      startDate: 1990,\n                    })}\n                    placeholder=\"Select Year\"\n                    value={props.stockParams?.year}\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"vehicle__year\",\n                        value: date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n             \n\n              <Col md={4} className=\"hp-mt-18\">\n                <Button\n                  block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    clearFilter();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n              </Col>\n\n              <Col md={4} className=\"hp-mt-18\">\n                <Button\n                  block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Apply\n                </Button>\n              </Col>\n            </Row>\n            {/* <Button\n              type=\"primary\"\n              className=\"hp-submit-btn hp-float-right hp-mt-10\"\n              disabled={props.loading}\n              onClick={() => {\n                form.submit();\n              }}\n            >\n              Apply\n            </Button> */}\n          </Form>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ stock, mini }) {\n  return {\n    loading: stock.loading,\n    stockParams: stock.stockParams,\n    miniZonesList: mini.miniZonesList,\n    miniCountersList: mini.miniCountersList,\n    miniDivisionsList: mini.miniDivisionsList,\n    miniClustersList: mini.miniClustersList,\n    miniModelsList: mini.miniModelsList,\n    miniBrandsList: mini.miniBrandsList,\n    miniBrandFamilyList: mini.miniBrandFamilyList,\n    miniVersionList: mini.miniVersionList,\n    miniVehicletypesList: mini.miniVehicletypesList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  InputChangeValue,\n  clearData,\n  getMiniCounters,\n  getMiniZones,\n  getMiniDivisions,\n  getMiniClusters,\n  getMiniModels,\n  getStockList,\n  setStockParams,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniVersion,\n  getMiniVehicletypes,\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n  getMiniBrandsClearData,\n  getMiniBrandFamilyClearData,\n  getMiniModelsClearData,\n  getMiniVersionClearData\n})(Filter);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  DatePicker,\n  Empty,\n  Button,\n  Input,\n  Pagination,\n  Drawer,\n  Spin,\n  List,\n  Popconfirm,\n} from \"antd\";\nimport {\n  FilterOutlined,\n  UploadOutlined,\n  PlusOutlined,\n  OrderedListOutlined,\n  AppstoreOutlined,\n} from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport PageTitle from \"../../../../layout/components/content/page-title\";\nimport EmptyImage from \"../../../../assets/images/app/empty-list.svg\";\nimport {\n  InputChangeValue,\n  clearData,\n  getStockList,\n  setStockParams,\n  clearStockList,\n} from \"../../../../store/sideMenu/stock/stockSlice\";\nimport StockGrid from \"./stockGrid\";\nimport StockList from \"./stockList\";\nimport Filter from \"./filter\";\nimport { getReportList } from \"../../../../store/reports/reportsSlice\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\n\nfunction Stock(props) {\n  const [form] = Form.useForm();\n  const { Search } = Input;\n  const [productListToggle, setProductListToggle] = useState(false);\n  const [isShown, setIsShown] = useState(false);\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  useEffect(() => {\n    props.clearData();\n    props.getStockList({\n      ...props.stockParams,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n  }, []);\n\n  const handleClick = () => {\n    // 👇️ toggle shown state\n    setIsShown((current) => !current);\n\n    // 👇️ or simply set it to true\n    // setIsShown(true);\n  };\n\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const onFinish = () => {};\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  function onSearch(val) {\n    props.getStockList({ ...props.stockParams, page: 1, search: val });\n    props.setStockParams({ ...props.stockParams, page: 1, search: val });\n  }\n\n  function onPageChange(page, pageSize) {\n    props.clearStockList();\n    props.setStockParams({\n      ...props.stockParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getStockList({\n      ...props.stockParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.stockParams?.start_date,\n      end_date: props.stockParams?.end_date,\n    });\n  }, [props.stockParams]);\n\n  function exportData() {\n    // var { file_format, ...params } = props.reportParamsData;\n    var objData = {\n      file_format: 0,\n      model_name: \"Stock\",\n    };\n\n    props.getReportList({\n      objData,\n      ParamsData: {\n        ...props.stockParams,\n        start_date:\n          props.stockParams.start_date != null &&\n          props.stockParams.start_date != \"\"\n            ? moment(props.stockParams.start_date).format(\"YYYY-MM-DD\")\n            : \"\",\n        end_date:\n          props.stockParams.end_date != null && props.stockParams.end_date != \"\"\n            ? moment(props.stockParams.end_date)\n                .add(1, \"days\")\n                .format(\"YYYY-MM-DD\")\n            : \"\",\n      },\n    });\n  }\n\n  return (\n    <Row gutter={[12, 12]}>\n      <PageTitle pageTitle=\"Stock\" goBack={false} />\n      <Col span={24}>\n        <Row gutter={[12, 12]} className=\"hp-ecommerce-app-header \">\n          {/* <Col md={12} xs={24} className=\"hp-ecommerce-app-header-search \"> */}\n          <Col md={18} xs={24} className=\"hp-ecommerce-app-header-search \">\n            <Search\n              placeholder=\"Search for date, doc, number, customer, counter, vehicle\"\n              allowClear\n              onChange={(e) => {\n                if (e.target.value == \"\") {\n                  props.getStockList({\n                    ...props.stockParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                  props.setStockParams({\n                    ...props.stockParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                }\n              }}\n              onSearch={(value) => {\n                onSearch(value);\n              }}\n            />\n          </Col>\n\n          <Col md={4} xs={8}>\n            <Button\n              // onClick={() => {\n              //   props.isDrawerVisible(true);\n              // }}\n              onClick={handleClick}\n              className=\"hp-w-100 hp-p-12 \"\n              icon={<FilterOutlined className=\"hp-mr-10\" />}\n              size=\"small\"\n            >\n              {\" \"}\n              Filter\n            </Button>\n          </Col>\n\n          <Col md={1} xs={4}>\n            <Button\n              className=\"hp-w-100 hp-p-12\"\n              icon={<AppstoreOutlined />}\n              onClick={() => setProductListToggle(false)}\n            ></Button>\n          </Col>\n\n          <Col md={1} xs={4}>\n            <Button\n              className=\"hp-w-100 hp-p-12\"\n              icon={<OrderedListOutlined />}\n              onClick={() => setProductListToggle(true)}\n            ></Button>\n          </Col>\n        </Row>\n      </Col>\n\n      {isShown && (\n        <Col span={24} xs={24}>\n          <Filter />\n        </Col>\n      )}\n\n      <Col\n        span={24}\n        xs={24}\n        className=\"hp-purchase-app-content\"\n        productListToggle={productListToggle}\n        setProductListToggle={setProductListToggle}\n      >\n        <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n          {props.stockList.length !== 0 ? (\n            <>\n              {!productListToggle ? (\n                <>\n                  <List\n                    dataSource={props.stockList}\n                    renderItem={(value) => <StockGrid value={value} />}\n                  />\n                  <Pagination\n                    size=\"small\"\n                    current={props.stockParams?.page}\n                    pageSize={props.stockParams?.page_size}\n                    total={props.listCount}\n                    showTotal={showTotal}\n                    showSizeChanger\n                    onChange={onPageChange}\n                    className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n                  />\n                </>\n              ) : (\n                <>\n                  <StockList\n                    stockList={props.stockList}\n                    // deletePurchase={deleteRecord}\n                  />{\" \"}\n                  <Pagination\n                    size=\"small\"\n                    current={props.stockParams?.page}\n                    pageSize={props.stockParams?.page_size}\n                    total={props.listCount}\n                    showTotal={showTotal}\n                    showSizeChanger\n                    onChange={onPageChange}\n                    className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n                  />\n                </>\n              )}\n            </>\n          ) : (\n            <Card>\n              <Empty\n                className=\"hp-m-32\"\n                image={EmptyImage}\n                imageStyle={{\n                  height: 160,\n                }}\n                description={<h5>Your Stock list is empty</h5>}\n              >\n                {/* <Button type=\"primary\">\n                <Link to=\" \">Go to Purchase list</Link>\n              </Button> */}\n              </Empty>\n            </Card>\n          )}\n        </Spin>\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ stock, system }) {\n  return {\n    loading: stock.loading,\n    stockParams: stock.stockParams,\n    stockList: stock.stockList,\n    listCount: stock.listCount,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  InputChangeValue,\n  clearData,\n  getStockList,\n  setStockParams,\n  getReportList,\n  clearStockList,\n})(Stock);\n"],"sourceRoot":""}