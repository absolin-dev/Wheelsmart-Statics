{"version":3,"sources":["view/pages/MastersDashboard/person/Filters/Filter.jsx","view/pages/MastersDashboard/person/customerView.jsx","view/pages/MastersDashboard/person/index.jsx"],"names":["date","Date","getFullYear","getMonth","connect","person","mini","vehicles","drawer","personParams","miniOccupationList","miniStatesList","miniDistrictList","miniCityList","miniAreaList","isDrawerVisible","SetPersonParams","FilterInputChangeValue","getPerson","getMiniStates","getMiniDistrict","getMiniCity","getMiniArea","getMiniOccupation","getMiniStatesClearData","getMiniDistrictClearData","getMiniCityClearData","getMiniAreaClearData","props","Form","useForm","form","useEffect","disableDateRanges","range","startDate","endDate","current","startCheck","endCheck","moment","format","setFieldsValue","start_date","end_date","occupation","state","district","city","area","housetype","qualification","gutter","span","title","width","className","onClose","placement","visible","bodyStyle","paddingBottom","layout","name","initialValues","remember","onFinish","page","search","page_size","add","Item","label","style","picker","placeholder","disabledDate","onChange","key","value","disabled","showSearch","allowClear","filterOption","input","option","children","toLowerCase","includes","optionFilterProp","state_id","map","index","Option","id","district_id","city_id","area_id","occupation_id","md","block","type","onClick","htmlType","submit","viewModel","customerViewData","customerViewModel","saletype","customerDetailList","description","code","firstname","middlename","lastname","mobile","aadharno","gender_name","dob","maritalstatus","dom","qualification_name","housetype_name","income","bank","accono","ifsccode","pincode","addressline1","addressline2","customerList","forEach","item","push","modalTitle","onCancel","resetFields","footer","centered","closeIcon","size","grid","xs","sm","lg","xl","xxl","dataSource","renderItem","Meta","system","personlist","noofpages","listCount","loading","userAccessList","model","getcustomerByID","personDelete","isModelVisible","getReportList","clearPersonList","Search","Input","columnClass","columns","dataIndex","fixed","isMobile","filterSearch","filterMode","render","row","createdon","sortDirections","record","indexOf","cursor","color","onConfirm","okText","cancelText","icon","data","gendername","qualificationname","occupationname","pageTitle","e","target","onSearch","val","FilterOutlined","PlusOutlined","objData","file_format","model_name","ParamsData","UploadOutlined","tip","spinning","delay","scroll","x","pagination","filters","sorter","extra","action","currentSort","sortOrder","columnKey","order","pageSize","total","showTotal","showSizeChanger","Filter"],"mappings":"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","file":"static/js/144.74eaacf7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Button,\n  Drawer,\n  Space,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport moment, { min } from \"moment\";\n\nimport {\n  isDrawerVisible,\n  FilterInputChangeValue,\n  getPerson,\n  SetPersonParams,\n} from \"../../../../../store/Masters/Person/personSlice\";\nimport {\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n  getMiniArea,\n  getMiniOccupation,\n  getMiniStatesClearData,\n  getMiniDistrictClearData,\n  getMiniCityClearData,\n  getMiniAreaClearData,\n} from \"../../../../../store/mini/miniSlice\";\n\nvar date = new Date(),\n  y = date.getFullYear(),\n  m = date.getMonth();\n\nconst filter = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniStates();\n    props.getMiniDistrict();\n    props.getMiniCity();\n    props.getMiniArea();\n    props.getMiniOccupation();\n  }, []);\n  const housetypeList = [\n    { id: 1, name: \"Own\" },\n    { id: 2, name: \"Rent\" },\n  ];\n\n  const qualificationList = [\n    { id: 1, name: \"Illiterate\" },\n    { id: 2, name: \"10th/Ssc\" },\n    { id: 3, name: \"Intermediate\" },\n    { id: 4, name: \"Graduate\" },\n    { id: 5, name: \"Post Graduate\" },\n  ];\n\n  const onFinish = () => {\n    props.SetPersonParams({\n      ...props.personParams,\n      start_date: props.personParams.start_date,\n      end_date: props.personParams.end_date,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n\n    props.getPerson({\n      ...props.personParams,\n      start_date:\n        props.personParams.start_date != null &&\n        props.personParams.start_date != \"\"\n          ? moment(props.personParams.start_date).format(\"YYYY-MM-DD\")\n          : \"\",\n      end_date:\n        props.personParams.end_date != null && props.personParams.end_date != \"\"\n          ? moment(props.personParams.end_date )\n              .add(1, \"days\")\n              .format(\"YYYY-MM-DD\")\n          : \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.isDrawerVisible(false);\n  };\n\n\n  function clearFilter() {\n    props.SetPersonParams({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getPerson({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getMiniStates();\n    props.getMiniDistrict();\n    props.getMiniCity();\n    props.getMiniArea();\n    props.getMiniOccupation();\n  }\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.personParams?.start_date,\n      end_date: props.personParams?.end_date,\n      occupation: props.personParams?.occupation,\n      state: props.personParams?.state,\n      district: props.personParams?.district,\n      city: props.personParams?.city,\n      area: props.personParams?.area,\n      housetype: props.personParams?.housetype,\n      qualification: props.personParams?.qualification,\n    });\n  }, [props.personParams]);\n\n  function onSearch(val) {\n    props.getPerson({ page: 1, search: val, page_size: 10 });\n  }\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Drawer\n          title=\"Filters\"\n          width={420}\n          className=\"hp-drawer-mobile\"\n          onClose={() => {\n            props.isDrawerVisible(false);\n          }}\n          placement=\"right\"\n          visible={props.drawer}\n          bodyStyle={{\n            paddingBottom: 10,\n          }}\n        >\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              <Col span={12}>\n                <Form.Item label=\"From Date\" name=\"start_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: new Date(),\n                    })}\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"start_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                      if (date == null) {\n                        props.FilterInputChangeValue({\n                          key: \"end_date\",\n                          value: \"\",\n                        });\n                      }\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"To Date\" name=\"end_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment().format(\"YYYY-MM-DD\"),\n                      startDate: moment(props.personParams?.start_date).format(\n                        \"YYYY-MM-DD\"\n                      ),\n                    })}\n                    disabled={\n                      props.personParams.start_date == null ||\n                      props.personParams.start_date == \"\"\n                        ? true\n                        : false\n                    }\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"end_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"State :\" name=\"state\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select State\"\n                    optionFilterProp=\"state\"\n                    onChange={(value) => {\n                      props.getMiniDistrict({ state: value });\n                      props.getMiniDistrictClearData();\n                      props.getMiniCityClearData();\n                      props.getMiniAreaClearData();\n                      props.FilterInputChangeValue({\n                        key: \"state\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.personParams.state_id == null\n                        ? \"\"\n                        : props.personParams?.state_id\n                    }\n                  >\n                    {props.miniStatesList.map((state, index) => {\n                      return (\n                        <Option key={index} value={state.id}>\n                          {state.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"District :\" name=\"district\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select District\"\n                    optionFilterProp=\"district\"\n                    onChange={(value) => {\n                      props.getMiniCity({ district: value });\n                      props.getMiniCityClearData();\n                      props.getMiniAreaClearData();\n                      props.FilterInputChangeValue({\n                        key: \"district\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.personParams.district_id == null\n                        ? \"\"\n                        : props.personParams?.district_id\n                    }\n                  >\n                    {props.miniDistrictList.map((district, index) => {\n                      return (\n                        <Option key={index} value={district.id}>\n                          {district.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"City :\" name=\"city\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select City\"\n                    optionFilterProp=\"city\"\n                    onChange={(value) => {\n                      props.getMiniArea({ city: value });\n                      props.getMiniAreaClearData();\n                      props.FilterInputChangeValue({\n                        key: \"city\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.personParams.city_id == null\n                        ? \"\"\n                        : props.personParams?.city_id\n                    }\n                  >\n                    {props.miniCityList.map((city, index) => {\n                      return (\n                        <Option key={index} value={city.id}>\n                          {city.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Area :\" name=\"area\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Area\"\n                    optionFilterProp=\"area\"\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"area\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.personParams.area_id == null\n                        ? \"\"\n                        : props.personParams?.area_id\n                    }\n                  >\n                    {props.miniAreaList.map((area, index) => {\n                      return (\n                        <Option key={index} value={area.id}>\n                          {area.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"House Type\" name=\"housetype\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select House Type\"\n                    optionFilterProp=\"Housetype\"\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"housetype\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.personParams.housetype == null\n                        ? \"\"\n                        : props.personParams?.housetype\n                    }\n                  >\n                    {housetypeList.map((housetype, index) => {\n                      return (\n                        <Option key={index} value={housetype.id}>\n                          {housetype.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Qualification\" name=\"qualification\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Qualification\"\n                    optionFilterProp=\"Qualification\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"qualification\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.personParams.qualification == null\n                        ? \"\"\n                        : props.personParams?.qualification\n                    }\n                  >\n                    {qualificationList.map((qualification, index) => {\n                      return (\n                        <Option key={index} value={qualification.id}>\n                          {qualification.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Occupation :\" name=\"occupation\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Occupation\"\n                    optionFilterProp=\"occupation\"\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"occupation\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.personParams.occupation_id == null\n                        ? \"\"\n                        : props.personParams?.occupation_id\n                    }\n                  >\n                    {props.miniOccupationList.map((occupation, index) => {\n                      return (\n                        <Option key={index} value={occupation.id}>\n                          {occupation.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    clearFilter();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n              </Col>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Apply\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Drawer>\n      </Col>\n    </Row>\n  );\n};\n\nfunction mapStateToProps({ person, mini, vehicles }) {\n  return {\n    drawer: person.drawer,\n    personParams: person.personParams,\n    miniOccupationList: mini.miniOccupationList,\n    miniStatesList: mini.miniStatesList,\n    miniDistrictList: mini.miniDistrictList,\n    miniCityList: mini.miniCityList,\n    miniAreaList: mini.miniAreaList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  isDrawerVisible,\n  SetPersonParams,\n  FilterInputChangeValue,\n  getPerson,\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n  getMiniArea,\n  getMiniOccupation,\n\n  getMiniStatesClearData,\n  getMiniDistrictClearData,\n  getMiniCityClearData,\n  getMiniAreaClearData,\n})(filter);\n","import { Fragment, useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport {\n  Button,\n  Modal,\n  Row,\n  Col,\n  List,\n  Popconfirm,\n  Form,\n  Input,\n  Image,\n} from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport moment from \"moment\";\n// import noImage from \"../../../../assets/images/noimg.png\";\nimport { customerViewModel } from \"../../../../store/Masters/Person/personSlice\";\n\nconst customerView = (props) => {\n  const { saletype } = props;\n  const [form] = Form.useForm();\n\n  const handleResetInputValues = () => {\n    form.resetFields();\n    props.customerViewModel(false);\n  };\n\n  const customerDetailList = [\n    {\n      title: \"CODE\",\n      description:\n        props.customerViewData?.code == null\n          ? \"none\"\n          : props.customerViewData.code,\n    },\n    {\n      title: \"FIRST NAME\",\n      description:\n        props.customerViewData?.firstname == null ||\n        props.customerViewData?.firstname == \"\"\n          ? \"none\"\n          : props.customerViewData?.firstname,\n    },\n    {\n      title: \"MIDDLE NAME\",\n      description:\n        props.customerViewData?.middlename == null ||\n        props.customerViewData?.middlename == \"\"\n          ? \"none\"\n          : props.customerViewData?.middlename,\n    },\n    {\n      title: \"LAST NAME\",\n      description:\n        props.customerViewData?.lastname == null ||\n        props.customerViewData?.lastname == \"\"\n          ? \"none\"\n          : props.customerViewData?.lastname,\n    },\n    {\n      title: \"MOBILE NUMBER\",\n      description:\n        props.customerViewData?.mobile == null ||\n        props.customerViewData?.mobile == \"\"\n          ? \"none\"\n          : props.customerViewData?.mobile,\n    },\n    {\n      title: \"AADHAR NUMBER\",\n      description:\n        props.customerViewData?.aadharno == null ||\n        props.customerViewData?.aadharno == \"\"\n          ? \"none\"\n          : props.customerViewData?.aadharno,\n    },\n    {\n      title: \"GENDER\",\n      description:\n        props.customerViewData?.gender_name == null ||\n        props.customerViewData?.gender_name == \"\"\n          ? \"none\"\n          : props.customerViewData?.gender_name,\n    },\n    {\n      title: \"DATE OF BIRTH\",\n      description:\n        props.customerViewData?.dob == null || props.customerViewData?.dob == \"\"\n          ? \"none\"\n          : moment(props.customerViewData?.dob).format(\"DD-MM-YYYY\"),\n    },\n    {\n      title: \"MARITAL STATUS\",\n      description: props.customerViewData.maritalstatus ? \"YES\" : \"NO\",\n    },\n    {\n      title: props.customerViewData.maritalstatus ? \"DATE OF MARRIAGE\" : null,\n      description: props.customerViewData.maritalstatus\n        ? props.customerViewData.dom == null ||\n          props.customerViewData?.dom == \"\"\n          ? \"none\"\n          : moment(props.customerViewData?.dom).format(\"DD-MM-YYYY\")\n        : null,\n    },\n    {\n      title: \"QUALIFICATION\",\n      description:\n        props.customerViewData.qualification_name == null ||\n        props.customerViewData?.qualification_name == \"\"\n          ? \"none\"\n          : props.customerViewData?.qualification_name,\n    },\n    {\n      title: \"OCCUPATION\",\n      description:\n        props.customerViewData.occupation == null\n          ? \"none\"\n          : props.customerViewData?.occupation?.name,\n    },\n    {\n      title: \"HOUSE TYPE\",\n      description:\n        props.customerViewData.housetype_name == null ||\n        props.customerViewData?.housetype_name == \"\"\n          ? \"none\"\n          : props.customerViewData?.housetype_name,\n    },\n    {\n      title: \"INCOME\",\n      description:\n        props.customerViewData.income == null ||\n        props.customerViewData?.income == \"\"\n          ? \"none\"\n          : props.customerViewData?.income,\n    },\n    {\n      title: \"BANK\",\n      description:\n        props.customerViewData.bank == null\n          ? \"none\"\n          : props.customerViewData?.bank?.name,\n    },\n    {\n      title: \"ACCOUNT NUMBER\",\n      description:\n        props.customerViewData.accono == null ||\n        props.customerViewData.accono == \"\"\n          ? \"none\"\n          : props.customerViewData?.accono,\n    },\n    {\n      title: \"IFSC CODE\",\n      description:\n        props.customerViewData.ifsccode == null ||\n        props.customerViewData.ifsccode == \"\"\n          ? \"none\"\n          : props.customerViewData?.ifsccode,\n    },\n    {\n      title: \"STATE\",\n      description:\n        props.customerViewData.state == null\n          ? \"none\"\n          : props.customerViewData?.state?.name,\n    },\n    {\n      title: \"DISTRICT\",\n      description:\n        props.customerViewData.district == null\n          ? \"none\"\n          : props.customerViewData?.district?.name,\n    },\n    {\n      title: \"CITY\",\n      description:\n        props.customerViewData.city == null\n          ? \"none\"\n          : props.customerViewData?.city?.name,\n    },\n    {\n      title: \"AREA\",\n      description:\n        props.customerViewData.area == null\n          ? \"none\"\n          : props.customerViewData?.area?.name,\n    },\n    {\n      title: \"PINCODE\",\n      description:\n        props.customerViewData.pincode == null ||\n        props.customerViewData.pincode == \"\"\n          ? \"none\"\n          : props.customerViewData?.pincode,\n    },\n    {\n      title: \"ADDRESS LINE 1\",\n      description:\n        props.customerViewData.addressline1 == null ||\n        props.customerViewData.addressline1 == \"\"\n          ? \"none\"\n          : props.customerViewData?.addressline1,\n    },\n    {\n      title: \"ADDRESS LINE 2\",\n      description:\n        props.customerViewData.addressline2 == null ||\n        props.customerViewData.addressline2 == \"\"\n          ? \"none\"\n          : props.customerViewData?.addressline2,\n    },\n  ];\n\n  var customerList = [];\n  customerDetailList.forEach((item) => {\n    if (item.title !== null) {\n      customerList.push(item);\n    }\n  });\n\n  const FooterAddOrUpdate = () => {\n    return <Fragment></Fragment>;\n  };\n\n  const FooterCancel = () => {\n    return <Fragment></Fragment>;\n  };\n\n  const modalTitle = <h5 className=\"modal-title\">Customer View</h5>;\n\n  return (\n    <Modal\n      visible={props.viewModel}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        props.customerViewModel(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={<></>}\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={816}\n    >\n      <Row gutter={[12, 12]}>\n        <Col span={24} md={24}>\n          <List\n            grid={{\n              gutter: 16,\n              xs: 1,\n              sm: 2,\n              md: 3,\n              lg: 3,\n              xl: 4,\n              xxl: 3,\n            }}\n            dataSource={customerList}\n            renderItem={(item) => (\n              <List.Item>\n                <List.Item.Meta\n                  title={<span>{item.title}</span>}\n                  description={<span>{item.description}</span>}\n                />\n              </List.Item>\n            )}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ person }) {\n  return {\n    viewModel: person.viewModel,\n    customerViewData: person.customerViewData,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  customerViewModel,\n})(customerView);\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Input,\n  Card,\n  Pagination,\n  Spin,\n  Button,\n  Popconfirm,\n} from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { FilterOutlined, UploadOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport PageTitle from \"../../../../layout/components/content/page-title\";\nimport AddPerson from \"./addPerson\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport moment from \"moment\";\nimport { isMobile } from \"react-device-detect\";\nimport {\n  getPerson,\n  SetPersonParams,\n  getcustomerByID,\n  personDelete,\n  isModelVisible,\n  isDrawerVisible,\n  customerViewModel,\n  clearPersonList\n} from \"../../../../store/Masters/Person/personSlice\";\nimport {\n  getMiniDistrict,\n  getMiniCity,\n  getMiniArea,\n} from \"../../../../store/mini/miniSlice\";\nimport { getReportList } from \"../../../../store/reports/reportsSlice\";\nimport Filter from \"./Filters/Filter\";\nimport CustomerView from \"./customerView\";\n\nfunction Person(props) {\n  const { Search } = Input;\n  useEffect(() => {\n    props.getPerson({ \n       page: 1,\n      search: \"\",\n      page_size: 10, });\n  }, []);\n\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: 70,\n      fixed: isMobile ? null : \"left\",\n      // sorter: (a, b) => a.index - b.index,\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      key: \"code\",\n      // sorter: true,\n      // sortDirections: [\"ascend\", \"descend\"],\n      filterSearch: true,\n      width: 120,\n      fixed: isMobile ? null : \"left\",\n    },\n    {\n      title: \"Date\",\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"15%\",\n      render: (row) => <span className={columnClass}>{moment(row.createdon).format('DD-MM-YYYY')}</span>,\n    },\n    {\n      title: \"Customer Name\",\n      render: (row) => (\n        <span className={columnClass}>\n          {row.firstname} {row.middlename} {row.lastname}\n        </span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      key: \"firstname\",\n      // sorter: true,\n      sortDirections: [\"ascend\", \"descend\"],\n      width: \"20%\",\n    },\n    {\n      title: \"Mobile\",\n      render: (row) => <span className={columnClass}>{row.mobile}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 120,\n    },\n    {\n      title: \"Aadhar No\",\n      render: (row) => <span className={columnClass}>{row.aadharno}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 130,\n    },\n    {\n      title: \"Gender\",\n      render: (row) => <span className={columnClass}>{row.gender_name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 90,\n    },\n    {\n      title: \"House Type\",\n      render: (row) => <span className={columnClass}>{row.housetype_name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 90,\n    },\n    {\n      title: \"Qualification\",\n      render: (row) => <span className={columnClass}>{row.qualification_name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 120,\n    },\n    {\n      title: \"Area\",\n      render: (row) => <span className={columnClass}>{row.area?.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 100,\n    },\n    {\n      title: \"Occupation\",\n      render: (row) => <span className={columnClass}>{row.occupation?.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 120,\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: 100,\n      fixed: isMobile ? null : \"right\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {props.userAccessList?.indexOf(\"Masters.change_person\") !== -1 && (\n            <i\n              className=\"ri-edit-box-line hp-mr-2 \"\n              style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n              onClick={() => {\n                props.getcustomerByID({row, type: \"update\"});\n              }}\n            ></i>\n          )}\n          {props.userAccessList?.indexOf(\"Masters.delete_person\") !== -1 && (\n            <Popconfirm\n              placement=\"topRight\"\n              title=\"Are you sure to delete this Record?\"\n              onConfirm={() => props.personDelete(record.id)}\n              okText=\"Yes\"\n              cancelText=\"No\"\n              className=\"hp-ml-8\"\n              icon={\n                <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n              }\n            >\n              <i\n                className=\"ri-delete-bin-2-line \"\n                style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n              ></i>\n            </Popconfirm>\n          )}\n          <i\n            className=\"ri-eye-line hp-mr-2 \"\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n            onClick={() => {\n              props.getcustomerByID({row, type: \"view\" });\n              // props.customerViewModel(true);\n            }}\n          ></i>\n        </Space>\n      ),\n    },\n  ];\n\n  const data = props.personlist.map((row, key) => ({\n    ...row,\n    index:\n      (props.personParams.page - 1) * props.personParams.page_size + (key + 1),\n\n    mobile: row.mobile,\n    aadharno: row.aadharno,\n    gendername: row.gender_name,\n    qualificationname: row.qualification_name,\n    occupationname: row.occupation?.name,\n  }));\n\n  function onPageChange(page, pageSize) {\n    props.clearPersonList();\n    props.SetPersonParams({\n      ...props.personParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getPerson({\n      ...props.personParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n\n  function exportData() {\n    // var { file_format, ...params } = props.reportParamsData;\n    var objData = {\n      file_format: 0,\n      model_name: \"Person\",\n    };\n\n    props.getReportList({\n      objData,\n      ParamsData: {\n        ...props.personParams,\n        start_date:\n          props.personParams.start_date != null &&\n          props.personParams.start_date != \"\"\n            ? moment(props.personParams.start_date).format(\"YYYY-MM-DD\")\n            : \"\",\n        end_date:\n          props.personParams.end_date != null &&\n          props.personParams.end_date != \"\"\n            ? moment(props.personParams.end_date)\n                .add(1, \"days\")\n                .format(\"YYYY-MM-DD\")\n            : \"\",\n      },\n    });\n  }\n  function onSearch(val) {\n    props.getPerson({ ...props.personParams, page: 1, search: val });\n    props.SetPersonParams({ ...props.personParams, page: 1, search: val });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n\n\n  const handleChange = (pagination, filters, sorter, extra) => {\n    if (extra.action == \"sort\") {\n      var currentSort = \"\";\n      var sortOrder = \"\";\n      if (sorter.columnKey && sorter.order) {\n        if (sorter.order == \"descend\") {\n          sortOrder = \"-\";\n        }\n        currentSort = sorter.columnKey;\n      }\n\n      props.getPerson({\n        ...props.personParams,\n        page: 1,\n        currentSort: currentSort,\n        sortOrder: sortOrder,\n      });\n      // props.SetPersonParams({ ...props.personParams, page: 1, currentSort: currentSort, sortOrder: sortOrder });\n    }\n  };\n  \n  return (\n    <Row gutter={[12, 12]} >\n      <PageTitle\n        pageTitle=\"Customers\"\n        // addModelTile={\n        //   props.userAccessList?.indexOf(\"Masters.add_person\") !== -1 &&\n        //   \"Add Customer\"\n        // }\n        // goBack={false}\n        // setIsModalVisible={props.isModelVisible}\n        // isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Row gutter={[12, 12]} className=\"hp-ecommerce-app-header \">\n          <Col span={24} xs={24} sm={24} md={14} className=\"hp-ecommerce-app-header-search\">\n            <Search\n              className=\"hp-mb-12\"\n              placeholder=\"Search...\"\n              allowClear\n              onChange={(e) => {\n                if (e.target.value == \"\") {\n                  props.getPerson({\n                    ...props.personParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                  props.SetPersonParams({\n                    ...props.personParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                }\n              }}\n              onSearch={(value) => {\n                onSearch(value);\n              }}\n            />\n          </Col>\n\n          <Col span={24} xs={8} sm={8} md={3}>\n            <Button\n              onClick={() => {\n                props.isDrawerVisible(true);\n              }}\n              className=\"hp-w-100 hp-p-12\"\n              icon={<FilterOutlined className=\"hp-mr-10\" />}\n            >\n              {!isMobile && \"Filter\"}\n            </Button>\n          </Col>\n\n          {props.userAccessList?.indexOf(\"Masters.add_person\") !== -1 && (\n            <Col span={24} xs={8} sm={8} md={4}>\n              <Button\n                onClick={() => {\n                  props.isModelVisible(true);\n                }}\n                className=\"hp-w-100 hp-p-12\"\n                icon={<PlusOutlined className=\"hp-mr-10\" />}\n              >\n                {!isMobile && \"Add Customer\"}\n              </Button>\n            </Col>\n          )}\n\n          {props.userAccessList?.indexOf(\"Masters.export_person\") !== -1 && (\n            <Col span={24} xs={8} sm={8} md={3}>\n              <Popconfirm\n                placement=\"topRight\"\n                title=\"Are you sure to export this Record?\"\n                onConfirm={() => exportData()}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                icon={\n                  <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n                }\n              >\n                <Button\n                  className=\"hp-w-100 hp-p-12\"\n                  icon={<UploadOutlined className=\"hp-mr-10\" />}\n                >\n                  {!isMobile && \"Export\"}\n                </Button>\n              </Popconfirm>\n            </Col>\n          )}\n        </Row>\n      </Col>\n\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\">\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 1300 }}\n                  pagination={false}\n                  size=\"middle\"\n                  onChange={handleChange}\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.personParams?.page}\n                pageSize={props.personParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n\n      {props.model && <AddPerson />}\n      <Filter />\n      {props.viewModel && <CustomerView />}\n    </Row>\n  );\n}\n\nfunction mapPersonToProps({ person, system }) {\n  return {\n    personlist: person.personlist,\n    noofpages: person.noofpages,\n    listCount: person.listCount,\n    personParams: person.personParams,\n    loading: person.loading,\n    userAccessList: system.userAccessList,\n    viewModel: person.viewModel,\n    model: person.model,\n  };\n}\n\nexport default connect(mapPersonToProps, {\n  getPerson,\n  SetPersonParams,\n  getcustomerByID,\n  personDelete,\n  isModelVisible,\n  getMiniDistrict,\n  getMiniCity,\n  getMiniArea,\n  isDrawerVisible,\n  customerViewModel,\n  getReportList,\n  clearPersonList\n})(Person);\n"],"sourceRoot":""}