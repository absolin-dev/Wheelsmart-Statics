{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/pages/MastersDashboard/state/addState.jsx","view/pages/MastersDashboard/state/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","states","mini","selectedData","rowdata","model","miniCountryList","stateAdd","isModelVisible","InputChangeValue","getMinicountry","Form","useForm","form","useEffect","console","log","Option","Select","handleResetInputValues","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","setFieldsValue","name","country_id","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","handleAdd","stateToUpdate","country","handleUpdate","Item","label","rules","required","message","hasFeedback","showSearch","placeholder","optionFilterProp","onChange","value","key","map","index","style","e","target","system","stateslist","noofpages","listCount","stateParams","loading","userAccessList","getStates","stateEdit","stateDelete","SetStateParams","page","search","page_size","columns","dataIndex","filterSearch","filterMode","render","row","record","indexOf","cursor","color","placement","onConfirm","okText","cancelText","data","countryname","Search","Input","gutter","isModalVisible","xs","sm","md","allowClear","onSearch","val","tip","spinning","delay","dataSource","scroll","x","pagination","current","pageSize","total","showTotal","showSizeChanger"],"mappings":"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","file":"static/js/123.bb06a4d6.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  stateAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/State/stateSlice\";\nimport { getMinicountry } from \"../../../../store/mini/miniSlice\";\n\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddState = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  useEffect(() => {\n    props.getMinicountry()\n  }, []);\n\n\n  console.log('miniCountryList', props.miniCountryList);\n  const { Option } = Select;\n  const onChange = (value) => {\n    props.InputChangeValue({\n      key: \"country_id\",\n      value: value,\n    })\n  };\n  // Adds New State\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      country_id: props.selectedData?.country_id,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.stateAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const stateToUpdate = {\n      id: props.selectedData.id,\n      country_id: props.selectedData?.country_id == null ? props.selectedData.country.id : props.selectedData?.country_id,\n      name: props.selectedData?.name,\n    };\n    props.stateAdd(stateToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      State\n    </h5>\n  );\n\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      country_id: props.selectedData.country_id,\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Country Name:\"\n          name=\"country_id\"\n          rules={[\n            { required: true, message: \"Please select your Country Name!\" },\n          ]}\n          hasFeedback>\n          <Select\n            showSearch\n            placeholder=\"Select Country\"\n            optionFilterProp=\"children\"\n            // filterOption={(input, option) =>\n            //   option.children.toLowerCase().includes(input.toLowerCase())\n            // }\n            onChange={onChange}\n            value={\n              props.selectedData.country_id == null ? \"\" : props.selectedData?.country_id\n            }\n          >\n            {props.miniCountryList.map((country, index) => {\n\n              return (\n                <Option key={index} value={country.id}>\n                  {country.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"State Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your State Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"State\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"State Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ states, mini }) {\n  return {\n    selectedData: states.rowdata,\n    model: states.model,\n    miniCountryList: mini.miniCountryList\n  };\n}\n\nexport default connect(mapStateToProps, {\n  stateAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMinicountry\n})(AddState);\n","import React, { useEffect, useState } from \"react\";\n\nimport { Row, Col, Input, Card, Pagination, Popconfirm, Spin } from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\n\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport AddState from \"./addState\";\nimport { getMinicountry } from \"../../../../store/mini/miniSlice\";\n\nimport {\n  getStates,\n  stateEdit,\n  stateDelete,\n  isModelVisible,\n  SetStateParams,\n} from \"../../../../store/Masters/State/stateSlice\";\n\nfunction State(props) {\n  useEffect(() => {\n    props.getStates({ page: 1, search: \"\", page_size: 10 });\n  }, []);\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"5%\",\n      // sorter: (a, b) => a.index - b.index,\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: \"35%\",\n    },\n    {\n      title: \"State Name\",\n      dataIndex: \"name\",\n\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: \"40%\",\n    },\n    {\n      title: \"Country Name\",\n      dataIndex: \"countryname\",\n\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"40%\",\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: \"10%\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {props.userAccessList?.indexOf(\"Masters.change_state\") !== -1 && (\n            <i\n              className=\"ri-edit-box-line hp-mr-2 \"\n              style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n              onClick={() => {\n                props.stateEdit(row);\n                props.isModelVisible(true);\n              }}\n            ></i>\n          )}\n\n        {props.userAccessList?.indexOf(\"Masters.delete_state\") !== -1 && (\n          <Popconfirm\n            placement=\"topRight\"\n            title=\"Are you sure to delete this Record?\"\n            onConfirm={() => props.stateDelete(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            className=\"hp-ml-8\"\n            icon={\n              <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n            }\n          >\n            <i\n              className=\"ri-delete-bin-2-line \"\n              style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n            ></i>\n          </Popconfirm>\n        )}\n        </Space>\n      ),\n    },\n  ];\n\n  const data = props.stateslist.map((row, key) => ({\n    ...row,\n    index: (props.stateParams.page - 1) * props.stateParams.page_size + key + 1,\n    countryname: row.country.name,\n  }));\n\n  function onPageChange(page, pageSize) {\n    props.SetStateParams({\n      ...props.stateParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getStates({\n      ...props.stateParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.SetStateParams({ ...props.stateParams, search: val });\n    props.getStates({ ...props.stateParams, search: val });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  const { Search } = Input;\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"State Master\"\n        addModelTile={\n          props.userAccessList?.indexOf(\"Masters.add_state\") !== -1 &&\n          \"Add State\"\n        }\n        goBack={true}\n        setIsModalVisible={props.isModelVisible}\n        isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Card>\n          <Row>\n            <Col span={12} xs={24} sm={24} md={12} className=\"hp-mb-12\">\n              <Search\n                placeholder=\"Search...\"\n                allowClear\n                onChange={(e) => {\n                  if (e.target.value == \"\") {\n                    props.getStates({\n                      ...props.stateParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                    props.SetStateParams({\n                      ...props.stateParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                  }\n                }}\n                onSearch={(value) => {\n                  onSearch(value);\n                }}\n              />\n            </Col>\n\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 500 }}\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.stateParams?.page}\n                pageSize={props.stateParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <AddState />\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ states, system }) {\n  return {\n    stateslist: states.stateslist,\n    noofpages: states.noofpages,\n    listCount: states.listCount,\n    stateParams: states.stateParams,\n    loading: states.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getStates,\n  stateEdit,\n  stateDelete,\n  isModelVisible,\n  SetStateParams,\n  getMinicountry,\n})(State);\n"],"sourceRoot":""}