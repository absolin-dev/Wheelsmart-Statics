{"version":3,"sources":["layout/components/content/page-title/index.jsx","view/pages/settings/ManageUsers/userDetails.jsx"],"names":["PageTitle","props","history","useHistory","pageTitle","pageText","goBack","addModelTile","addModelTile2","setIsModalVisible","setIsModalVisible2","span","className","xs","md","xl","to","onClick","size","type","icon","isMobile","connect","manageUsers","system","noofpages","loginListCount","deviceListCount","activityListCount","loading","adminUserDeviceList","adminUserLoginList","UserDeviceParams","userAccessList","activeTab","adminUserActivityList","employeeUserdata","getAdminUserLogin","getAdminUserDeviceList","setUsersDeviceParams","userDeviceActiveTab","getAdminUserActivityList","clearAdminUserLogin","clearAdminUserDeviceList","clearAdminUserActivityList","getEmployeeUserbyID","columnClass","TabPane","Tabs","id","useParams","listTitle","listResult","Text","Typography","Title","Link","showTotal","total","onPageChange","page","pageSize","page_size","useEffect","search","loginColumns","title","dataIndex","width","render","row","device","name","type_name","moment","login","format","logout","loginData","map","key","index","deviceColumns","code","is_active","deviceData","activityColumns","createdon","tablename","user","fullname","username","activityData","first_name","last_name","href","email","phone","dob","toString","firm","state","district","city","area","pincode","address","level","counters","counter","strong","keyboard","clusters","cluster","defaultActiveKey","onChange","tab","tip","spinning","delay","columns","dataSource","pagination","current","showSizeChanger"],"mappings":"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","file":"static/js/141.afcb9c29.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function PageTitle(props) {\n  let history = useHistory();\n\n  const {\n    pageTitle,\n    pageText,\n    goBack,\n    addModelTile,\n    addModelTile2,\n    setIsModalVisible,\n    setIsModalVisible2,\n  } = props;\n\n  return (\n    <Col span={24} className=\"hp-mt-12\">\n      <Row>\n        <Col span={16} xs={16} md={12} xl={16}>\n          {goBack && (\n            <Link\n              to=\"#\"\n              onClick={() => {\n                history.goBack();\n              }}\n              className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n            >\n              <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n            </Link>\n          )}\n          <Row className=\"hp-d-inline-block\">\n            <Col span={24}>\n              {pageTitle && <h3 className=\"hp-mb-2 hp-mt-4\">{pageTitle}</h3>}\n            </Col>\n\n            <Col span={24}>\n              {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n            </Col>\n          </Row>\n        </Col>\n        <Col span={8} xs={8} md={12} xl={8}>\n          <div className=\"hp-float-right hp-d-inline-block\">\n            {addModelTile && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile}\n                </Button>\n              </div>\n            )}\n            {addModelTile2 && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"hp-pr-12\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible2(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile2}\n                </Button>\n              </div>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Divider,\n  Table,\n  Pagination,\n  Tabs,\n  Card,\n  Spin,\n  Typography,\n} from \"antd\";\nimport { connect } from \"react-redux\";\nimport {\n  getAdminUserLogin,\n  getAdminUserDeviceList,\n  setUsersDeviceParams,\n  userDeviceActiveTab,\n  getAdminUserActivityList,\n  clearAdminUserLogin,\n  clearAdminUserDeviceList,\n  clearAdminUserActivityList,\n  getEmployeeUserbyID,\n} from \"../../../../store/settings/ManageUsers/manageUserSlice\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport moment, { min } from \"moment\";\nimport { RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport PageTitle from \"../../../../layout/components/content/page-title\";\n\nfunction UserDetails(props) {\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-100 hp-text-color-dark-0 hp-font-weight-600 \";\n  const { TabPane } = Tabs;\n  let { id } = useParams();\n  let history = useHistory();\n  const listTitle = \"hp-p-body hp-font-weight-600 hp-mb-6\";\n  const listResult =\n    \"hp-mt-sm-4 hp-p1-body hp-text-color-black-100 hp-text-color-dark-0\";\n  const dividerClass = \"hp-border-color-black-40 hp-border-color-dark-80\";\n  const { Text, Link, Title } = Typography;\n\n  useEffect(() => {\n    props.getEmployeeUserbyID(id);\n    props.setUsersDeviceParams({\n      ...props.UserDeviceParams,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n      id: id,\n    });\n  }, []);\n\n  function callback(key) {\n    props.userDeviceActiveTab(key, id);\n    if (key == 1) {\n      props.getAdminUserLogin({\n        page: 1,\n        search: \"\",\n        page_size: 10,\n        id: props.employeeUserdata.user.id,\n      });\n    } else if (key == 2) {\n      props.getAdminUserDeviceList({\n        page: 1,\n        search: \"\",\n        page_size: 10,\n        id: props.employeeUserdata.user.id,\n      });\n    } else {\n      props.getAdminUserActivityList({\n        page: 1,\n        search: \"\",\n        page_size: 10,\n        id: props.employeeUserdata.user.id,\n      });\n    }\n    props.setUsersDeviceParams({\n      ...props.UserDeviceParams,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n  }\n\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n\n  function onPageChange(page, pageSize) {\n    props.clearAdminUserLogin();\n    props.clearAdminUserDeviceList();\n    props.clearAdminUserActivityList();\n    if (props.activeTab == 1) {\n      props.getAdminUserLogin({\n        ...props.UserDeviceParams,\n        page_size: pageSize,\n        page: page == 0 ? 1 : page,\n      });\n    } else if (props.activeTab == 2) {\n      props.getAdminUserDeviceList({\n        ...props.UserDeviceParams,\n        page_size: pageSize,\n        page: page == 0 ? 1 : page,\n      });\n    } else {\n      props.getAdminUserActivityList({\n        ...props.UserDeviceParams,\n        page_size: pageSize,\n        page: page == 0 ? 1 : page,\n      });\n    }\n    props.setUsersDeviceParams({\n      ...props.UserDeviceParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  const loginColumns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"1%\",\n    },\n    {\n      title: \"Device Name\",\n      width: \"3%\",\n      render: (row) => <span className={columnClass}>{row.device?.name}</span>,\n    },\n    {\n      title: \"Device Type\",\n      width: \"3%\",\n      render: (row) => (\n        <span className={columnClass}>{row.device?.type_name}</span>\n      ),\n    },\n    {\n      title: \"Login\",\n      width: \"5%\",\n      render: (row) => (\n        <span className={columnClass}>\n          {moment(row.login).format(\"DD-MM-YYYY, h:mm:ss a\")}\n        </span>\n      ),\n    },\n    {\n      title: \"Logout\",\n      width: \"10%\",\n      render: (row) => (\n        <span className={columnClass}>\n          {moment() < moment(row.logout) ? (\n            <Text className=\"hp-text-color-success-1\">Active</Text>\n          ) : (\n            moment(row.logout).format(\"DD-MM-YYYY, h:mm:ss a\")\n          )}\n        </span>\n      ),\n    },\n  ];\n\n  const loginData = props.adminUserLoginList.map((row, key) => ({\n    ...row,\n    // key: key + 1,\n    // index: key + 1,\n    index:\n      (props.UserDeviceParams.page - 1) * props.UserDeviceParams.page_size +\n      (key + 1),\n  }));\n\n  const deviceColumns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: 70,\n    },\n    {\n      title: \"Code\",\n      width: 150,\n      render: (row) => <span className={columnClass}>{row.code}</span>,\n    },\n    {\n      title: \"Device Name\",\n      width: 150,\n      render: (row) => <span className={columnClass}>{row.name}</span>,\n    },\n    {\n      title: \"Device Type\",\n      width: 150,\n      render: (row) => <span className={columnClass}>{row.type_name}</span>,\n    },\n    {\n      title: \"Status\",\n      width: 150,\n      render: (row) => (\n        <span className={columnClass}>\n          {row.is_active ? \"active\" : \"in-active\"}\n        </span>\n      ),\n    },\n  ];\n\n  const deviceData = props.adminUserDeviceList.map((row, key) => ({\n    ...row,\n    // key: key + 1,\n    // index: key + 1,\n    index:\n      (props.UserDeviceParams.page - 1) * props.UserDeviceParams.page_size +\n      (key + 1),\n  }));\n\n  const activityColumns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: 70,\n    },\n    {\n      title: \"Date\",\n      width: 150,\n      render: (row) => (\n        <span className={columnClass}>\n          {moment(row.createdon).format(\"DD-MM-YYYY, h:mm:ss a\")}\n        </span>\n      ),\n    },\n    {\n      title: \"Table Name\",\n      width: 150,\n      render: (row) => <span className={columnClass}>{row.tablename}</span>,\n    },\n    {\n      title: \"Type Name\",\n      width: 150,\n      render: (row) => <span className={columnClass}>{row.type_name}</span>,\n    },\n    {\n      title: \"User Name\",\n      width: 150,\n      render: (row) => (\n        <span className={columnClass}>{row.user?.fullname}</span>\n      ),\n    },\n    {\n      title: \"Employee Code\",\n      width: 150,\n      render: (row) => (\n        <span className={columnClass}>{row.user?.username}</span>\n      ),\n    },\n  ];\n\n  const activityData = props.adminUserActivityList.map((row, key) => ({\n    ...row,\n    // key: key + 1,\n    // index: key + 1,\n    index:\n      (props.UserDeviceParams.page - 1) * props.UserDeviceParams.page_size +\n      (key + 1),\n  }));\n\n  return (\n    <Row>\n      <PageTitle pageTitle=\"User Details\" goBack={true} />\n\n      <Col\n        span={24}\n        className=\"hp-mb-16 hp-profile-content-list hp-ml-12 hp-mt-8 hp-pb-sm-0 hp-pb-20\"\n      >\n        <ul>\n          <li>\n            <span className={listTitle}>User Name</span>\n            <span className={listResult}>\n              {props.employeeUserdata.user?.username == \"\" ||\n              props.employeeUserdata.user?.username == null\n                ? \"-------\"\n                : props.employeeUserdata.user?.username}\n            </span>\n          </li>\n\n          <li>\n            <span className={listTitle}>Full Name</span>\n            <span className={listResult}>\n              {props.employeeUserdata.user?.username == \"\" ||\n              props.employeeUserdata.user?.username == null\n                ? \"-------\"\n                : props.employeeUserdata.user?.first_name}{\" \"}\n              {props.employeeUserdata.user?.last_name}\n            </span>\n          </li>\n\n          <li className=\"hp-mt-18\">\n            <span className={listTitle}>Email</span>\n            <a className={listResult} href=\"mailto:******@gmail.com\">\n              {props.employeeUserdata.user?.email == \"\" ||\n              props.employeeUserdata.user?.email == null\n                ? \"-------\"\n                : props.employeeUserdata.user?.email}\n            </a>\n          </li>\n\n          <li className=\"hp-mt-18\">\n            <span className={listTitle}>Mobile Number</span>\n            <a className={listResult} href=\"tel:+9999999999\">\n              {props.employeeUserdata.user?.phone == \"\" ||\n              props.employeeUserdata.user?.phone == null\n                ? \"-------\"\n                : props.employeeUserdata.user?.phone}\n            </a>\n          </li>\n          <li className=\"hp-mt-18\">\n            <span className={listTitle}>Date Of Birth</span>\n            {props.employeeUserdata.dob == \"\" ||\n            props.employeeUserdata.dob == null\n              ? \"-------\"\n              : moment(props.employeeUserdata.dob)\n                  .format(\"DD-MM-YYYY\")\n                  .toString()}\n          </li>\n\n          {/* <li className=\"hp-mt-18\">\n            <span className={listTitle}>Department </span>\n            <span className={listResult}>\n              {props.employeeUserdata.departments?.name == \"\" || props.employeeUserdata.departments?.name == null\n                ? \"-------\"\n                : props.employeeUserdata.departments?.name}\n            </span>\n          </li> */}\n\n          <li className=\"hp-mt-18\">\n            <span className={listTitle}>Firm </span>\n            <span className={listResult}>\n              {props.employeeUserdata.firm?.name == \"\" ||\n              props.employeeUserdata.firm?.name == null\n                ? \"-------\"\n                : props.employeeUserdata.firm?.name}\n            </span>\n          </li>\n\n          {/* <li className=\"hp-mt-18\">\n            <span className={listTitle}>Profile </span>\n            <span className={listResult}>\n              {props.employeeUserdata.user?.groups?.name == \"\" || props.employeeUserdata.user?.groups?.name == null\n                ? \"-------\"\n                : props.employeeUserdata.user?.groups?.name}\n            </span>\n          </li> */}\n\n          <li className=\"hp-mt-18\">\n            <span className={listTitle}>State </span>\n            <span className={listResult}>\n              {props.employeeUserdata.user?.state?.name == \"\" ||\n              props.employeeUserdata.user?.state?.name == null\n                ? \"-------\"\n                : props.employeeUserdata.user?.state?.name}\n            </span>\n          </li>\n          <li className=\"hp-mt-18\">\n            <span className={listTitle}>District</span>\n            <span className={listResult}>\n              {props.employeeUserdata.user?.district?.name == \"\" ||\n              props.employeeUserdata.user?.district?.name == null\n                ? \"-------\"\n                : props.employeeUserdata.user?.district?.name}\n            </span>\n          </li>\n          <li className=\"hp-mt-18\">\n            <span className={listTitle}>City</span>\n            <span className={listResult}>\n              {props.employeeUserdata.user?.city?.name == \"\" ||\n              props.employeeUserdata.user?.city?.name == null\n                ? \"-------\"\n                : props.employeeUserdata.user?.city?.name}\n            </span>\n          </li>\n          <li className=\"hp-mt-18\">\n            <span className={listTitle}>Area</span>\n            <span className={listResult}>\n              {props.employeeUserdata.user?.area?.name == \"\" ||\n              props.employeeUserdata.user?.area?.name == null\n                ? \"-------\"\n                : props.employeeUserdata.user?.area?.name}\n            </span>\n          </li>\n          <li className=\"hp-mt-18\">\n            <span className={listTitle}>Pincode</span>\n            <span className={listResult}>\n              {props.employeeUserdata.user?.pincode == \"\" ||\n              props.employeeUserdata.user?.pincode == null\n                ? \"-------\"\n                : props.employeeUserdata.user?.pincode}\n            </span>\n          </li>\n\n          <li className=\"hp-mt-18\">\n            <span className={listTitle}>Address</span>\n            <span className={listResult}>\n              {props.employeeUserdata.user?.address == \"\" ||\n              props.employeeUserdata.user?.address == null\n                ? \"-------\"\n                : props.employeeUserdata.user?.address}\n            </span>\n          </li>\n        </ul>\n      </Col>\n      <Col span={24} className=\"hp-mt-10\">\n        <Title level={5}>Counters</Title>\n        {props.employeeUserdata.user?.counters?.map((counter) => {\n          return (\n            <>\n              <Text strong keyboard>\n                {counter.name}\n              </Text>\n              {\",  \"}\n            </>\n          );\n        })}\n      </Col>\n      <Col span={24} className=\"hp-mt-10\">\n        <Title level={5}>Clusters</Title>\n        {props.employeeUserdata.user?.clusters?.map((cluster) => {\n          return (\n            <>\n              <Text strong keyboard>\n                {cluster.name}\n              </Text>\n              {\",  \"}\n            </>\n          );\n        })}\n      </Col>\n\n      <Col span={24} className=\"hp-mt-16\">\n        <Tabs defaultActiveKey=\"1\" type=\"card\" onChange={callback}>\n          <TabPane tab=\"Logins\" key=\"1\">\n            <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n              <Col span={24}>\n                <Row className=\"hp-mb-12\">\n                  <Col span={24}>\n                    <Table\n                      className=\"hp-p-0 hp-mt-10 hp-border-1 hp-border-color-dark-80 \"\n                      columns={loginColumns}\n                      dataSource={loginData}\n                      loading={props.loading}\n                      pagination={false}\n                      size=\"small\"\n                    />\n                  </Col>\n\n                  <Col span={24}>\n                    <Pagination\n                      size=\"small\"\n                      total={props.loginListCount}\n                      showTotal={showTotal}\n                      current={props.UserDeviceParams?.page}\n                      pageSize={props.UserDeviceParams?.page_size}\n                      showSizeChanger\n                      onChange={onPageChange}\n                      className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            </Spin>\n          </TabPane>\n\n          <TabPane tab=\"Devices\" key=\"2\">\n            <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n              <Col span={24}>\n                <Row className=\"hp-mb-12\">\n                  <Col span={24}>\n                    <Table\n                      className=\"hp-mt-10 hp-border-1 hp-border-color-dark-80  hp-border-radius\"\n                      columns={deviceColumns}\n                      dataSource={deviceData}\n                      loading={props.loading}\n                      pagination={false}\n                      size=\"small\"\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <Pagination\n                      size=\"small\"\n                      total={props.deviceListCount}\n                      showTotal={showTotal}\n                      current={props.UserDeviceParams?.page}\n                      pageSize={props.UserDeviceParams?.page_size}\n                      showSizeChanger\n                      onChange={onPageChange}\n                      className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            </Spin>\n          </TabPane>\n\n          <TabPane tab=\"Activity\" key=\"3\">\n            <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n              <Col span={24}>\n                <Row className=\"hp-mb-12\">\n                  <Col span={24}>\n                    <Table\n                      className=\"hp-mt-10 hp-border-1 hp-border-color-dark-80  hp-border-radius\"\n                      columns={activityColumns}\n                      dataSource={activityData}\n                      loading={props.loading}\n                      pagination={false}\n                      size=\"small\"\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <Pagination\n                      size=\"small\"\n                      total={props.activityListCount}\n                      showTotal={showTotal}\n                      current={props.UserDeviceParams?.page}\n                      pageSize={props.UserDeviceParams?.page_size}\n                      showSizeChanger\n                      onChange={onPageChange}\n                      className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            </Spin>\n          </TabPane>\n        </Tabs>\n      </Col>\n    </Row>\n  );\n}\nfunction mapStateToProps({ manageUsers, system }) {\n  return {\n    noofpages: manageUsers.noofpages,\n    loginListCount: manageUsers.loginListCount,\n    deviceListCount: manageUsers.deviceListCount,\n    activityListCount: manageUsers.activityListCount,\n    loading: manageUsers.loading,\n    adminUserDeviceList: manageUsers.adminUserDeviceList,\n    adminUserLoginList: manageUsers.adminUserLoginList,\n    UserDeviceParams: manageUsers.UserDeviceParams,\n    userAccessList: system.userAccessList,\n    activeTab: manageUsers.activeTab,\n    adminUserActivityList: manageUsers.adminUserActivityList,\n    employeeUserdata: manageUsers.employeeUserdata,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getAdminUserLogin,\n  getAdminUserDeviceList,\n  setUsersDeviceParams,\n  userDeviceActiveTab,\n  getAdminUserActivityList,\n  clearAdminUserLogin,\n  clearAdminUserDeviceList,\n  clearAdminUserActivityList,\n  getEmployeeUserbyID,\n})(UserDetails);\n"],"sourceRoot":""}