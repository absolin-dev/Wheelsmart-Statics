{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/pages/MastersDashboard/colors/addColors.jsx","view/pages/MastersDashboard/colors/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","colors","selectedData","rowdata","model","colorsAdd","isModelVisible","InputChangeValue","Form","useForm","form","handleResetInputValues","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","useEffect","setFieldsValue","name","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","handleAdd","countryToUpdate","handleUpdate","Item","label","rules","required","message","pattern","RegExp","hasFeedback","maxLength","style","placeholder","value","onChange","e","key","target","system","colorslist","noofpages","listCount","colorsParams","loading","userAccessList","getColors","colorsEdit","colorsDelete","SetColorsParams","page","search","page_size","columns","dataIndex","filterSearch","filterMode","render","row","record","indexOf","cursor","color","placement","onConfirm","okText","cancelText","data","map","index","Search","Input","gutter","isModalVisible","xs","sm","md","allowClear","onSearch","val","tip","spinning","delay","dataSource","scroll","x","pagination","current","pageSize","total","showTotal","showSizeChanger","on"],"mappings":"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","file":"static/js/108.65f50300.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  colorsAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Colors/colorsSlice\";\n\nconst AddColors = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.colorsAdd(obj);\n    }\n  };\n\n\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.colorsAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Color\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData])\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Color Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Color Name!\" },\n            {\n              pattern: new RegExp(\n                /^[a-zA-Z][a-zA-Z\\s]+$/i\n              ),\n              message: \"field does not accept numbers\",\n            }\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            maxLength={50}\n            style={{ width: \"100%\" }}\n            placeholder=\"Color Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ colors }) {\n  return {\n    selectedData: colors.rowdata,\n    model: colors.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  colorsAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddColors);\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Input, Card, Pagination, Spin, Popconfirm } from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\n\nimport {\n  getColors,\n  colorsEdit,\n  colorsDelete,\n  isModelVisible,\n  SetColorsParams,\n} from \"../../../../store/Masters/Colors/colorsSlice\";\nimport AddColors from \"./addColors\";\n\nfunction Colors(props) {\n  useEffect(() => {\n    props.getColors({ page: 1, search: \"\", page_size: 10 });\n  }, []);\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"5%\",\n      // sorter: (a, b) => a.index - b.index,\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: \"35%\",\n    },\n    {\n      title: \"Color Name\",\n      dataIndex: \"name\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"40%\",\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: \"10%\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {props.userAccessList?.indexOf(\"Masters.change_color\") !== -1 && (\n          <i\n            className=\"ri-edit-box-line hp-mr-2 \"\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n            onClick={() => {\n              props.colorsEdit(row);\n              props.isModelVisible(true);\n            }}\n          ></i>\n          )}\n\n        {props.userAccessList?.indexOf(\"Masters.delete_color\") !== -1 && (\n          <Popconfirm\n            placement=\"topRight\"\n            title=\"Are you sure to delete this Record?\"\n            onConfirm={() => props.colorsDelete(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            className=\"hp-ml-8\"\n            icon={\n              <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n            }\n          >\n            <i\n              className=\"ri-delete-bin-2-line \"\n              style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n            ></i>\n          </Popconfirm>\n        )}\n        </Space>\n      ),\n    },\n  ];\n\n  const data = props.colorslist.map((row, key) => ({\n    ...row,\n    index:\n      (props.colorsParams.page - 1) * props.colorsParams.page_size + key + 1,\n  }));\n\n  function onPageChange(page, pageSize) {\n    props.SetColorsParams({\n      ...props.colorsParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getColors({\n      ...props.colorsParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.SetColorsParams({ ...props.colorsParams, search: val });\n    props.getColors({ ...props.colorsParams, search: val });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  const { Search } = Input;\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Colors Master\"\n        addModelTile={\n          props.userAccessList?.indexOf(\"Masters.add_color\") !== -1 &&\n          \"Add Color\"\n        }\n        goBack={true}\n        setIsModalVisible={props.isModelVisible}\n        isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\">\n            <Col span={12} xs={24} sm={24} md={14} className=\"hp-mb-10\">\n              <Search\n                placeholder=\"Search...\"\n                allowClear\n                onChange={(e) => {\n                  if (e.target.value == \"\") {\n                    props.getColors({\n                      ...props.colorsParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                    props.SetColorsParams({\n                      ...props.colorsParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                  }\n                }}\n                onSearch={(value) => {\n                  onSearch(value);\n                }}\n              />\n            </Col>\n\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 500 }}\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.colorsParams?.page}\n                pageSize={props.colorsParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                on\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <AddColors />\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ colors, system }) {\n  return {\n    colorslist: colors.colorslist,\n    noofpages: colors.noofpages,\n    listCount: colors.listCount,\n    colorsParams: colors.colorsParams,\n    loading: colors.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getColors,\n  colorsEdit,\n  colorsDelete,\n  isModelVisible,\n  SetColorsParams,\n})(Colors);\n"],"sourceRoot":""}