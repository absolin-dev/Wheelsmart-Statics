{"version":3,"sources":["view/components/data-entry/inputs/numberInput.jsx","layout/components/content/page-title/index.jsx","view/pages/MastersDashboard/person/addPerson.jsx"],"names":["NumericInput","props","value","onChange","onBlur","e","inputValue","target","test","key","name","valueTemp","charAt","length","slice","replace","PageTitle","history","useHistory","pageTitle","pageText","goBack","addModelTile","addModelTile2","setIsModalVisible","setIsModalVisible2","span","className","xs","md","xl","to","onClick","size","type","icon","isMobile","connect","person","mini","rowdata","model","miniStatesList","miniDistrictList","miniCityList","miniAreaList","miniBanksList","miniOccupationList","personAdd","checkAadharnoValidate","checkMobileValidate","isModelVisible","InputChangeValue","getMiniDistrict","getMiniCity","getMiniArea","getMiniBanks","getMiniOccupation","getMiniStates","Form","useForm","form","ChangeHandeler","useEffect","handleResetInputValues","resetFields","FooterAddOrUpdate","id","submit","block","FooterCancel","ghost","modalTitle","disableDateRanges","range","startDate","endDate","current","startCheck","endCheck","moment","setFieldsValue","firstname","middlename","lastname","mobile","aadharno","gender","dob","maritalstatus","dom","qualification","occupation_id","housetype","income","bank_id","accono","ifsccode","state_id","district_id","city_id","area_id","pincode","addressline1","addressline2","visible","title","onCancel","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","format","handleAdd","typeId","handleUpdate","Item","label","rules","required","message","pattern","RegExp","hasFeedback","style","transform","placeholder","min","getValueProps","data","maxLength","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","map","index","Option","disabledDate","Date","date","occupation","allowClear","bank","toUpperCase","state","district","city","area","TextArea"],"mappings":"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","file":"static/js/5.63b260df.chunk.js","sourcesContent":["import { Input, Tooltip } from \"antd\";\n\nconst formatNumber = (value) => new Intl.NumberFormat().format(value);\n\nexport default function NumericInput(props) {\n  const { value, onChange, onBlur } = props;\n\n  const handleChange = (e) => {\n    const { value: inputValue } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n\n    if (reg.test(inputValue) || inputValue === \"\" || inputValue === \"-\") {\n      onChange({ key: props.name, value: inputValue });\n    }\n  }; // '.' at the end or only '-' in the input box.\n\n  const handleBlur = () => {\n    let valueTemp = value;\n\n    if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n      valueTemp = value.slice(0, -1);\n    }\n\n    // onChange({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n    onBlur({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n  };\n\n  return (\n    <Input\n      {...props}\n      onChange={handleChange}\n      onBlur={props.onBlur && handleBlur}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function PageTitle(props) {\n  let history = useHistory();\n\n  const {\n    pageTitle,\n    pageText,\n    goBack,\n    addModelTile,\n    addModelTile2,\n    setIsModalVisible,\n    setIsModalVisible2,\n  } = props;\n\n  return (\n    <Col span={24} className=\"hp-mt-12\">\n      <Row>\n        <Col span={16} xs={16} md={12} xl={16}>\n          {goBack && (\n            <Link\n              to=\"#\"\n              onClick={() => {\n                history.goBack();\n              }}\n              className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n            >\n              <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n            </Link>\n          )}\n          <Row className=\"hp-d-inline-block\">\n            <Col span={24}>\n              {pageTitle && <h3 className=\"hp-mb-2 hp-mt-4\">{pageTitle}</h3>}\n            </Col>\n\n            <Col span={24}>\n              {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n            </Col>\n          </Row>\n        </Col>\n        <Col span={8} xs={8} md={12} xl={8}>\n          <div className=\"hp-float-right hp-d-inline-block\">\n            {addModelTile && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile}\n                </Button>\n              </div>\n            )}\n            {addModelTile2 && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"hp-pr-12\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible2(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile2}\n                </Button>\n              </div>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill, } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Row, Col, Select, DatePicker } from \"antd\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport moment from \"moment\";\n\nimport {\n  checkAadharnoValidate,\n  checkMobileValidate,\n  personAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Person/personSlice\";\n\nimport {\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n  getMiniArea,\n  getMiniBanks,\n  getMiniOccupation,\n} from \"../../../../store/mini/miniSlice\";\nimport { string } from \"prop-types\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddPerson = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniStates();\n    props.getMiniBanks();\n    props.getMiniOccupation();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  const housetypeList = [\n    { id: 1, name: \"Own\" },\n    { id: 2, name: \"Rent\" },\n  ];\n\n  const maritalStatusList = [\n    { value: true, name: \"Yes\" },\n    { value: false, name: \"No\" },\n  ];\n\n  const qualificationList = [\n    { id: 1, name: \"Illiterate\" },\n    { id: 2, name: \"10th/Ssc\" },\n    { id: 3, name: \"Intermediate\" },\n    { id: 4, name: \"Graduate\" },\n    { id: 5, name: \"Post Graduate\" },\n  ];\n\n  const genderList = [\n    { id: 1, name: \"Male\" },\n    { id: 2, name: \"Female\" },\n    { id: 3, name: \"Others\" },\n  ];\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      firstname: props.rowdata?.firstname,\n      middlename: props.rowdata?.middlename,\n      lastname: props.rowdata?.lastname,\n      mobile: props.rowdata?.mobile,\n      aadharno: props.rowdata?.aadharno,\n      gender: props.rowdata?.gender,\n      housetype: props.rowdata?.housetype,\n      qualification: props.rowdata?.qualification,\n      addressline1: props.rowdata?.addressline1,\n      addressline2: props.rowdata?.addressline2,\n      area_id: props.rowdata?.area_id,\n      state_id: props.rowdata.state_id,\n      district_id: props.rowdata.district_id,\n      city_id: props.rowdata.city_id,\n      bank_id: props.rowdata.bank_id,\n      occupation_id: props.rowdata.occupation_id,\n      pincode: props.rowdata.pincode,\n      ifsccode: props.rowdata.ifsccode,\n      income: props.rowdata.income,\n      accono: props.rowdata.accono,\n      dob: moment(props.rowdata?.dob).format(\"YYYY-MM-DD\"),\n      // dom: moment(props.rowdata?.dom).format(\"YYYY-MM-DD\"),\n      dom: props.rowdata.dom != null ? moment(props.rowdata.dom).format('YYYY-MM-DD') : null,\n      maritalstatus: props.rowdata.maritalstatus,\n    };\n    props.personAdd({obj});\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      firstname: props.rowdata?.firstname,\n      middlename: props.rowdata?.middlename,\n      lastname: props.rowdata?.lastname,\n      mobile: props.rowdata?.mobile,\n      aadharno: props.rowdata?.aadharno,\n      gender: props.rowdata?.gender,\n      housetype: props.rowdata?.housetype,\n      qualification: props.rowdata?.qualification,\n      addressline1: props.rowdata?.addressline1,\n      addressline2: props.rowdata?.addressline2,\n      area_id: props.rowdata?.area_id,\n      state_id: props.rowdata.state_id,\n      district_id: props.rowdata.district_id,\n      city_id: props.rowdata.city_id,\n      bank_id: props.rowdata.bank_id,\n      occupation_id: props.rowdata.occupation_id,\n      pincode: props.rowdata.pincode,\n      ifsccode: props.rowdata.ifsccode,\n      income: props.rowdata.income,\n      accono: props.rowdata.accono,\n      dob: moment(props.rowdata?.dob).format(\"YYYY-MM-DD\"),\n      // dom: moment(props.rowdata?.dom).format(\"YYYY-MM-DD\"),\n      dom: props.rowdata.dom != null ? moment(props.rowdata.dom).format('YYYY-MM-DD') : null,\n      maritalstatus: props.rowdata.maritalstatus,\n    };\n    props.personAdd({obj, type: props.type, typeId: props.typeId});\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    form.resetFields();\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n            form.resetFields();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Customer\n    </h5>\n  );\n\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck = current && current < moment(startDate, \"YYYY-MM-DD\");\n      }\n      if (endDate) {\n        endCheck = current && current > moment(endDate, \"YYYY-MM-DD\");\n      }\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  \n\n  useEffect(() => {\n    form.setFieldsValue({\n      firstname: props.rowdata.firstname,\n      middlename: props.rowdata.middlename,\n      lastname: props.rowdata.lastname,\n      mobile: props.rowdata.mobile,\n      aadharno: props.rowdata.aadharno,\n      gender: props.rowdata.gender,\n      dob: props.rowdata.dob,\n      maritalstatus: props.rowdata.maritalstatus,\n      dom: props.rowdata.dom,\n      qualification: props.rowdata.qualification,\n      occupation_id: props.rowdata.occupation_id,\n      housetype: props.rowdata.housetype,\n      income: props.rowdata.income,\n      bank_id: props.rowdata.bank_id,\n      accono: props.rowdata.accono,\n      ifsccode: props.rowdata.ifsccode,\n      state_id: props.rowdata.state_id,\n      district_id: props.rowdata.district_id,\n      city_id: props.rowdata.city_id,\n      area_id: props.rowdata.area_id,\n      pincode: props.rowdata.pincode,\n      addressline1: props.rowdata.addressline1,\n      addressline2: props.rowdata.addressline2,\n    });\n  }, [props.rowdata]);\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        form.resetFields();\n        handleResetInputValues();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={916}\n    >\n      <Form\n        form={form}\n        name=\"userForm\"\n        layout=\"vertical\"\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"First Name :\"\n              name=\"firstname\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your First Name!\",\n                },\n                {\n                  pattern: new RegExp(/^[a-zA-Z][a-zA-Z\\s]+$/i),\n                  message: \"field does not accept numbers\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Firstname\"\n                name=\"firstname\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                placeholder=\"First Name\"\n                value={props.rowdata?.firstname}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Middle Name :\"\n              name=\"middlename\"\n              rules={[\n                // {\n                //   required: true,\n                //   message: \"Please input your First Name!\",\n                // },\n                // {\n                //   pattern: new RegExp(/^[a-zA-Z][a-zA-Z\\s]+$/i),\n                //   message: \"field does not accept numbers\",\n                // },\n                {\n                  pattern: new RegExp(/^[a-zA-Z]+$/),\n                  message: \"field does not space allow\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Middlename\"\n                name=\"middlename\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                placeholder=\"Middle Name\"\n                value={props.rowdata?.middlename}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Last Name :\"\n              name=\"lastname\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Last Name!\",\n                },\n                // {\n                //   // pattern: new RegExp(/^[a-zA-Z][a-zA-Z\\s]+$/i),\n                //   // pattern: new RegExp(/^(?=[\\p{L}0-9])[\\p{L}\\p{N}_@,.&$%#\\s-]{1}$/u),\n                //   message: \"field does not accept numbers\",\n                // },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Lastname\"\n                name=\"lastname\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Last Name\"\n                value={props.rowdata?.lastname}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Mobile Number :\"\n              name=\"mobile\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Mobile Number!\",\n                },\n                {\n                  min: 10,\n                  message: \"Not a valid Mobile Number!\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Mobile\"\n                name=\"mobile\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Mobile Number\"\n                onBlur={(data) => {\n                  props.checkMobileValidate({ mobile: data.value });\n                }}\n                maxLength={10}\n                value={\n                  props.rowdata?.mobile == null ? \"\" : props.rowdata?.mobile\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Aadhar No:\"\n              name=\"aadharno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Aadhar Number!\",\n                },\n                {\n                  min: 12,\n                  message: \"Not a valid aadhar number\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"aadharno\"\n                name=\"aadharno\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Aadhar No \"\n                maxLength={12}\n                onBlur={(data) => {\n                  props.checkAadharnoValidate({ aadharno: data.value });\n                }}\n                value={\n                  props.rowdata?.aadharno == null ? \"\" : props.rowdata?.aadharno\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Gender\"\n              name=\"gender\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your gender!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select Gender\"\n                optionFilterProp=\"gender\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"gender\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.gender == null ? \"\" : props.rowdata?.gender\n                }\n              >\n                {genderList.map((gender, index) => {\n                  return (\n                    <Option key={index} value={gender.id}>\n                      {gender.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Date of Birth  :\"\n              name=\"dob\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Date of Birth!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <DatePicker\n                id=\"dob\"\n                name=\"dob\"\n                style={{ width: \"100%\" }}\n                format=\"DD-MM-YYYY\"\n                disabledDate={disableDateRanges({\n                  endDate: new Date(),\n                  // startDate: new Date(\"2020-01-01\"),\n                })}\n                placeholder=\"Select Date of Birth\"\n                value={props.rowdata.dob == null ? \"\" : props.rowdata?.dob}\n                onChange={(date) => {\n                  props.InputChangeValue({\n                    key: \"dob\",\n                    value: date,\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Marital Status\"\n              name=\"maritalstatus\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Marital Status!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Marital Status\"\n                optionFilterProp=\"maritalstatus\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"maritalstatus\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.maritalstatus == null\n                    ? \"\"\n                    : props.rowdata?.maritalstatus\n                }\n              >\n                {maritalStatusList.map((maritalstatus, index) => {\n                  return (\n                    <Option key={index} value={maritalstatus.value}>\n                      {maritalstatus.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          {props.rowdata.maritalstatus && (\n            <>\n              <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n                <Form.Item\n                  label=\"Date of Marriage  :\"\n                  name=\"dom\"\n                  // rules={[\n                  //   {\n                  //     required: true,\n                  //     message: \"Please select your marriage Date!\",\n                  //   },\n                  // ]}\n                  hasFeedback\n                >\n                  <DatePicker\n                    id=\"dom\"\n                    name=\"dom\"\n                    style={{ width: \"100%\" }}\n                    format=\"DD-MM-YYYY\"\n                    placeholder=\"Select Date of Marriage\"\n                    disabledDate={disableDateRanges({\n                      endDate: new Date(),\n                    })}\n                    value={props.rowdata.dom == null ? \"\" : props.rowdata?.dom}\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"dom\",\n                        value: date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n            </>\n          )}\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Qualification\"\n              name=\"qualification\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Qualification!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select Qualification\"\n                optionFilterProp=\"Qualification\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"qualification\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.qualification == null\n                    ? \"\"\n                    : props.rowdata?.qualification\n                }\n              >\n                {qualificationList.map((qualification, index) => {\n                  return (\n                    <Option key={index} value={qualification.id}>\n                      {qualification.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Occupation :\"\n              name=\"occupation_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Occupation!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Occupation\"\n                optionFilterProp=\"occupation\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"occupation_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.occupation_id == null\n                    ? \"\"\n                    : props.rowdata?.occupation_id\n                }\n              >\n                {props.miniOccupationList.map((occupation, index) => {\n                  return (\n                    <Option key={index} value={occupation.id}>\n                      {occupation.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"House Type\"\n              name=\"housetype\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your House Type!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select House Type\"\n                optionFilterProp=\"Housetype\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"housetype\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.housetype == null\n                    ? \"\"\n                    : props.rowdata?.housetype\n                }\n              >\n                {housetypeList.map((housetype, index) => {\n                  return (\n                    <Option key={index} value={housetype.id}>\n                      {housetype.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Income :\"\n              name=\"income\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Income!\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Income\"\n                name=\"income\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Income\"\n                maxLength={6}\n                value={\n                  props.rowdata.income == null ? \"\" : props.rowdata?.income\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Bank :\"\n              name=\"bank_id\"\n              // rules={[\n              //   {\n              //     required: true,\n              //     message: \"Please select your Bank!\",\n              //   },\n              // ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                allowClear\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Bank\"\n                optionFilterProp=\"Bank\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"bank_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.bank_id == null ? \"\" : props.rowdata?.bank_id\n                }\n              >\n                {props.miniBanksList.map((bank, index) => {\n                  return (\n                    <Option key={index} value={bank.id}>\n                      {bank.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Account Number :\"\n              name=\"accono\"\n              rules={[\n                // {\n                //   required: true,\n                //   message: \"Please input your Account Number!\",\n                // },\n                {\n                  min: 9,\n                  message: \"Account Number Must be minimum 9 characters\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Accono\"\n                name=\"accono\"\n                maxLength={18}\n                style={{ width: \"100%\" }}\n                placeholder=\"Account Number\"\n                value={\n                  props.rowdata.accono == null ? \"\" : props.rowdata?.accono\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"IFSC Code\"\n              name=\"ifsccode\"\n              rules={[\n                // {\n                //   required: true,\n                //   message: \"Please input your IFSC code!\",\n                // },\n                // {\n                //   pattern: new RegExp(/[A-Z]{4}[0][a-zA-Z0-9]{6}$/i),\n                //   message: \"field does not accept IFSC code\",\n                // },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Ifsccode\"\n                name=\"ifsccode\"\n                style={{ width: \"100%\" }}\n                maxLength={11}\n                placeholder=\"IFSC Code\"\n                value={props.rowdata?.ifsccode}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"State :\"\n              name=\"state_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your State!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select State\"\n                optionFilterProp=\"state\"\n                onChange={(value) => {\n                  props.getMiniDistrict({ state: value });\n                  props.InputChangeValue({\n                    key: \"state_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.state_id == null ? \"\" : props.rowdata?.state_id\n                }\n              >\n                {props.miniStatesList.map((state, index) => {\n                  return (\n                    <Option key={index} value={state.id}>\n                      {state.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"District :\"\n              name=\"district_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your District!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select District\"\n                optionFilterProp=\"district\"\n                onChange={(value) => {\n                  props.getMiniCity({ district: value });\n                  props.InputChangeValue({\n                    key: \"district_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.district_id == null\n                    ? \"\"\n                    : props.rowdata?.district_id\n                }\n              >\n                {props.miniDistrictList.map((district, index) => {\n                  return (\n                    <Option key={index} value={district.id}>\n                      {district.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"City :\"\n              name=\"city_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your City!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select City\"\n                optionFilterProp=\"city\"\n                onChange={(value) => {\n                  props.getMiniArea({ city: value });\n                  props.InputChangeValue({\n                    key: \"city_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.city_id == null ? \"\" : props.rowdata?.city_id\n                }\n              >\n                {props.miniCityList.map((city, index) => {\n                  return (\n                    <Option key={index} value={city.id}>\n                      {city.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Area :\"\n              name=\"area_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your Area!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Area\"\n                optionFilterProp=\"area\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"area_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.area_id == null ? \"\" : props.rowdata?.area_id\n                }\n              >\n                {props.miniAreaList.map((area, index) => {\n                  return (\n                    <Option key={index} value={area.id}>\n                      {area.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Pincode :\"\n              name=\"pincode\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Pincode!\",\n                },\n                {\n                  pattern: new RegExp(/^\\d{6}$/g),\n                  message: \"field does not accept pincode\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Pincode\"\n                name=\"pincode\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Pincode\"\n                maxLength={6}\n                value={\n                  props.rowdata.pincode == null ? \"\" : props.rowdata?.pincode\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Address 1:\"\n              name=\"addressline1\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Input your Address!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input.TextArea\n                id=\"Address Line1\"\n                name=\"addressline1\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Addressline1\"\n                value={props.rowdata?.addressline1}\n                onChange={ChangeHandeler}\n                maxLength={150}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item label=\"Address 2:\" name=\"addressline2\" hasFeedback>\n              <Input.TextArea\n                id=\"Addressline2\"\n                name=\"addressline2\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Addressline2\"\n                value={props.rowdata?.addressline2}\n                onChange={ChangeHandeler}\n                maxLength={150}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ person, mini }) {\n  return {\n    rowdata: person.rowdata,\n    model: person.model,\n    miniStatesList: mini.miniStatesList,\n    miniDistrictList: mini.miniDistrictList,\n    miniCityList: mini.miniCityList,\n    miniAreaList: mini.miniAreaList,\n    miniBanksList: mini.miniBanksList,\n    miniOccupationList: mini.miniOccupationList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  personAdd,\n  checkAadharnoValidate,\n  checkMobileValidate,\n  isModelVisible,\n  InputChangeValue,\n  getMiniDistrict,\n  getMiniCity,\n  getMiniArea,\n  getMiniBanks,\n  getMiniOccupation,\n  getMiniStates,\n})(AddPerson);\n"],"sourceRoot":""}