{"version":3,"sources":["view/components/data-entry/inputs/numberInput.jsx","layout/components/content/page-title/index.jsx","assets/images/app/empty-list.svg","assets/images/broken_img.png","view/pages/MastersDashboard/vehicles/addVehicles.jsx","assets/images/pages/profile/dummy-img.jpeg","assets/images/defaultVechicleImg.svg","view/pages/Dashboard/VehicleCounterSales/VehicleGridList.jsx","view/pages/Dashboard/VehicleCounterSales/VehicleList.jsx","view/pages/Dashboard/VehicleCounterSales/Filters/Filter.jsx","view/pages/Dashboard/VehicleCounterSales/index.jsx"],"names":["NumericInput","props","value","onChange","onBlur","e","inputValue","target","test","key","name","valueTemp","charAt","length","slice","replace","PageTitle","history","useHistory","pageTitle","pageText","goBack","addModelTile","addModelTile2","setIsModalVisible","setIsModalVisible2","span","className","xs","md","xl","to","onClick","size","type","icon","isMobile","connect","vehicles","mini","rowdata","model","miniVersionList","miniEmissionnorms","miniBrandsList","miniBrandFamilyList","miniModelsList","vehiclesAdd","isModelVisible","InputChangeValue","getMiniVersion","getMiniEmissionnorms","getMiniBrands","getMiniBrandFamily","getMiniModels","vehicleNumberValidate","engineNumberValidate","chassisNumberValidate","Form","useForm","form","useEffect","handleResetInputValues","FooterAddOrUpdate","id","submit","block","FooterCancel","ghost","modalTitle","checkValidation","data","console","log","chassisno","Modal","error","title","content","engineno","setFieldsValue","vehicleType","vehicleno","brand_id","brandfamily_id","model_id","vehicletrno","version_id","emission_id","year","visible","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","moment","format","handleAdd","brand","brandfamily","emission","version","typeId","handleUpdate","gutter","Item","label","rules","required","message","Group","Button","pattern","RegExp","hasFeedback","style","placeholder","minLength","maxLength","toUpperCase","transform","showSearch","filterOption","input","option","children","toLowerCase","includes","optionFilterProp","map","index","Option","picker","disabledDate","range","startDate","endDate","current","startCheck","endCheck","disableDateRanges","Date","date","min","getValueProps","VehicleGridListView","Text","Typography","Link","sm","lg","xxl","vehiclefront_image","height","preview","src","file_thumbnail","alt","onError","currentTarget","onerror","brokenImg","defaultVehicle","vehicle","substring","createdby","fullname","approvalstatus","approvalstatus_name","customer_image","dummy","customer","firstname","purchase","partytype_name","ArrowUpOutlined","counter","href","counterSales","system","loading","vehicleSaleParams","userAccessList","vechicleSaleDelete","vehiclesList","columnClass","deleteSale","columns","dataIndex","fixed","render","row","code","record","editable","indexOf","cursor","color","page","page_size","tip","spinning","delay","rowClassName","dataSource","scroll","x","pagination","getFullYear","getMonth","drawer","activeTab","miniCountersList","miniClustersList","miniDivisionsList","miniZonesList","miniVehiclesList","vehiclesParams","isDrawerVisible","getMiniCounters","getMiniClusters","getMiniDivisions","getMiniZones","FilterInputChangeValue","getVehiclesList","setVehicleSaleParams","getMiniVehicles","SetVehiclesParams","getVehicles","getMiniZonesClearData","getMiniClustersClearData","getMiniDivisionsClearData","getMiniCountersClearData","vehicleSaleActiveTab","start_date","end_date","counter__zone","counter__division","counter__cluster","onClose","placement","bodyStyle","paddingBottom","initialValues","remember","search","saletype","disabled","allowClear","approvals","onSearch","defaultActiveFirstOption","showArrow","onPopupScroll","no_of_pages","vehicle_id","zone","zone_id","division","division_id","cluster","cluster_id","counter_id","htmlType","noofpages","listCount","getReportList","clearVehiclesList","clearVehiclesParams","Search","Input","TabPane","Tabs","useState","productListToggle","setProductListToggle","onPageChange","pageSize","showTotal","total","val","FilterOutlined","onConfirm","objData","file_format","model_name","ParamsData","add","okText","cancelText","UploadOutlined","PlusOutlined","AppstoreOutlined","OrderedListOutlined","defaultActiveKey","salesType","tab","showSizeChanger","renderItem","image","EmptyImage","imageStyle","description","Filter"],"mappings":"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","file":"static/js/21.83a64065.chunk.js","sourcesContent":["import { Input, Tooltip } from \"antd\";\n\nconst formatNumber = (value) => new Intl.NumberFormat().format(value);\n\nexport default function NumericInput(props) {\n  const { value, onChange, onBlur } = props;\n\n  const handleChange = (e) => {\n    const { value: inputValue } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n\n    if (reg.test(inputValue) || inputValue === \"\" || inputValue === \"-\") {\n      onChange({ key: props.name, value: inputValue });\n    }\n  }; // '.' at the end or only '-' in the input box.\n\n  const handleBlur = () => {\n    let valueTemp = value;\n\n    if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n      valueTemp = value.slice(0, -1);\n    }\n\n    // onChange({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n    onBlur({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n  };\n\n  return (\n    <Input\n      {...props}\n      onChange={handleChange}\n      onBlur={props.onBlur && handleBlur}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function PageTitle(props) {\n  let history = useHistory();\n\n  const {\n    pageTitle,\n    pageText,\n    goBack,\n    addModelTile,\n    addModelTile2,\n    setIsModalVisible,\n    setIsModalVisible2,\n  } = props;\n\n  return (\n    <Col span={24} className=\"hp-mt-12\">\n      <Row>\n        <Col span={16} xs={16} md={12} xl={16}>\n          {goBack && (\n            <Link\n              to=\"#\"\n              onClick={() => {\n                history.goBack();\n              }}\n              className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n            >\n              <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n            </Link>\n          )}\n          <Row className=\"hp-d-inline-block\">\n            <Col span={24}>\n              {pageTitle && <h3 className=\"hp-mb-2 hp-mt-4\">{pageTitle}</h3>}\n            </Col>\n\n            <Col span={24}>\n              {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n            </Col>\n          </Row>\n        </Col>\n        <Col span={8} xs={8} md={12} xl={8}>\n          <div className=\"hp-float-right hp-d-inline-block\">\n            {addModelTile && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile}\n                </Button>\n              </div>\n            )}\n            {addModelTile2 && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"hp-pr-12\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible2(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile2}\n                </Button>\n              </div>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/empty-list.6fd5c5d1.svg\";","export default __webpack_public_path__ + \"static/media/broken_img.203310e1.png\";","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport {\n  Button,\n  Input,\n  Form,\n  Modal,\n  Radio,\n  Row,\n  Col,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport {\n  vehiclesAdd,\n  isModelVisible,\n  InputChangeValue,\n  vehicleNumberValidate,\n  engineNumberValidate,\n  chassisNumberValidate,\n} from \"../../../../store/Masters/Vehicles/vehiclesSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  getMiniVersion,\n  getMiniEmissionnorms,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniModels,\n} from \"../../../../store/mini/miniSlice\";\nimport {\n  RiCheckboxCircleLine,\n  RiAlertLine,\n  RiInformationLine,\n} from \"react-icons/ri\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddVehicles = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    // props.getMiniVersion();\n    props.getMiniEmissionnorms();\n    props.getMiniBrands();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      vehicleno:\n        props.rowdata?.vehicleType === \"new\"\n          ? props.rowdata.vehicletrno\n          : props.rowdata?.vehicleno,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletrno: props.rowdata.vehicletrno,\n      year: moment(props.rowdata?.year).format(\"YYYY\"),\n      engineno: props.rowdata.engineno,\n      emission_id: props.rowdata.emission_id,\n      version_id: props.rowdata.version_id,\n      chassisno: props.rowdata.chassisno,\n    };\n    props.vehiclesAdd({obj});\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      vehicleno:\n        props.rowdata?.vehicleType === \"new\"\n          ? props.rowdata.vehicletrno\n          : props.rowdata?.vehicleno,\n      brand_id:\n        props.rowdata?.brand_id == null\n          ? props.rowdata.brand.id\n          : props.rowdata?.brand_id,\n      brandfamily_id:\n        props.rowdata?.brandfamily_id == null\n          ? props.rowdata.brandfamily.id\n          : props.rowdata?.brandfamily_id,\n      model_id:\n        props.rowdata?.model_id == null\n          ? props.rowdata.model.id\n          : props.rowdata?.model_id,\n      vehicletrno: props.rowdata?.vehicletrno,\n      year: moment(props.rowdata?.year).format(\"YYYY\"),\n      engineno: props.rowdata?.engineno,\n      emission_id:\n        props.rowdata?.emission_id == null\n          ? props.rowdata.emission.id\n          : props.rowdata?.emission_id,\n      version_id:\n        props.rowdata?.version_id == null\n          ? props.rowdata.version.id\n          : props.rowdata?.version_id,\n      chassisno: props.rowdata?.chassisno,\n    };\n    props.vehiclesAdd({obj, type: props.type, typeId: props.typeId}, );\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Vehicle\n    </h5>\n  );\n\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck = current && current < moment(startDate, \"YYYY\");\n      }\n      if (endDate) {\n        endCheck = current && current > moment(endDate, \"YYYY\");\n      }\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n  // props.rowdata?.engineno ==\n  function checkValidation(type, data) {\n    console.log(\"type\", type, data.target.value);\n    if (type == \"engineno\") {\n      if (data.target.value == props.rowdata?.chassisno) {\n        props.InputChangeValue({\n          key: type,\n          value: \"\",\n        });\n        Modal.error({\n          icon: (\n            <span className=\"remix-icon\">\n              <RiInformationLine />\n            </span>\n          ),\n          title: (\n            <h5 className=\"hp-mb-0 hp-font-weight-500\">Engine Number Error</h5>\n          ),\n          content: (\n            <div>\n              <p className=\"hp-p1-body hp-text-color-black-80\">\n                Engine & Chassis Number should not be same{\" \"}\n              </p>\n            </div>\n          ),\n        });\n      }\n    } else {\n      if (data.target.value == props.rowdata?.engineno) {\n        props.InputChangeValue({\n          key: type,\n          value: \"\",\n        });\n        Modal.error({\n          icon: (\n            <span className=\"remix-icon\">\n              <RiInformationLine />\n            </span>\n          ),\n          title: (\n            <h5 className=\"hp-mb-0 hp-font-weight-500\">Chassis Number Error</h5>\n          ),\n          content: (\n            <div>\n              <p className=\"hp-p1-body hp-text-color-black-80\">\n                Engine & Chassis Number should not be same{\" \"}\n              </p>\n            </div>\n          ),\n        });\n      }\n    }\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      vehicleType: props.rowdata.vehicleType,\n      vehicleno: props.rowdata.vehicleno,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletrno: props.rowdata.vehicletrno,\n      version_id: props.rowdata.version_id,\n      emission_id: props.rowdata.emission_id,\n      year: props.rowdata.year,\n      engineno: props.rowdata.engineno,\n      chassisno: props.rowdata.chassisno,\n    });\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={616}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row gutter={[12, 0]}>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Vehicle Type\"\n              name=\"vehicleType\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select Your Vehicle Type!\",\n                },\n              ]}\n            >\n              <Radio.Group\n                name=\"vehicleType\"\n                onChange={ChangeHandeler}\n                value={props.rowdata?.vehicleType}\n              >\n                <Radio.Button value=\"new\">New Vehicle</Radio.Button>\n                <Radio.Button value=\"old\">Old Vehicle</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n          {props.rowdata?.vehicleType === \"new\" ? (\n            <>\n              <Col span={24} xs={24} xl={12} md={12}>\n                <Form.Item\n                  label=\"Vehicle TR Number:\"\n                  name=\"vehicletrno\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter Your Vehicle TR Number!\",\n                    },\n                    {\n                      pattern: new RegExp(\n                        /[A-Z][A-Z][0-9][0-9][A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9]$/i\n                      ),\n                      message: \"field does not accept numbers\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Input\n                    id=\"Version\"\n                    name=\"vehicletrno\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"EX:AP00ABCD1234\"\n                    minLength={10}\n                    maxLength={15}\n                    value={props.rowdata?.vehicletrno}\n                    onChange={(e) => {\n                      props.InputChangeValue({\n                        key: e.target.name,\n                        value: e.target.value.toUpperCase(),\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n            </>\n          ) : (\n            <>\n              <Col span={24} xs={24} xl={12} md={12}>\n                <Form.Item\n                  label=\"Vehicle Number\"\n                  name=\"vehicleno\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter Your Vehicle Number!\",\n                    },\n\n                    // {\n                    //   pattern: new RegExp(\n                    //     \"^[A-Z]{2}[0-9]{1,2}[A-Z]{1,2}[0-9]{1,4}$\"\n                    //   ),\n                    //   message: \"Please accept valid vehicle number\",\n                    // },\n                    {\n                      pattern: new RegExp(\n                        \"^[A-Z]{2}[0-9]{1,2}[A-Z]{1,2}[0-9]{4}$\"\n                      ),\n                      message: \"Please accept valid vehicle number\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Input\n                    id=\"vehicleno-input\"\n                    name=\"vehicleno\"\n                    label=\"Vehicle Number:\"\n                    maxLength={11}\n                    style={{ width: \"100%\", transform: \"uppercase\" }}\n                    placeholder=\"EX: AP00QQ0000\"\n                    onBlur={(data) => {\n                      console.log(\"data\", data);\n                      props.vehicleNumberValidate({\n                        vehicleno: data.target.value,\n                      });\n                    }}\n                    value={props.rowdata?.vehicleno}\n                    onChange={(e) => {\n                      props.InputChangeValue({\n                        key: e.target.name,\n                        value: e.target.value.toUpperCase(),\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n            </>\n          )}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Brand :\"\n              name=\"brand_id\"\n              rules={[{ required: true, message: \"Please select your Brand!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select  Brand\"\n                optionFilterProp=\"Brand\"\n                onChange={(value) => {\n                  props.getMiniBrandFamily({ brand: value });\n                  props.InputChangeValue({\n                    key: \"brand_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brand_id == null ? \"\" : props.rowdata?.brand_id\n                }\n              >\n                {props.miniBrandsList.map((brand, index) => {\n                  return (\n                    <Option key={index} value={brand.id}>\n                      {brand.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Brand Family :\"\n              name=\"brandfamily_id\"\n              rules={[\n                { required: true, message: \"Please select your Brand Family!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Brand Family\"\n                optionFilterProp=\"brand Family\"\n                onChange={(value) => {\n                  props.getMiniModels({ brandfamily: value });\n                  props.InputChangeValue({\n                    key: \"brandfamily_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brandfamily_id == null\n                    ? \"\"\n                    : props.rowdata?.brandfamily_id\n                }\n              >\n                {props.miniBrandFamilyList.map((brandfamily, index) => {\n                  return (\n                    <Option key={index} value={brandfamily.id}>\n                      {brandfamily.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Model :\"\n              name=\"model_id\"\n              rules={[{ required: true, message: \"Please select your Model!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Model\"\n                optionFilterProp=\"Model\"\n                onChange={(value) => {\n                  props.getMiniVersion({ model: value });\n                  props.InputChangeValue({\n                    key: \"model_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.model_id == null ? \"\" : props.rowdata?.model_id\n                }\n              >\n                {props.miniModelsList.map((model, index) => {\n                  return (\n                    <Option key={index} value={model.id}>\n                      {model.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Version :\"\n              name=\"version_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Version!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Version\"\n                optionFilterProp=\"version\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"version_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.version_id == null\n                    ? \"\"\n                    : props.rowdata?.version_id\n                }\n              >\n                {props.miniVersionList.map((version, index) => {\n                  return (\n                    <Option key={index} value={version.id}>\n                      {version.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Emission :\"\n              name=\"emission_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Emission!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select a Emission\"\n                optionFilterProp=\"emission\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"emission_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.emission_id == null\n                    ? \"\"\n                    : props.rowdata?.emission_id\n                }\n              >\n                {props.miniEmissionnorms.map((emission, index) => {\n                  return (\n                    <Option key={index} value={emission.id}>\n                      {emission.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Year\"\n              name=\"year\"\n              rules={[{ required: true, message: \"Select Year\" }]}\n              hasFeedback\n            >\n              <DatePicker\n                id=\"year\"\n                name=\"year\"\n                style={{ width: \"100%\" }}\n                picker=\"year\"\n                // format=\"YYYY\"\n                disabledDate={disableDateRanges({\n                  endDate: new Date(),\n                  startDate: 1990,\n                })}\n                placeholder=\"Select Year\"\n                value={props.rowdata?.year}\n                onChange={(date) => {\n                  console.log(\"Year\", date, typeof date);\n                  props.InputChangeValue({\n                    key: \"year\",\n                    value: date,\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Engine Number:\"\n              name=\"engineno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Engine Number!\",\n                },\n                {\n                  min: 10,\n                  message: \"Engine Number must be 10 digits!\",\n                }\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"engineno\"\n                name=\"engineno\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                minLength={10}\n                maxLength={20}\n                placeholder=\"Engine Number\"\n                value={props.rowdata?.engineno}\n                onBlur={(e) => {\n                  props.engineNumberValidate({ engineno: e.target.value });\n                  if (e.target.value != \"\") {\n                    checkValidation(\"engineno\", e);\n                  }\n                }}\n                // onChange={ChangeHandeler}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Chassis Number :\"\n              name=\"chassisno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Chassis Number!\",\n                },\n                {\n                  min: 10,\n                  message: \"Chassis Number must be 10 digits!\",\n                }\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <Input\n                id=\"Chassis Number\"\n                name=\"chassisno\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                placeholder=\"Chassis Number\"\n                minLength={10}\n                maxLength={20}\n                onBlur={(e) => {\n                  props.chassisNumberValidate({ chassisno: e.target.value });\n                  if (e.target.value != \"\") {\n                    checkValidation(\"chassisno\", e);\n                  }\n                }}\n                value={props.rowdata?.chassisno}\n                // onChange={ChangeHandeler}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ vehicles, mini }) {\n  return {\n    rowdata: vehicles.rowdata,\n    model: vehicles.model,\n    miniVersionList: mini.miniVersionList,\n    miniEmissionnorms: mini.miniEmissionnorms,\n    miniBrandsList: mini.miniBrandsList,\n    miniBrandFamilyList: mini.miniBrandFamilyList,\n    miniModelsList: mini.miniModelsList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  vehiclesAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniVersion,\n  getMiniEmissionnorms,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniModels,\n  vehicleNumberValidate,\n  engineNumberValidate,\n  chassisNumberValidate,\n})(AddVehicles);\n","export default __webpack_public_path__ + \"static/media/dummy-img.4128e0e1.jpeg\";","export default __webpack_public_path__ + \"static/media/defaultVechicleImg.5d5b5510.svg\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Button,\n  Card,\n  Avatar,\n  Typography,\n  InputNumber,\n  Image,\n  Tooltip,\n} from \"antd\";\nimport brokenImg from \"../../../../assets/images/broken_img.png\";\nimport { ArrowUpOutlined } from \"@ant-design/icons\";\nimport dummy from \"../../../../assets/images/pages/profile/dummy-img.jpeg\";\nimport defaultVehicle from \"../../../../assets/images/defaultVechicleImg.svg\";\n\nexport default function VehicleGridListView(props) {\n  const { value } = props;\n  const { Text, Link } = Typography;\n  return (\n    <Col\n      span={24}\n      xs={24}\n      sm={12}\n      md={12}\n      lg={8}\n      xl={8}\n      xxl={6}\n      className=\"hp-mb-32\"\n      key={value.id}\n    >\n      <Card className=\"hp-border-color-black-40 hp-card-6 hp-eCommerceCardOne hp-eCommerceCardOne-wishlist\">\n        <Row>\n          <Col span={24}>\n            <Row gutter={[24, 24]}>\n              <Col className=\"hp-mb-16 hp-mt-0 hp-p-0\" span={8}>\n                {value.vehiclefront_image != null ? (\n                  <Image\n                    width={100}\n                    height={50}\n                    preview={false}\n                    src={value.vehiclefront_image?.file_thumbnail}\n                    alt={value.vehiclefront_image?.alt}\n                    className=\"hp-border-radius hp-mb-10 ant-upload-select-picture-card hp-preview-img\"\n                    onError={({ currentTarget }) => {\n                      currentTarget.onerror = null; // prevents looping\n                      currentTarget.src = brokenImg;\n                    }}\n                  />\n                ) : (\n                  <Image\n                    width={100}\n                    height={50}\n                    preview={false}\n                    src={defaultVehicle}\n                    alt={\"defaultVehicle\"}\n                    className=\"hp-border-radius hp-mb-10\"\n                  />\n                )}\n              </Col>\n\n              <Col span={16}>\n                <p className=\"hp-mb-0 hp-p1-body hp-text-blue hp-font-weight-600\">\n                  {value.vehicle == null ? \"None\" : value.vehicle?.vehicleno}\n                </p>\n\n                <Tooltip title={value.vehicle?.version?.name}>\n                  {/* <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                    {value.ovfquotation?.version.name}\n                  </p> */}\n\n                  <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                    {/* {value.vehicle.version.name} */}\n                    {value.vehicle?.version?.name?.length > 10\n                      ? `${value.vehicle?.version?.name?.substring(0, 10)}...`\n                      : value.vehicle?.version?.name}\n                  </p>\n                </Tooltip>\n              </Col>\n            </Row>\n\n            <Row gutter={[24, 24]} className=\"hp-mb-16\">\n              <Col span={24}>\n                {/* <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Doc No\n                </p>\n\n                <p className=\"hp-mb-10 hp-text-color-black-100 hp-mb-0 hp-text-color-dark-0 hp-p1-body hp-font-weight-500\">\n                  {value.code}\n                </p> */}\n\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Created By\n                </p>\n                <p className=\"hp-mb-10 hp-text-color-black-100 hp-mb-0 hp-text-color-dark-0 hp-p1-body hp-font-weight-500\">\n                  {value.createdby?.fullname != null\n                    ? value.createdby?.fullname\n                    : \" None\"}\n                </p>\n\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Transaction Status\n                </p>\n\n                <Text\n                  type={\n                    value.approvalstatus == 2\n                      ? \"success\"\n                      : value.approvalstatus == 3\n                      ? \"danger\"\n                      : \"warning\"\n                  }\n                >\n                  {value.approvalstatus_name == null\n                    ? \"Pending\"\n                    : value.approvalstatus_name}\n                </Text>\n              </Col>\n\n              {/* <Col span={8}>\n                  {\n                  <Link to=\"\">\n                    <Button\n                      icon={<ArrowRight className=\"remix-icon\" width={50} />}\n                      type=\"primary\"\n                      className=\"hp-px-12 hp-arrow-btn\"\n                    >\n                    </Button>\n                  </Link>\n                  }\n                </Col> */}\n            </Row>\n\n            <Row gutter={[24, 24]} className=\"hp-mb-10\">\n              <Col span={8}>\n                <Avatar\n                  size={55}\n                  icon={\n                    value.customer_image != null ? (\n                      <Image\n                        src={value.customer_image?.file_thumbnail}\n                        preview={false}\n                        alt={value.customer_image?.alt}\n                        className=\"hp-emp-img\"\n                        onError={({ currentTarget }) => {\n                          currentTarget.onerror = null; // prevents looping\n                          currentTarget.src = brokenImg;\n                        }}\n                      />\n                    ) : (\n                      <Image\n                        src={dummy}\n                        preview={false}\n                        alt={\"dummy\"}\n                        className=\"hp-emp-img \"\n                      />\n                    )\n                  }\n                />\n              </Col>\n\n              <Col span={16}>\n                <p className=\"hp-mb-4 hp-text-color-black-100 hp-mb-0 hp-text-color-dark-0 hp-p1-body hp-font-weight-500\">\n                  {value.customer?.firstname}\n                </p>\n\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-mb-10 hp-text-color-black-80 hp-text-color-dark-30\">\n                  {value.purchase?.partytype_name}\n                </p>\n              </Col>\n            </Row>\n            <Row gutter={[24, 24]} className=\"hp-mb-10\">\n              <Col span={8}>\n                <Avatar size={55} icon={<ArrowUpOutlined />} />\n              </Col>\n\n              <Col span={16}>\n                <p className=\"hp-mb-4 hp-text-color-black-100 hp-mb-0 hp-text-color-dark-0 hp-p1-body hp-font-weight-500\">\n                  {value.counter.name}\n                </p>\n\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-mb-16  hp-text-color-black-80 hp-text-color-dark-30\">\n                  Counter Name\n                </p>\n              </Col>\n            </Row>\n\n            <Row gutter={[8, 8]}>\n              <Col span={24} className=\"hp-w-100\">\n                <Link href={`/pages/vehicles-view/` + value.id}>\n                  <Button\n                    block\n                    // icon={<RiShoppingBagLine className=\"remix-icon\" />}\n                    className=\"hp-px-12 hp-btn-bg-color\"\n                  >\n                    View Details\n                  </Button>\n                </Link>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  Row,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Button,\n  Table,\n  Space,\n  Pagination,\n  Spin,\n  Popconfirm\n} from \"antd\";\nimport { EyeOutlined, DownOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { isMobile } from \"react-device-detect\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport {\n  vechicleSaleDelete,\n} from \"../../../../store/sideMenu/vehicleCounterSales/vehicleCounterSalesSlice\";\n\nfunction VehicleList(props) {\n  const { vehiclesList, deleteSale } = props;\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-100 hp-text-color-dark-0 hp-font-weight-600 \";\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      fixed: isMobile ? null : \"left\",\n      width: 70,\n    },\n    {\n      title: \"Date\",\n      width: 120,\n      fixed: isMobile ? null : \"left\",\n      render: (row) => (\n        <span className={columnClass}>\n          {moment(row.date).format(\"DD-MM-YYYY\")}\n        </span>\n      ),\n    },\n    {\n      title: \"Vehicle No\",\n      width: \"15%\",\n      render: (row) => (\n        <Link to={`/pages/vehicles-view/` + row.id}>\n          {row.vehicle?.vehicleno}\n        </Link>\n      ),\n    },\n    {\n      title: \"Sales No\",\n      width: \"18%\",\n      render: (row) => <span className={columnClass}>{row.code}</span>,\n    },\n    {\n      title: \"Purchase No\",\n      width: \"18%\",\n      render: (row) => (\n        <span className={columnClass}>{row.purchase?.code}</span>\n      ),\n    },\n\n    {\n      title: \"Vehicle Type\",\n      width: \"15%\",\n      render: (row) => (\n        <span className={columnClass}>{row.vehicle?.version?.name}</span>\n      ),\n    },\n    {\n      title: \"Employee Name\",\n      width: \"15%\",\n      render: (row) => (\n        <span className={columnClass}>{row.customer?.firstname}</span>\n      ),\n    },\n    {\n      title: \"Counter Name\",\n      width: \"15%\",\n      render: (row) => <span className={columnClass}>{row.counter?.name}</span>,\n    },\n\n    {\n      title: \"Action\",\n      key: \"action\",\n      width: \"10%\",\n      fixed: isMobile ? null : \"right\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {row.editable == true &&  (\n            <>\n              {props.userAccessList?.indexOf(\"Sale.change_sale\") !== -1 && (\n                <Link to={`/pages/add-sales/` + row.id}>\n                  <i\n                    className=\"ri-edit-box-line hp-mr-2 \"\n                    style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n                  ></i>\n                </Link>\n              )}\n              {/* {props.userAccessList?.indexOf(\"Sale.delete_sale\") !== -1 && (\n                <Popconfirm\n                placement=\"topRight\"\n                title=\"Are you sure to delete this Record?\"\n                onConfirm={() => props.vechicleSaleDelete(record.id)}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                className=\"hp-ml-8\"\n                icon={\n                  <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n                }\n              >\n                <i\n                  className=\"ri-delete-bin-2-line \"\n                  style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n                ></i>\n                </Popconfirm>\n              )} */}\n            </>\n          )}\n        </Space>\n      ),\n    },\n  ];\n\n  const data = vehiclesList.map((row, key) => ({\n    ...row,\n    index: (props.vehicleSaleParams.page - 1) * props.vehicleSaleParams.page_size + (key + 1),\n  }));\n\n  return (\n      <Row className=\"hp-mb-12\">\n        <Col span={24}>\n          <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n            <Table\n              columns={columns}\n              rowClassName=\"hp-btn-bg-color-none\"\n              dataSource={data}\n              scroll={{ x: 1300 }}\n              pagination={false}\n              size=\"middle\"\n            />\n          </Spin>\n        </Col>\n      </Row>\n  );\n}\nfunction mapStateToProps({ counterSales, system }) {\n  return {\n    loading: counterSales.loading,\n    vehicleSaleParams: counterSales.vehicleSaleParams,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  vechicleSaleDelete\n})(VehicleList);","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Button,\n  Drawer,\n  Space,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport moment, { min } from \"moment\";\nimport * as Person from \"../../../../../store/Masters/Person/personSlice\";\n\nimport {\n  isDrawerVisible,\n  FilterInputChangeValue,\n  getVehiclesList,\n  setVehicleSaleParams,\n  vehicleSaleActiveTab,\n} from \"../../../../../store/sideMenu/vehicleCounterSales/vehicleCounterSalesSlice\";\nimport {\n  getMiniCounters,\n  getMiniClusters,\n  getMiniDivisions,\n  getMiniZones,\n  getMiniVehicles,\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n} from \"../../../../../store/mini/miniSlice\";\nimport AddVehicles from \"../../../MastersDashboard/vehicles/addVehicles\";\nimport {\n  getVehicles,\n  SetVehiclesParams,\n} from \"../../../../../store/Masters/Vehicles/vehiclesSlice\";\nvar date = new Date(),\n  y = date.getFullYear(),\n  m = date.getMonth();\n\nconst filter = (props) => {\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    props.getMiniZones();\n    props.getMiniCounters();\n    props.getMiniClusters();\n    props.getMiniDivisions();\n    props.getMiniVehicles();\n  }, []);\n  const purchaseTypeList = [\n    { id: 1, name: \"Customer\" },\n    { id: 2, name: \"Dealer\" },\n    { id: 3, name: \"Exchange\" },\n    { id: 4, name: \"Seizing\" },\n    { id: 5, name: \"Return\" },\n  ];\n\n  const approvalStatusList = [\n    { id: 1, name: \"Pending\" },\n    { id: 2, name: \"Approved\" },\n    { id: 3, name: \"Rejected\" },\n  ];\n  const onFinish = () => {\n    props.setVehicleSaleParams({\n      ...props.vehicleSaleParams,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n      saletype: props.activeTab,\n    });\n    props.getVehiclesList({\n      ...props.vehicleSaleParams,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n      saletype: props.activeTab,\n    });\n    props.isDrawerVisible(false);\n  };\n\n  function clearFilter() {\n    props.setVehicleSaleParams({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n      saletype: props.activeTab\n    });\n    props.getVehiclesList({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n      saletype: props.activeTab\n    });\n    props.getMiniZones();\n    props.getMiniCounters();\n    props.getMiniClusters();\n    props.getMiniDivisions();\n  }\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.vehicleSaleParams?.start_date,\n      end_date: props.vehicleSaleParams?.end_date,\n      approvalstatus: props.vehicleSaleParams?.approvalstatus,\n      vehicle: props.vehicleSaleParams?.vehicle,\n      counter__zone: props.vehicleSaleParams?.counter__zone,\n      counter__division: props.vehicleSaleParams?.counter__division,\n      counter__cluster: props.vehicleSaleParams?.counter__cluster,\n      counter: props.vehicleSaleParams?.counter,\n    });\n  }, [props.vehicleSaleParams]);\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Drawer\n          title=\"Filters\"\n          width={420}\n          className=\"hp-drawer-mobile\"\n          onClose={() => {\n            props.isDrawerVisible(false);\n          }}\n          placement=\"right\"\n          visible={props.drawer}\n          bodyStyle={{\n            paddingBottom: 10,\n          }}\n        >\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              <Col span={12}>\n                <Form.Item label=\"From Date\" name=\"start_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: new Date(),\n                    })}\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"start_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                      if (date == null) {\n                        props.FilterInputChangeValue({\n                          key: \"end_date\",\n                          value: \"\",\n                        });\n                      }\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"To Date\" name=\"end_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment().format(\"YYYY-MM-DD\"),\n                      startDate: moment(\n                        props.vehicleSaleParams?.start_date\n                      ).format(\"YYYY-MM-DD\"),\n                    })}\n                    disabled={\n                      props.vehicleSaleParams.start_date == null ||\n                      props.vehicleSaleParams.start_date == \"\"\n                        ? true\n                        : false\n                    }\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"end_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Approval Status\" name=\"approvalstatus\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Approval Status\"\n                    optionFilterProp=\"approvalstatus\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"approvalstatus\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.vehicleSaleParams.approvalstatus == null\n                        ? \"\"\n                        : props.vehicleSaleParams?.approvalstatus\n                    }\n                  >\n                    {approvalStatusList.map((approvals, index) => {\n                      return (\n                        <Option key={index} value={approvals.id}>\n                          {approvals.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Vehicle\" name=\"vehicle\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Vehicle\"\n                    optionFilterProp=\"vehicle_id\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onSearch={(value) => {\n                      props.SetVehiclesParams({\n                        ...props.vehiclesParams,\n                        page: 1,\n                        search: value,\n                      });\n                      props.getVehicles({\n                        ...props.vehiclesParams,\n                        page: 1,\n                        search: value,\n                      });\n                    }}\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"vehicle\",\n                        value: value,\n                      });\n                    }}\n                    onPopupScroll={() => {\n                      if (\n                        props.vehiclesParams.page <\n                        props.vehiclesParams.no_of_pages\n                      ) {\n                        props.SetVehiclesParams({\n                          ...props.vehiclesParams,\n                          page: props.vehiclesParams.page + 1,\n                        });\n                        props.getVehicles({\n                          ...props.vehiclesParams,\n                          page: props.vehiclesParams.page + 1,\n                        });\n                      }\n                    }}\n                    value={\n                      props.vehicleSaleParams.vehicle_id == null\n                        ? \"\"\n                        : props.vehicleSaleParams?.vehicle_id\n                    }\n                  >\n                    {props.miniVehiclesList.map((vehicle, index) => {\n                      return (\n                        <Option key={index} value={vehicle.id}>\n                          {vehicle.vehicleno}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Zone :\" name=\"counter__zone\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Zone\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniDivisions({ zone: value });\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.FilterInputChangeValue({\n                        key: \"counter__zone\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.vehicleSaleParams.zone_id == null\n                        ? \"\"\n                        : props.vehicleSaleParams?.zone_id\n                    }\n                  >\n                    {props.miniZonesList.map((zone, index) => {\n                      return (\n                        <Option key={index} value={zone.id}>\n                          {zone.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Division:\" name=\"counter__division\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Division\"\n                    optionFilterProp=\"division\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniClusters({ division: value });\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.FilterInputChangeValue({\n                        key: \"counter__division\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.vehicleSaleParams.division_id == null\n                        ? \"\"\n                        : props.vehicleSaleParams?.division_id\n                    }\n                  >\n                    {props.miniDivisionsList.map((division, index) => {\n                      return (\n                        <Option key={index} value={division.id}>\n                          {division.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Cluster:\" name=\"counter__cluster\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Cluster\"\n                    optionFilterProp=\"cluster\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniCounters({ cluster: value });\n                      props.getMiniCountersClearData({});\n                      props.FilterInputChangeValue({\n                        key: \"counter__cluster\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.vehicleSaleParams.cluster_id == null\n                        ? \"\"\n                        : props.vehicleSaleParams?.cluster_id\n                    }\n                  >\n                    {props.miniClustersList.map((cluster, index) => {\n                      return (\n                        <Option key={index} value={cluster.id}>\n                          {cluster.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Counter\" name=\"counter\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Counter\"\n                    optionFilterProp=\"counter\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"counter\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.vehicleSaleParams.counter_id == null\n                        ? \"\"\n                        : props.vehicleSaleParams?.counter_id\n                    }\n                  >\n                    {props.miniCountersList.map((counter, index) => {\n                      return (\n                        <Option key={index} value={counter.id}>\n                          {counter.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Row gutter={[12, 12]}>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    clearFilter();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n              </Col>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Apply\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n          <AddVehicles />\n        </Drawer>\n      </Col>\n    </Row>\n  );\n};\n\nfunction mapStateToProps({ counterSales, mini, vehicles }) {\n  return {\n    drawer: counterSales.drawer,\n    vehicleSaleParams: counterSales.vehicleSaleParams,\n    activeTab: counterSales.activeTab,\n    miniCountersList: mini.miniCountersList,\n    miniClustersList: mini.miniClustersList,\n    miniDivisionsList: mini.miniDivisionsList,\n    miniZonesList: mini.miniZonesList,\n    miniVehiclesList: mini.miniVehiclesList,\n    vehiclesParams: vehicles.vehiclesParams,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  isDrawerVisible,\n  getMiniCounters,\n  getMiniClusters,\n  getMiniDivisions,\n  getMiniZones,\n  FilterInputChangeValue,\n  getVehiclesList,\n  setVehicleSaleParams,\n  getMiniVehicles,\n  SetVehiclesParams,\n  getVehicles,\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n  vehicleSaleActiveTab,\n})(filter);\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  List,\n  Empty,\n  Button,\n  Input,\n  Card,\n  Tabs,\n  Pagination,\n  Spin,\n  Popconfirm,\n} from \"antd\";\nimport Swal from \"sweetalert2\";\nimport EmptyImage from \"../../../../assets/images/app/empty-list.svg\";\nimport {\n  FilterOutlined,\n  UploadOutlined,\n  PlusOutlined,\n  OrderedListOutlined,\n  AppstoreOutlined,\n} from \"@ant-design/icons\";\nimport { getReportList } from \"../../../../store/reports/reportsSlice\";\nimport PageTitle from \"../../../../layout/components/content/page-title\";\nimport VehicleGridList from \"./VehicleGridList\";\nimport VehicleList from \"./VehicleList\";\nimport {\n  getVehiclesList,\n  vechicleSaleDelete,\n  isDrawerVisible,\n  setVehicleSaleParams,\n  vehicleSaleActiveTab,\n  clearVehiclesList,\n  clearVehiclesParams\n} from \"../../../../store/sideMenu/vehicleCounterSales/vehicleCounterSalesSlice\";\nimport Filter from \"./Filters/Filter\";\nimport { isMobile } from \"react-device-detect\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\n\nfunction VehicleCounterSales(props) {\n  const { Search } = Input;\n  const { TabPane } = Tabs;\n  useEffect(() => {\n    props.getVehiclesList({\n      ...props.vehicleSaleParams,\n      saletype: 1,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n  }, []);\n\n  const [productListToggle, setProductListToggle] = useState(false);\n  const salesTypeList = [\n    { id: \"1\", name: \"Direct Sale\" },\n    { id: \"2\", name: \"Finance Sale\" },\n    { id: \"3\", name: \"OVF Sale\" },\n  ];\n  const onChange = (key) => {\n    props.vehicleSaleActiveTab(key);\n    props.getVehiclesList({\n      saletype: key,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.setVehicleSaleParams({\n      saletype: key,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n  };\n\n\n  function onPageChange(page, pageSize) {\n    props.clearVehiclesList();\n    props.clearVehiclesParams();\n    props.getVehiclesList({\n      ...props.vehicleSaleParams,\n        saletype: props.activeTab,\n        page_size: pageSize,\n        page: page == 0 ? 1 : page,\n    });\n    props.setVehicleSaleParams({\n      ...props.vehicleSaleParams,\n      saletype: props.activeTab,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  function onSearch(val) {\n    props.getVehiclesList({\n      ...props.vehicleSaleParams,\n      page: 1,\n      search: val,\n      saletype: props.activeTab,\n    });\n    props.setVehicleSaleParams({\n      ...props.vehicleSaleParams,\n      page: 1,\n      search: val,\n      saletype: props.activeTab,\n    });\n  }\n\n  // function deleteRecord(record) {\n  //   Swal.fire({\n  //     title: \"Are you sure?\",\n  //     text: \"You won't be able to revert this!\",\n  //     icon: \"warning\",\n  //     showCancelButton: true,\n  //     confirmButtonColor: \"#3085d6\",\n  //     cancelButtonColor: \"#d33\",\n  //     confirmButtonText: \"Yes, delete it!\",\n  //   }).then((result) => {\n  //     if (result.isConfirmed) {\n  //       props.vechicleSaleDelete(record);\n  //     }\n  //   });\n  // }\n\n  // Export Functionality\n\n  function exportData() {\n    // var { file_format, ...params } = props.reportParamsData;\n    var objData = {\n      file_format: 0,\n      model_name: \"Sale\",\n    };\n\n    props.getReportList({\n      objData,\n      ParamsData: {\n        ...props.vehicleSaleParams,\n        start_date:\n          props.vehicleSaleParams.start_date != null &&\n          props.vehicleSaleParams.start_date != \"\"\n            ? moment(props.vehicleSaleParams.start_date).format(\"YYYY-MM-DD\")\n            : \"\",\n        end_date:\n          props.vehicleSaleParams.end_date != null &&\n          props.vehicleSaleParams.end_date != \"\"\n            ? moment(props.vehicleSaleParams.end_date)\n                .add(1, \"days\")\n                .format(\"YYYY-MM-DD\")\n            : \"\",\n      },\n    });\n  }\n\n  return (\n    <Row gutter={[12, 12]}>\n      <PageTitle pageTitle=\"Vehicle Sales\" goBack={false} />\n      <Col span={24}>\n        <Row gutter={[12, 12]} className=\"hp-ecommerce-app-header\">\n          {/* <Col md={10} xs={24} className=\"hp-ecommerce-app-header-search \"> */}\n          <Col span={24} xs={24} sm={24} md={\n              props.userAccessList?.indexOf(\"Sale.export_sale\") !== -1\n                ? 12\n                : 15\n            }\n            className=\"hp-ecommerce-app-header-search \"\n          >\n            <Search\n              placeholder=\"Search for date, doc, number, customer, counter, vehicle\"\n              allowClear\n              value={\n                props.vehicleSaleParams.search == \"\" ||\n                props.vehicleSaleParams.search == null\n                  ? \"\"\n                  : props.vehicleSaleParams.search\n              }\n              onChange={(e) => {\n                if (e.target.value == \"\") {\n                  props.getVehiclesList({\n                    ...props.vehicleSaleParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                  props.setVehicleSaleParams({\n                    ...props.vehicleSaleParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                } else {\n                  props.setVehicleSaleParams({\n                    ...props.vehicleSaleParams,\n\n                    search: e.target.value,\n                  });\n                }\n              }}\n              onSearch={(value) => {\n                onSearch(value);\n              }}\n            />\n          </Col>\n\n          <Col span={24} xs={4} sm={4}  md={3}>\n            <Button\n              onClick={() => {\n                props.isDrawerVisible(true);\n              }}\n              className=\"hp-w-100 hp-p-10\"\n              icon={<FilterOutlined className=\"hp-mr-10\" />}\n              \n            >\n              {!isMobile && \"Filter\"}\n            </Button>\n          </Col>\n\n          {props.userAccessList?.indexOf(\"Sale.export_sale\") !== -1 && (\n            <Col span={24} xs={4} sm={4}  md={3}>\n              <Popconfirm\n                placement=\"topRight\"\n                title=\"Are you sure to export this Record?\"\n                onConfirm={() => exportData()}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                icon={\n                  <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n                }>\n                <Button\n                  className=\"hp-w-100 hp-p-10\"\n                  icon={<UploadOutlined className=\"hp-mr-10\" />}>\n                {!isMobile && \"Export\"}\n                </Button>\n              </Popconfirm>\n            </Col>\n          )}\n\n          {props.userAccessList?.indexOf(\"Sale.add_sale\") !== -1 && (\n            <Col span={24} xs={4} sm={4} md={4}>\n              <Link to=\"/pages/add-sales/0\">\n                <Button\n                  className=\"hp-w-100 hp-p-10\"\n                  icon={<PlusOutlined className=\"hp-mr-10\" />}\n                  \n                >\n                  {!isMobile && \"Add Sales\" }\n                </Button>\n              </Link>\n            </Col>\n          )}\n\n          {/* <Col md={4} xs={6}>\n            <Link to=\"/pages/sales-quatation-list\">\n              <Button\n                className=\"hp-w-100 hp-p-12\"\n                icon={<PlusOutlined className=\"hp-mr-10\" />}\n                size=\"small\"\n              >\n                Sale Quotation\n              </Button>\n            </Link>\n          </Col> */}\n\n          <Col span={24} xs={6} sm={5} md={1}>\n            <Button\n              className=\"hp-w-100 hp-p-12\"\n              icon={<AppstoreOutlined />}\n              onClick={() => setProductListToggle(false)}\n            ></Button>\n          </Col>\n\n          <Col span={24} xs={6} sm={5} md={1}>\n            <Button\n              icon={<OrderedListOutlined />}\n              onClick={() => setProductListToggle(true)}\n              className=\"hp-w-100 hp-p-12\"\n            ></Button>\n          </Col>\n        </Row>\n      </Col>\n\n      <Col\n        span={24}\n        xs={24}\n        className=\"hp-purchase-app-content\"\n        productListToggle={productListToggle}\n        setProductListToggle={setProductListToggle}\n      >\n        <Card>\n          <Tabs defaultActiveKey=\"1\" type=\"card\" onChange={onChange}>\n            {salesTypeList.map((salesType) => {\n              return (\n                <TabPane tab={salesType.name} key={salesType.id}>\n                  <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                    {props.vehiclesList.length !== 0 ? (\n                      <>\n                        {!productListToggle ? (\n                          <>\n                            <List\n                              dataSource={props.vehiclesList}\n                              renderItem={(value) => (\n                                <VehicleGridList value={value} />\n                              )}\n                            />{\" \"}\n                            <Pagination\n                              size=\"small\"\n                              total={props.listCount}\n                              showTotal={showTotal}\n                              current={props.vehicleSaleParams?.page}\n                              pageSize={props.vehicleSaleParams?.page_size}\n                              showSizeChanger\n                              onChange={onPageChange}\n                              className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n                            />\n                          </>\n                        ) : (\n                          <>\n                            <VehicleList\n                              vehiclesList={props.vehiclesList}\n                              deleteSale={props.vechicleSaleDelete}\n                            />\n                            <Pagination\n                              size=\"small\"\n                              total={props.listCount}\n                              showTotal={showTotal}\n                              current={props.vehicleSaleParams?.page}\n                              pageSize={props.vehicleSaleParams?.page_size}\n                              showSizeChanger\n                              onChange={onPageChange}\n                              className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n                            />\n                          </>\n                        )}\n                      </>\n                    ) : (\n                      <Card>\n                        <Empty\n                          className=\"hp-m-32\"\n                          image={EmptyImage}\n                          imageStyle={{\n                            height: 160,\n                          }}\n                          description={<h5>Your Vehicle list is empty</h5>}\n                        ></Empty>\n                      </Card>\n                    )}\n                  </Spin>\n                </TabPane>\n              );\n            })}\n          </Tabs>\n        </Card>\n        <Filter />\n      </Col>\n    </Row>\n  );\n}\nfunction mapStateToProps({ counterSales, system }) {\n  return {\n    vehiclesList: counterSales.vehiclesList,\n    noofpages: counterSales.noofpages,\n    listCount: counterSales.listCount,\n    loading: counterSales.loading,\n    vehicleSaleParams: counterSales.vehicleSaleParams,\n    activeTab: counterSales.activeTab,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getVehiclesList,\n  vechicleSaleDelete,\n  isDrawerVisible,\n  setVehicleSaleParams,\n  vehicleSaleActiveTab,\n  getReportList,\n  clearVehiclesList,\n  clearVehiclesParams\n})(VehicleCounterSales);\n"],"sourceRoot":""}