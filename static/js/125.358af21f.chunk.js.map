{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/pages/MastersDashboard/zones/addZones.jsx","view/pages/MastersDashboard/zones/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","zones","mini","rowdata","model","miniStatesList","miniFirmList","zoneAdd","isModelVisible","InputChangeValue","getMiniFirm","getMiniStates","Form","useForm","form","useEffect","console","log","handleResetInputValues","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","onSearch","value","setFieldsValue","name","firm_id","state_id","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","handleAdd","handleUpdate","Item","label","rules","required","message","hasFeedback","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","onChange","key","map","firm","index","Option","style","e","target","system","zoneslist","noofpages","listCount","zoneParams","loading","userAccessList","getZones","zonesEdit","zoneDelete","SetZoneParams","page","search","page_size","columnClass","columns","dataIndex","filterSearch","render","row","filterMode","state","record","indexOf","cursor","color","placement","onConfirm","okText","cancelText","data","Search","Input","gutter","isModalVisible","xs","sm","md","allowClear","val","tip","spinning","delay","dataSource","scroll","x","pagination","current","pageSize","total","showTotal","showSizeChanger"],"mappings":"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","file":"static/js/125.358af21f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport { RiCloseFill } from \"react-icons/ri\";\r\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\r\nimport {\r\n  zoneAdd,\r\n  isModelVisible,\r\n  InputChangeValue,\r\n} from \"../../../../store/Masters/Zones/zonesSlice\";\r\n\r\nimport { getMiniFirm, getMiniStates } from \"../../../../store/mini/miniSlice\";\r\n\r\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\r\n\r\nconst AddZones = (props) => {\r\n  const [form] = Form.useForm();\r\n  function ChangeHandeler(e) {\r\n    props.InputChangeValue({\r\n      key: e.target.name,\r\n      value: e.target.value,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.getMiniFirm();\r\n    props.getMiniStates();\r\n  }, []);\r\n\r\n  console.log(\"props.rowdata\", props.rowdata);\r\n  // Adds New Country\r\n  const handleAdd = () => {\r\n    const obj = {\r\n      id: 0,\r\n      name: props.rowdata?.name,\r\n      state_id: props.rowdata.state_id,\r\n      firm_id: props.rowdata.firm_id,\r\n    };\r\n    if (obj.name != null || obj.name == \"\") {\r\n      props.zoneAdd(obj);\r\n    }\r\n  };\r\n  // Updates Country in Store\r\n  const handleUpdate = () => {\r\n    const obj = {\r\n      id: props.rowdata?.id,\r\n      name: props.rowdata?.name,\r\n      state_id: props.rowdata.state_id,\r\n      firm_id: props.rowdata.firm_id,\r\n    };\r\n    props.zoneAdd(obj);\r\n  };\r\n\r\n  // Reset Input Values on Close\r\n  const handleResetInputValues = () => {\r\n    props.isModelVisible(false);\r\n  };\r\n\r\n  const FooterAddOrUpdate = () => {\r\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            onClick={() => {\r\n              form.submit();\r\n            }}\r\n            type=\"primary\"\r\n            block\r\n          >\r\n            Add\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              form.submit();\r\n            }}\r\n            block\r\n          >\r\n            Update\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const FooterCancel = () => {\r\n    return (\r\n      <Fragment>\r\n        <Button\r\n          onClick={() => {\r\n            handleResetInputValues();\r\n          }}\r\n          type=\"primary\"\r\n          block\r\n          ghost\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const modalTitle = (\r\n    <h5 className=\"modal-title\">\r\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\r\n      Zone\r\n    </h5>\r\n  );\r\n\r\n  const onSearch = (value) => {\r\n    console.log('search:', value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      name: props.rowdata.name,\r\n      firm_id: props.rowdata.firm_id,\r\n      state_id: props.rowdata.state_id,\r\n    })\r\n  }, [props.rowdata]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={props.model}\r\n      title={modalTitle}\r\n      onCancel={() => {\r\n        handleResetInputValues();\r\n        form.resetFields();\r\n        props.isModelVisible(false);\r\n      }}\r\n      className=\"hp-modal-p-24\"\r\n      footer={\r\n        <Row justify=\"center\">\r\n          <Col span={12} className=\"hp-pr-4\">\r\n            <FooterCancel />\r\n          </Col>\r\n\r\n          <Col span={12} className=\"hp-pl-4\">\r\n            <FooterAddOrUpdate />\r\n          </Col>\r\n        </Row>\r\n      }\r\n      centered\r\n      closeIcon={\r\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n      }\r\n      width={416}\r\n    >\r\n      <Form layout=\"vertical\"\r\n        form={form}\r\n        autoComplete=\"off\"\r\n        onFinish={() => {\r\n          if (props.rowdata.id == null) {\r\n            handleAdd();\r\n          }\r\n          else {\r\n            handleUpdate();\r\n          }\r\n        }}>\r\n        <Form.Item label=\"Firm Name:\"\r\n          name=\"firm_id\"\r\n          rules={[\r\n            { required: true, message: \"Please select your Firm Name!\" },\r\n          ]}\r\n          hasFeedback>\r\n          <Select\r\n            showSearch\r\n            placeholder=\"Select Firm\"\r\n            optionFilterProp=\"children\"\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\r\n            onChange={(value) => {\r\n              props.InputChangeValue({\r\n                key: \"firm_id\",\r\n                value: value,\r\n              });\r\n            }}\r\n            value={props.rowdata.firm_id == null ? \"\" : props.rowdata?.firm_id}\r\n          >\r\n            {props.miniFirmList.map((firm, index) => {\r\n              return (\r\n                <Option key={index} value={firm.id}>\r\n                  {firm.name}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"State :\"\r\n          name=\"state_id\"\r\n          rules={[\r\n            { required: true, message: \"Please select your State Name!\" },\r\n          ]}\r\n          hasFeedback>\r\n          <Select\r\n            showSearch\r\n            placeholder=\"Select state\"\r\n            optionFilterProp=\"children\"\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\r\n            onChange={(value) => {\r\n              props.InputChangeValue({\r\n                key: \"state_id\",\r\n                value: value,\r\n              });\r\n            }}\r\n            value={\r\n              props.rowdata.state_id == null ? \"\" : props.rowdata?.state_id\r\n            }\r\n          >\r\n            {props.miniStatesList.map((firm, index) => {\r\n              return (\r\n                <Option key={index} value={firm.id}>\r\n                  {firm.name}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Zone Name :\"\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: \"Please input your Zone Name!\" },\r\n          ]}\r\n          hasFeedback>\r\n          <Input\r\n            id=\"Zone\"\r\n            name=\"name\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Zone Name\"\r\n            value={props.rowdata?.name}\r\n            onChange={ChangeHandeler}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ zones, mini }) {\r\n  return {\r\n    rowdata: zones.rowdata,\r\n    model: zones.model,\r\n    miniStatesList: mini.miniStatesList,\r\n    miniFirmList: mini.miniFirmList,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  zoneAdd,\r\n  isModelVisible,\r\n  InputChangeValue,\r\n  getMiniFirm,\r\n  getMiniStates,\r\n})(AddZones);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Col, Input, Card, Pagination, Spin, Popconfirm } from \"antd\";\r\nimport { Table, Space } from \"antd\";\r\nimport { RiErrorWarningLine } from \"react-icons/ri\";\r\n\r\nimport { Search } from \"react-iconly\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\r\nimport AddZones from \"./addZones\";\r\n\r\nimport {\r\n  getZones,\r\n  zonesEdit,\r\n  zoneDelete,\r\n  SetZoneParams,\r\n  isModelVisible,\r\n} from \"../../../../store/Masters/Zones/zonesSlice\";\r\n\r\nfunction Zones(props) {\r\n  useEffect(() => {\r\n    props.getZones({ page: 1, search: \"\", page_size: 10 });\r\n  }, []);\r\n\r\n  console.log(\"loding\", props.loading);\r\n\r\n  const columnClass =\r\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\r\n  const columns = [\r\n    {\r\n      title: \"S.No\",\r\n      dataIndex: \"index\",\r\n      width: \"5%\",\r\n      // sorter: (a, b) => a.index - b.index,\r\n    },\r\n    {\r\n      title: \"Code\",\r\n      dataIndex: \"code\",\r\n      filterSearch: true,\r\n      width: \"15%\",\r\n    },\r\n    {\r\n      title: \"Zone Name\",\r\n      render: (row) => (\r\n        <span className={columnClass}>{row.name}</span>\r\n      ),\r\n      filterMode: \"tree\",\r\n      filterSearch: true,\r\n      // sorter: (a, b) => a.name.length - b.name.length,\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"State Name\",\r\n      filterMode: \"tree\",\r\n      filterSearch: true,\r\n      // sorter: (a, b) => a.name.length - b.name.length,\r\n      width: \"20%\",\r\n      render: (row) => <span className={columnClass}>{row.state?.name}</span>,\r\n    },\r\n    {\r\n      title: \"Firm Name\",\r\n      filterMode: \"tree\",\r\n      filterSearch: true,\r\n      // sorter: (a, b) => a.name.length - b.name.length,\r\n      width: \"20%\",\r\n      render: (row) => <span className={columnClass}>{row.firm?.name}</span>,\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"action\",\r\n      width: \"10%\",\r\n      render: (row, record) => (\r\n        <Space size=\"middle\">\r\n          {props.userAccessList?.indexOf(\"Masters.change_zone\") !== -1 && (\r\n          <i\r\n            className=\"ri-edit-box-line hp-mr-2 \"\r\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\r\n            onClick={() => {\r\n              props.zonesEdit(row);\r\n              props.isModelVisible(true);\r\n            }}\r\n          ></i>\r\n          )}\r\n\r\n        {props.userAccessList?.indexOf(\"Masters.delete_zone\") !== -1 && (\r\n          <Popconfirm\r\n            placement=\"topRight\"\r\n            title=\"Are you sure to delete this Record?\"\r\n            onConfirm={() => props.zoneDelete(record.id)}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n            className=\"hp-ml-8\"\r\n            icon={\r\n              <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\r\n            }\r\n          >\r\n            <i\r\n              className=\"ri-delete-bin-2-line \"\r\n              style={{ cursor: \"pointer\", color: \"#ff0000\" }}\r\n            ></i>\r\n          </Popconfirm>\r\n        )}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const data = props.zoneslist.map((row, key) => ({\r\n    ...row,\r\n    index: (props.zoneParams.page - 1) * props.zoneParams.page_size + key + 1,\r\n  }));\r\n\r\n  function onPageChange(page, pageSize) {\r\n    props.SetZoneParams({\r\n      ...props.zoneParams,\r\n      page_size: pageSize,\r\n      page: page == 0 ? 1 : page,\r\n    });\r\n    props.getZones({\r\n      ...props.zoneParams,\r\n      page_size: pageSize,\r\n      page: page == 0 ? 1 : page,\r\n    });\r\n  }\r\n\r\n  function onSearch(val) {\r\n    props.SetZoneParams({ ...props.zoneParams, search: val });\r\n    props.getZones({ ...props.zoneParams, search: val });\r\n  }\r\n  function showTotal(total) {\r\n    return \"Total \" + total + \" items\";\r\n  }\r\n  const { Search } = Input;\r\n  return (\r\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\r\n      <MasterPageTitle\r\n        pageTitle=\"Zone Master\"\r\n        addModelTile={\r\n          props.userAccessList?.indexOf(\"Masters.add_zone\") !== -1 &&\r\n          \"Add Zone\"\r\n        }\r\n        goBack={true}\r\n        setIsModalVisible={props.isModelVisible}\r\n        isModalVisible={props.model}\r\n      />\r\n\r\n      <Col span={24}>\r\n        <Card>\r\n          <Row className=\"hp-mb-12\">\r\n            <Col span={12} xs={24} sm={24} md={14} className=\"hp-mb-16\">\r\n              <Search\r\n                placeholder=\"Search...\"\r\n                allowClear\r\n                onChange={(e) => {\r\n                  if (e.target.value == \"\") {\r\n                    props.getZones({\r\n                      ...props.zoneParams,\r\n                      page: 1,\r\n                      search: \"\",\r\n                    });\r\n                    props.SetZoneParams({\r\n                      ...props.zoneParams,\r\n                      page: 1,\r\n                      search: \"\",\r\n                    });\r\n                  }\r\n                }}\r\n                onSearch={(value) => {\r\n                  onSearch(value);\r\n                }}\r\n              />\r\n            </Col>\r\n\r\n            <Col span={24}>\r\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={data}\r\n                  scroll={{ x: 500 }}\r\n                  pagination={false}\r\n                  size=\"middle\"\r\n                />\r\n              </Spin>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Pagination\r\n                size=\"small\"\r\n                current={props.zoneParams?.page}\r\n                pageSize={props.zoneParams?.page_size}\r\n                total={props.listCount}\r\n                showTotal={showTotal}\r\n                showSizeChanger\r\n                onChange={onPageChange}\r\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </Col>\r\n      <AddZones />\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ zones, system }) {\r\n  return {\r\n    zoneslist: zones.zoneslist,\r\n    noofpages: zones.noofpages,\r\n    listCount: zones.listCount,\r\n    zoneParams: zones.zoneParams,\r\n    loading: zones.loading,\r\n    userAccessList: system.userAccessList,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getZones,\r\n  zonesEdit,\r\n  zoneDelete,\r\n  isModelVisible,\r\n  SetZoneParams,\r\n})(Zones);\r\n"],"sourceRoot":""}