{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/pages/MastersDashboard/clusters/addClusters.jsx","view/pages/MastersDashboard/clusters/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","clusters","mini","rowdata","model","miniDivisionsList","clusterAdd","isModelVisible","InputChangeValue","getMiniClusters","getMiniDivisions","Form","useForm","form","useEffect","handleResetInputValues","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","setFieldsValue","name","division_id","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","handleAdd","handleUpdate","Item","label","rules","required","message","hasFeedback","showSearch","placeholder","optionFilterProp","onSearch","value","console","log","filterOption","input","option","children","toLowerCase","includes","onChange","key","map","division","index","Option","style","e","target","system","clusterslist","noofpages","listCount","clustersParams","loading","userAccessList","getClusters","clustersEdit","clusterDelete","SetClustersParams","page","search","page_size","Search","Input","columnClass","columns","dataIndex","filterSearch","render","row","filterMode","record","indexOf","cursor","color","placement","onConfirm","okText","cancelText","data","gutter","isModalVisible","xs","sm","md","allowClear","val","tip","spinning","delay","dataSource","scroll","x","pagination","current","pageSize","total","showTotal","showSizeChanger"],"mappings":"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","file":"static/js/107.b08eaca3.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  clusterAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Clusters/clustersSlice\";\nimport { getMiniClusters, getMiniDivisions } from \"../../../../store/mini/miniSlice\";\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddClusters = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniClusters();\n    props.getMiniDivisions();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      division_id: props.rowdata.division_id,\n      // firm_id: props.rowdata.firm_id,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.clusterAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      division_id: props.rowdata.division_id,\n      // firm_id: props.rowdata.firm_id,\n    };\n    props.clusterAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Cluster\n    </h5>\n  );\n\n  const onSearch = (value) => {\n    console.log('search:', value);\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.rowdata.name,\n      division_id: props.rowdata.division_id\n    })\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Division Name:\"\n          name=\"division_id\"\n          rules={[\n            { required: true, message: \"Please select your Division Name!\" },\n          ]}\n          hasFeedback>\n          <Select\n            showSearch\n            placeholder=\"Select  Division\"\n            optionFilterProp=\"children\"\n            onSearch={onSearch}\n            filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\n            onChange={(value) => {\n              props.InputChangeValue({\n                key: \"division_id\",\n                value: value,\n              });\n            }}\n            value={\n              props.rowdata.division_id == null ? \"\" : props.rowdata?.division_id\n            }\n          >\n            {props.miniDivisionsList.map((division, index) => {\n              return (\n                <Option key={index} value={division.id}>\n                  {division.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Cluster Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Cluster Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Zone\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Cluster Name\"\n            value={props.rowdata?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ clusters, mini }) {\n  return {\n    rowdata: clusters.rowdata,\n    model: clusters.model,\n    miniDivisionsList: mini.miniDivisionsList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  clusterAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniClusters,\n  getMiniDivisions,\n})(AddClusters);\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Input, Card, Pagination, Spin, Popconfirm } from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport {\n  getClusters,\n  clustersEdit,\n  clusterDelete,\n  isModelVisible,\n  SetClustersParams,\n} from \"../../../../store/Masters/Clusters/clustersSlice\";\nimport AddClusters from \"./addClusters\";\n\nfunction Clusters(props) {\n  useEffect(() => {\n    props.getClusters({ page: 1, search: \"\", page_size: 10 });\n  }, []);\n  const { Search } = Input;\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"5%\",\n      // sorter: (a, b) => a.index - b.index,\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: \"35%\",\n    },\n    {\n      title: \"Cluster Name\",\n      render: (row) => <span className={columnClass}>{row.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"40%\",\n    },\n    {\n      title: \"Division Name\",\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: \"20%\",\n      render: (row) => <span className={columnClass}>{row.division?.name}</span>,\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: \"10%\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {props.userAccessList?.indexOf(\"Masters.change_cluster\") !== -1 && (\n          <i\n            className=\"ri-edit-box-line hp-mr-2 \"\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n            onClick={() => {\n              props.clustersEdit(row);\n              props.isModelVisible(true);\n            }}\n          ></i>\n          )}\n\n        {props.userAccessList?.indexOf(\"Masters.delete_cluster\") !== -1 && (\n          <Popconfirm\n            placement=\"topRight\"\n            title=\"Are you sure to delete this Record?\"\n            onConfirm={() => props.clusterDelete(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            className=\"hp-ml-8\"\n            icon={\n              <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n            }\n          >\n            <i\n              className=\"ri-delete-bin-2-line \"\n              style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n            ></i>\n          </Popconfirm>\n        )}\n        </Space>\n      ),\n    },\n  ];\n\n  const data = props.clusterslist.map((row, key) => ({\n    ...row,\n    index:\n      (props.clustersParams.page - 1) * props.clustersParams.page_size +\n      key +\n      1,\n  }));\n\n  function onPageChange(page, pageSize) {\n    props.SetClustersParams({\n      ...props.clustersParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getClusters({\n      ...props.clustersParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.SetClustersParams({ ...props.clustersParams, search: val });\n    props.getClusters({ ...props.clustersParams, search: val });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Clusters Master\"\n        addModelTile={\n          props.userAccessList?.indexOf(\"Masters.add_cluster\") !== -1 &&\n          \"Add Clusters\"\n        }\n        goBack={true}\n        setIsModalVisible={props.isModelVisible}\n        isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\">\n            <Col span={12} xs={24} sm={24} md={14} className=\"hp-mb-16\">\n              <Search\n                placeholder=\"Search...\"\n                allowClear\n                onChange={(e) => {\n                  if (e.target.value == \"\") {\n                    props.getClusters({\n                      ...props.clustersParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                    props.SetClustersParams({\n                      ...props.clustersParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                  }\n                }}\n                onSearch={(value) => {\n                  onSearch(value);\n                }}\n              />\n            </Col>\n\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 500 }}\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.clustersParams?.page}\n                pageSize={props.clustersParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <AddClusters />\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ clusters, system }) {\n  return {\n    clusterslist: clusters.clusterslist,\n    noofpages: clusters.noofpages,\n    listCount: clusters.listCount,\n    clustersParams: clusters.clustersParams,\n    loading: clusters.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getClusters,\n  clustersEdit,\n  clusterDelete,\n  isModelVisible,\n  SetClustersParams,\n})(Clusters);\n"],"sourceRoot":""}