{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/components/data-entry/inputs/numberInput.jsx","layout/components/content/page-title/index.jsx","view/pages/MastersDashboard/vehicles/addVehicles.jsx","view/pages/MastersDashboard/vehicles/Filters/Filter.jsx","view/pages/MastersDashboard/vehicles/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","NumericInput","value","onChange","onBlur","e","inputValue","target","test","key","name","valueTemp","charAt","length","slice","replace","PageTitle","addModelTile2","setIsModalVisible2","xs","md","xl","connect","vehicles","mini","rowdata","model","miniVersionList","miniEmissionnorms","miniBrandsList","miniBrandFamilyList","miniModelsList","vehiclesAdd","isModelVisible","InputChangeValue","getMiniVersion","getMiniEmissionnorms","getMiniBrands","getMiniBrandFamily","getMiniModels","vehicleNumberValidate","engineNumberValidate","chassisNumberValidate","Form","useForm","form","useEffect","handleResetInputValues","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","checkValidation","data","console","log","chassisno","Modal","error","title","content","engineno","setFieldsValue","vehicleType","vehicleno","brand_id","brandfamily_id","model_id","vehicletrno","version_id","emission_id","year","visible","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","moment","format","handleAdd","brand","brandfamily","emission","version","typeId","handleUpdate","gutter","Item","label","rules","required","message","Group","Button","pattern","RegExp","hasFeedback","style","placeholder","minLength","maxLength","toUpperCase","transform","showSearch","filterOption","input","option","children","toLowerCase","includes","optionFilterProp","map","index","Option","picker","disabledDate","range","startDate","endDate","current","startCheck","endCheck","disableDateRanges","Date","date","min","getValueProps","getFullYear","getMonth","versionfeatures","drawer","vehiclesParams","miniPriority","miniVehicletypesList","versionfeaturesParams","versionfeatureslist","isDrawerVisible","SetVehiclesParams","FilterInputChangeValue","getVehicles","getMiniPriority","getMiniVehicletypes","getVersionfeatures","SetVersionfeaturesParams","getMiniBrandsClearData","getMiniBrandFamilyClearData","getMiniPriorityClearData","getMiniModelsClearData","getMiniVehicletypesClearData","start_date","end_date","version__brand","version__brandfamily","version__model","version__vehicletype","version__priority","version__fueltype","onClose","placement","bodyStyle","paddingBottom","initialValues","remember","page","search","page_size","disabled","allowClear","vehicletype_id","vehicletype","priority_id","priority","fueltype","htmlType","system","vehicleslist","noofpages","listCount","loading","userAccessList","vehiclesDelete","getvehicleByID","useState","columnClass","columns","dataIndex","fixed","filterSearch","render","row","createdon","filterMode","fueltype_name","record","indexOf","cursor","color","onConfirm","okText","cancelText","Search","Input","isModalVisible","sm","onSearch","val","FilterOutlined","PlusOutlined","tip","spinning","delay","dataSource","scroll","x","pagination","pageSize","total","showTotal","showSizeChanger","Filter"],"mappings":"yIAAA,sHAQe,SAASA,EAAgBC,GACtC,IAAIC,EAAUC,cACNC,EACNH,EADMG,UAAWC,EACjBJ,EADiBI,SAAUC,EAC3BL,EAD2BK,aAAcC,EACzCN,EADyCM,OAAQC,EACjDP,EADiDO,kBAGnD,OACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAD,CAAMC,UAAU,SAAhB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKD,KAAM,GAAX,UACGF,GACC,cAAC,IAAD,CACEI,GAAG,IACHC,QAAS,kBAAMV,EAAQK,QAAd,EACTG,UAAU,uDAHZ,SAKE,cAAC,IAAD,CAAuBA,UAAU,aAAaG,KAAM,OAGxD,eAAC,IAAD,CAAKH,UAAU,oBAAf,UACE,cAAC,IAAD,CAAKD,KAAM,GAAX,SACGL,GAAa,oBAAIM,UAAU,SAAd,SAAwBN,MAGxC,cAAC,IAAD,CAAKK,KAAM,GAAX,SACGJ,GAAY,mBAAGK,UAAU,qBAAb,SAAmCL,YAItD,cAAC,IAAD,CAAKI,KAAM,EAAX,SACGH,GACC,cAAC,IAAD,CACEI,UAAU,iBACVI,KAAK,UACLF,QAAS,kBAAMJ,GAAkB,EAAxB,EACTO,OAAK,EACLC,KAAM,cAAC,IAAD,CAAiBN,UAAU,aAAaG,KAAM,KALtD,UAOII,YAAYX,YAQ7B,C,gGClDc,SAASY,EAAajB,GACnC,IAAQkB,EAA4BlB,EAA5BkB,MAAOC,EAAqBnB,EAArBmB,SAAUC,EAAWpB,EAAXoB,OAsBzB,OACE,cAAC,IAAD,2BACMpB,GADN,IAEEmB,SAvBiB,SAACE,GACpB,IAAeC,EAAeD,EAAEE,OAAxBL,OACI,kBAEJM,KAAKF,IAA8B,KAAfA,GAAoC,MAAfA,IAC/CH,EAAS,CAAEM,IAAKzB,EAAM0B,KAAMR,MAAOI,GAEtC,EAiBGF,OAAQpB,EAAMoB,QAfC,WACjB,IAAIO,EAAYT,EAEuB,MAAnCA,EAAMU,OAAOV,EAAMW,OAAS,IAAwB,MAAVX,IAC5CS,EAAYT,EAAMY,MAAM,GAAI,IAI9BV,EAAO,CAAEK,IAAKzB,EAAM0B,KAAMR,MAAOS,EAAUI,QAAQ,UAAW,OAC/D,IASF,C,mCClCD,6GAOe,SAASC,EAAUhC,GAChC,IAAIC,EAAUC,cAGZC,EAOEH,EAPFG,UACAC,EAMEJ,EANFI,SACAE,EAKEN,EALFM,OACAD,EAIEL,EAJFK,aACA4B,EAGEjC,EAHFiC,cACA1B,EAEEP,EAFFO,kBACA2B,EACElC,EADFkC,mBAGF,OACE,cAAC,IAAD,CAAK1B,KAAM,GAAIC,UAAU,WAAzB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKD,KAAM,GAAI2B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAnC,UACG/B,GACC,cAAC,IAAD,CACEI,GAAG,IACHC,QAAS,WACPV,EAAQK,QACT,EACDG,UAAU,uDALZ,SAOE,cAAC,IAAD,CAAuBA,UAAU,aAAaG,KAAM,OAGxD,eAAC,IAAD,CAAKH,UAAU,oBAAf,UACE,cAAC,IAAD,CAAKD,KAAM,GAAX,SACGL,GAAa,oBAAIM,UAAU,kBAAd,SAAiCN,MAGjD,cAAC,IAAD,CAAKK,KAAM,GAAX,SACGJ,GAAY,mBAAGK,UAAU,qBAAb,SAAmCL,YAItD,cAAC,IAAD,CAAKI,KAAM,EAAG2B,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAjC,SACE,sBAAK5B,UAAU,mCAAf,UACGJ,GACC,qBAAKI,UAAU,4BAAf,SACE,cAAC,IAAD,CACEA,UAAU,GACVI,KAAK,UACLF,QAAS,kBAAMJ,GAAkB,EAAxB,EAETQ,KAAM,cAAC,IAAD,CAAiBN,UAAU,aAAaG,KAAM,KALtD,UAOII,YAAYX,MAInB4B,GACC,qBAAKxB,UAAU,4BAAf,SACE,cAAC,IAAD,CACEA,UAAU,WACVI,KAAK,UACLF,QAAS,kBAAMuB,GAAmB,EAAzB,EAETnB,KAAM,cAAC,IAAD,CAAiBN,UAAU,aAAaG,KAAM,KALtD,UAOII,YAAYiB,eAS/B,C,gNCwoBcK,iBAZf,YAA8C,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KACnC,MAAO,CACLC,QAASF,EAASE,QAClBC,MAAOH,EAASG,MAChBC,gBAAiBH,EAAKG,gBACtBC,kBAAmBJ,EAAKI,kBACxBC,eAAgBL,EAAKK,eACrBC,oBAAqBN,EAAKM,oBAC1BC,eAAgBP,EAAKO,eAExB,GAEuC,CACtCC,gBACAC,mBACAC,qBACAC,oBACAC,yBACAC,kBACAC,uBACAC,kBACAC,0BACAC,yBACAC,2BAXapB,EA7qBK,SAACtC,GAAW,IAAD,wBAC7B,EAAe2D,IAAKC,UAAbC,EAAP,oBACAC,qBAAU,WAER9D,EAAMoD,uBACNpD,EAAMqD,eACP,GAAE,IASH,IAwDMU,EAAyB,WAC7B/D,EAAMiD,gBAAe,EACtB,EAEKe,EAAoB,WACxB,OAAwB,MAApBhE,EAAMyC,QAAQwB,IAAkC,GAApBjE,EAAMyC,QAAQwB,GAE1C,cAAC,WAAD,UACE,cAAC,IAAD,CACEtD,QAAS,WACPkD,EAAKK,QACN,EACDrD,KAAK,UACLC,OAAK,EALP,mBAaF,cAAC,WAAD,UACE,cAAC,IAAD,CACED,KAAK,UACLF,QAAS,WACPkD,EAAKK,QACN,EACDpD,OAAK,EALP,qBAYP,EAEKqD,EAAe,WACnB,OACE,cAAC,WAAD,UACE,cAAC,IAAD,CACExD,QAAS,WACPoD,GACD,EACDlD,KAAK,UACLC,OAAK,EACLsD,OAAK,EANP,qBAYL,EAEKC,EACJ,qBAAI5D,UAAU,cAAd,UACuB,MAApBT,EAAMyC,QAAQwB,IAAkC,GAApBjE,EAAMyC,QAAQwB,GAAU,MAAQ,SAAU,IADzE,aAqBF,SAASK,EAAgBzD,EAAM0D,GAEJ,IAAD,EAwBjB,GAzBPC,QAAQC,IAAI,OAAQ5D,EAAM0D,EAAKhD,OAAOL,OAC1B,YAARL,GACE0D,EAAKhD,OAAOL,QAAZ,UAAqBlB,EAAMyC,eAA3B,aAAqB,EAAeiC,aACtC1E,EAAMkD,iBAAiB,CACrBzB,IAAKZ,EACLK,MAAO,KAETyD,IAAMC,MAAM,CACV7D,KACE,sBAAMN,UAAU,aAAhB,SACE,cAAC,IAAD,MAGJoE,MACE,oBAAIpE,UAAU,6BAAd,iCAEFqE,QACE,8BACE,oBAAGrE,UAAU,oCAAb,uDAC6C,YAOjD8D,EAAKhD,OAAOL,QAAZ,UAAqBlB,EAAMyC,eAA3B,aAAqB,EAAesC,YACtC/E,EAAMkD,iBAAiB,CACrBzB,IAAKZ,EACLK,MAAO,KAETyD,IAAMC,MAAM,CACV7D,KACE,sBAAMN,UAAU,aAAhB,SACE,cAAC,IAAD,MAGJoE,MACE,oBAAIpE,UAAU,6BAAd,kCAEFqE,QACE,8BACE,oBAAGrE,UAAU,oCAAb,uDAC6C,WAOxD,CAkBD,OAhBAqD,qBAAU,WACRD,EAAKmB,eAAe,CAClBC,YAAajF,EAAMyC,QAAQwC,YAC3BC,UAAWlF,EAAMyC,QAAQyC,UACzBC,SAAUnF,EAAMyC,QAAQ0C,SACxBC,eAAgBpF,EAAMyC,QAAQ2C,eAC9BC,SAAUrF,EAAMyC,QAAQ4C,SACxBC,YAAatF,EAAMyC,QAAQ6C,YAC3BC,WAAYvF,EAAMyC,QAAQ8C,WAC1BC,YAAaxF,EAAMyC,QAAQ+C,YAC3BC,KAAMzF,EAAMyC,QAAQgD,KACpBV,SAAU/E,EAAMyC,QAAQsC,SACxBL,UAAW1E,EAAMyC,QAAQiC,WAE5B,GAAE,CAAC1E,EAAMyC,UAGR,cAAC,IAAD,CACEiD,QAAS1F,EAAM0C,MACfmC,MAAOR,EACPsB,SAAU,WACR5B,IACAF,EAAK+B,cACL5F,EAAMiD,gBAAe,EACtB,EACDxC,UAAU,gBACVoF,OACE,eAAC,IAAD,CAAKC,QAAQ,SAAb,UACE,cAAC,IAAD,CAAKtF,KAAM,GAAIC,UAAU,UAAzB,SACE,cAAC0D,EAAD,MAGF,cAAC,IAAD,CAAK3D,KAAM,GAAIC,UAAU,UAAzB,SACE,cAACuD,EAAD,SAIN+B,UAAQ,EACRC,UACE,cAAC,IAAD,CAAavF,UAAU,kCAAkCG,KAAM,KAEjEqF,MAAO,IAxBT,SA0BE,cAAC,IAAD,CACEC,OAAO,WACPrC,KAAMA,EACNsC,aAAa,MACbC,SAAU,WACgB,MAApBpG,EAAMyC,QAAQwB,GAxOR,WAAO,IAAD,MAChBoC,EAAM,CACVpC,GAAI,EACJiB,UACiC,SAA/B,UAAAlF,EAAMyC,eAAN,eAAewC,aACXjF,EAAMyC,QAAQ6C,YADlB,UAEItF,EAAMyC,eAFV,aAEI,EAAeyC,UACrBC,SAAUnF,EAAMyC,QAAQ0C,SACxBC,eAAgBpF,EAAMyC,QAAQ2C,eAC9BC,SAAUrF,EAAMyC,QAAQ4C,SACxBC,YAAatF,EAAMyC,QAAQ6C,YAC3BG,KAAMa,IAAM,UAACtG,EAAMyC,eAAP,aAAC,EAAegD,MAAMc,OAAO,QACzCxB,SAAU/E,EAAMyC,QAAQsC,SACxBS,YAAaxF,EAAMyC,QAAQ+C,YAC3BD,WAAYvF,EAAMyC,QAAQ8C,WAC1Bb,UAAW1E,EAAMyC,QAAQiC,WAE3B1E,EAAMgD,YAAY,CAACqD,OACpB,CAuNSG,GArNW,WAAO,IAAD,kCACnBH,EAAM,CACVpC,GAAE,UAAEjE,EAAMyC,eAAR,aAAE,EAAewB,GACnBiB,UACiC,SAA/B,UAAAlF,EAAMyC,eAAN,eAAewC,aACXjF,EAAMyC,QAAQ6C,YADlB,UAEItF,EAAMyC,eAFV,aAEI,EAAeyC,UACrBC,SAC6B,OAA3B,UAAAnF,EAAMyC,eAAN,eAAe0C,UACXnF,EAAMyC,QAAQgE,MAAMxC,GADxB,UAEIjE,EAAMyC,eAFV,aAEI,EAAe0C,SACrBC,eACmC,OAAjC,UAAApF,EAAMyC,eAAN,eAAe2C,gBACXpF,EAAMyC,QAAQiE,YAAYzC,GAD9B,UAEIjE,EAAMyC,eAFV,aAEI,EAAe2C,eACrBC,SAC6B,OAA3B,UAAArF,EAAMyC,eAAN,eAAe4C,UACXrF,EAAMyC,QAAQC,MAAMuB,GADxB,UAEIjE,EAAMyC,eAFV,aAEI,EAAe4C,SACrBC,YAAW,UAAEtF,EAAMyC,eAAR,aAAE,EAAe6C,YAC5BG,KAAMa,IAAM,UAACtG,EAAMyC,eAAP,aAAC,EAAegD,MAAMc,OAAO,QACzCxB,SAAQ,UAAE/E,EAAMyC,eAAR,aAAE,EAAesC,SACzBS,YACgC,OAA9B,UAAAxF,EAAMyC,eAAN,eAAe+C,aACXxF,EAAMyC,QAAQkE,SAAS1C,GAD3B,UAEIjE,EAAMyC,eAFV,aAEI,EAAe+C,YACrBD,WAC+B,OAA7B,UAAAvF,EAAMyC,eAAN,eAAe8C,YACXvF,EAAMyC,QAAQmE,QAAQ3C,GAD1B,UAEIjE,EAAMyC,eAFV,aAEI,EAAe8C,WACrBb,UAAS,UAAE1E,EAAMyC,eAAR,aAAE,EAAeiC,WAE5B1E,EAAMgD,YAAY,CAACqD,MAAKxF,KAAMb,EAAMa,KAAMgG,OAAQ7G,EAAM6G,QACzD,CAsLSC,EAEH,EAVH,SAYE,eAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,GAAlB,UACE,cAAC,IAAD,CAAKvG,KAAM,GAAI2B,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAnC,SACE,cAAC,IAAK4E,KAAN,CACEC,MAAM,eACNvF,KAAK,cACLwF,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,qCANf,SAUE,eAAC,IAAMC,MAAP,CACE3F,KAAK,cACLP,SArQd,SAAwBE,GACtBrB,EAAMkD,iBAAiB,CACrBzB,IAAKJ,EAAEE,OAAOG,KACdR,MAAOG,EAAEE,OAAOL,OAEnB,EAiQaA,MAAK,UAAElB,EAAMyC,eAAR,aAAE,EAAewC,YAHxB,UAKE,cAAC,IAAMqC,OAAP,CAAcpG,MAAM,MAApB,yBACA,cAAC,IAAMoG,OAAP,CAAcpG,MAAM,MAApB,gCAI0B,SAA/B,UAAAlB,EAAMyC,eAAN,eAAewC,aACd,mCACE,cAAC,IAAD,CAAKzE,KAAM,GAAI2B,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAnC,SACE,cAAC,IAAK4E,KAAN,CACEC,MAAM,qBACNvF,KAAK,cACLwF,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCAEX,CACEG,QAAS,IAAIC,OACX,kEAEFJ,QAAS,kCAGbK,aAAW,EAfb,SAiBE,cAAC,IAAD,CACExD,GAAG,UACHvC,KAAK,cACLgG,MAAO,CAAEzB,MAAO,QAChB0B,YAAY,kBACZC,UAAW,GACXC,UAAW,GACX3G,MAAK,UAAElB,EAAMyC,eAAR,aAAE,EAAe6C,YACtBnE,SAAU,SAACE,GACTrB,EAAMkD,iBAAiB,CACrBzB,IAAKJ,EAAEE,OAAOG,KACdR,MAAOG,EAAEE,OAAOL,MAAM4G,eAEzB,UAMT,mCACE,cAAC,IAAD,CAAKtH,KAAM,GAAI2B,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAnC,SACE,cAAC,IAAK4E,KAAN,CACEC,MAAM,iBACNvF,KAAK,YACLwF,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,qCASX,CACEG,QAAS,IAAIC,OACX,0CAEFJ,QAAS,uCAGbK,aAAW,EAtBb,SAwBE,cAAC,IAAD,CACExD,GAAG,kBACHvC,KAAK,YACLuF,MAAM,kBACNY,UAAW,GACXH,MAAO,CAAEzB,MAAO,OAAQ8B,UAAW,aACnCJ,YAAY,iBACZvG,OAAQ,SAACmD,GACPC,QAAQC,IAAI,OAAQF,GACpBvE,EAAMwD,sBAAsB,CAC1B0B,UAAWX,EAAKhD,OAAOL,OAE1B,EACDA,MAAK,UAAElB,EAAMyC,eAAR,aAAE,EAAeyC,UACtB/D,SAAU,SAACE,GACTrB,EAAMkD,iBAAiB,CACrBzB,IAAKJ,EAAEE,OAAOG,KACdR,MAAOG,EAAEE,OAAOL,MAAM4G,eAEzB,UAMX,cAAC,IAAD,CAAKtH,KAAM,GAAI2B,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAnC,SACE,cAAC,IAAK4E,KAAN,CACEC,MAAM,UACNvF,KAAK,WACLwF,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,8BACnCK,aAAW,EAJb,SAME,cAAC,IAAD,CACEO,YAAU,EACVC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SAASC,cAAcC,SAASJ,EAAMG,cADjC,EAGdV,YAAY,gBACZY,iBAAiB,QACjBpH,SAAU,SAACD,GACTlB,EAAMsD,mBAAmB,CAAEmD,MAAOvF,IAClClB,EAAMkD,iBAAiB,CACrBzB,IAAK,WACLP,MAAOA,GAEV,EACDA,MAC4B,MAA1BlB,EAAMyC,QAAQ0C,SAAmB,GAAjC,UAAsCnF,EAAMyC,eAA5C,aAAsC,EAAe0C,SAfzD,SAkBGnF,EAAM6C,eAAe2F,KAAI,SAAC/B,EAAOgC,GAChC,OACE,cAACC,OAAD,CAAoBxH,MAAOuF,EAAMxC,GAAjC,SACGwC,EAAM/E,MADI+G,EAIhB,UAIP,cAAC,IAAD,CAAKjI,KAAM,GAAI2B,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAnC,SACE,cAAC,IAAK4E,KAAN,CACEC,MAAM,iBACNvF,KAAK,iBACLwF,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,qCAE7BK,aAAW,EANb,SAQE,cAAC,IAAD,CACEO,YAAU,EACVC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SAASC,cAAcC,SAASJ,EAAMG,cADjC,EAGdV,YAAY,sBACZY,iBAAiB,eACjBpH,SAAU,SAACD,GACTlB,EAAMuD,cAAc,CAAEmD,YAAaxF,IACnClB,EAAMkD,iBAAiB,CACrBzB,IAAK,iBACLP,MAAOA,GAEV,EACDA,MACkC,MAAhClB,EAAMyC,QAAQ2C,eACV,GADJ,UAEIpF,EAAMyC,eAFV,aAEI,EAAe2C,eAjBvB,SAoBGpF,EAAM8C,oBAAoB0F,KAAI,SAAC9B,EAAa+B,GAC3C,OACE,cAACC,OAAD,CAAoBxH,MAAOwF,EAAYzC,GAAvC,SACGyC,EAAYhF,MADF+G,EAIhB,UAIP,cAAC,IAAD,CAAKjI,KAAM,GAAI2B,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAnC,SACE,cAAC,IAAK4E,KAAN,CACEC,MAAM,UACNvF,KAAK,WACLwF,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,8BACnCK,aAAW,EAJb,SAME,cAAC,IAAD,CACEO,YAAU,EACVC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SAASC,cAAcC,SAASJ,EAAMG,cADjC,EAGdV,YAAY,eACZY,iBAAiB,QACjBpH,SAAU,SAACD,GACTlB,EAAMmD,eAAe,CAAET,MAAOxB,IAC9BlB,EAAMkD,iBAAiB,CACrBzB,IAAK,WACLP,MAAOA,GAEV,EACDA,MAC4B,MAA1BlB,EAAMyC,QAAQ4C,SAAmB,GAAjC,UAAsCrF,EAAMyC,eAA5C,aAAsC,EAAe4C,SAfzD,SAkBGrF,EAAM+C,eAAeyF,KAAI,SAAC9F,EAAO+F,GAChC,OACE,cAACC,OAAD,CAAoBxH,MAAOwB,EAAMuB,GAAjC,SACGvB,EAAMhB,MADI+G,EAIhB,UAIP,cAAC,IAAD,CAAKjI,KAAM,GAAI2B,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAnC,SACE,cAAC,IAAK4E,KAAN,CACEC,MAAM,YACNvF,KAAK,aACLwF,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCAGbK,aAAW,EATb,SAWE,cAAC,IAAD,CACEO,YAAU,EACVC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SAASC,cAAcC,SAASJ,EAAMG,cADjC,EAGdV,YAAY,iBACZY,iBAAiB,UACjBpH,SAAU,SAACD,GACTlB,EAAMkD,iBAAiB,CACrBzB,IAAK,aACLP,MAAOA,GAEV,EACDA,MAC8B,MAA5BlB,EAAMyC,QAAQ8C,WACV,GADJ,UAEIvF,EAAMyC,eAFV,aAEI,EAAe8C,WAhBvB,SAmBGvF,EAAM2C,gBAAgB6F,KAAI,SAAC5B,EAAS6B,GACnC,OACE,cAACC,OAAD,CAAoBxH,MAAO0F,EAAQ3C,GAAnC,SACG2C,EAAQlF,MADE+G,EAIhB,UAGA,IACP,cAAC,IAAD,CAAKjI,KAAM,GAAI2B,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAnC,SACE,cAAC,IAAK4E,KAAN,CACEC,MAAM,aACNvF,KAAK,cACLwF,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCAGbK,aAAW,EATb,SAWE,cAAC,IAAD,CACEO,YAAU,EACVC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SAASC,cAAcC,SAASJ,EAAMG,cADjC,EAGdV,YAAY,oBACZY,iBAAiB,WACjBpH,SAAU,SAACD,GACTlB,EAAMkD,iBAAiB,CACrBzB,IAAK,cACLP,MAAOA,GAEV,EACDA,MAC+B,MAA7BlB,EAAMyC,QAAQ+C,YACV,GADJ,UAEIxF,EAAMyC,eAFV,aAEI,EAAe+C,YAhBvB,SAmBGxF,EAAM4C,kBAAkB4F,KAAI,SAAC7B,EAAU8B,GACtC,OACE,cAACC,OAAD,CAAoBxH,MAAOyF,EAAS1C,GAApC,SACG0C,EAASjF,MADC+G,EAIhB,UAIP,cAAC,IAAD,CAAKjI,KAAM,GAAI2B,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAnC,SACE,cAAC,IAAK4E,KAAN,CACEC,MAAM,OACNvF,KAAK,OACLwF,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gBACnCK,aAAW,EAJb,SAME,cAAC,IAAD,CACExD,GAAG,OACHvC,KAAK,OACLgG,MAAO,CAAEzB,MAAO,QAChB0C,OAAO,OAEPC,aAvbd,WAA0E,IAA/CC,EAA8C,uDAAtC,CAAEC,WAAW,EAAOC,SAAS,GACtDD,EAAuBD,EAAvBC,UAAWC,EAAYF,EAAZE,QACnB,OAAO,SAAsBC,GAC3B,IAAIC,GAAa,EACbC,GAAW,EAOf,OANIJ,IACFG,EAAaD,GAAWA,EAAU1C,IAAOwC,EAAW,SAElDC,IACFG,EAAWF,GAAWA,EAAU1C,IAAOyC,EAAS,SAE1CD,GAAaG,GAAgBF,GAAWG,CACjD,CACF,CA0a2BC,CAAkB,CAC9BJ,QAAS,IAAIK,KACbN,UAAW,OAEbnB,YAAY,cACZzG,MAAK,UAAElB,EAAMyC,eAAR,aAAE,EAAegD,KACtBtE,SAAU,SAACkI,GACT7E,QAAQC,IAAI,OAAQ4E,SAAaA,GACjCrJ,EAAMkD,iBAAiB,CACrBzB,IAAK,OACLP,MAAOmI,GAEV,QAGA,IACP,cAAC,IAAD,CAAK7I,KAAM,GAAI2B,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAnC,SACE,cAAC,IAAK4E,KAAN,CACEC,MAAM,iBACNvF,KAAK,WACLwF,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,oCAEX,CACEkC,IAAK,GACLlC,QAAS,qCAGbK,aAAW,EAbb,SAeE,cAAC,IAAD,CACExD,GAAG,WACHvC,KAAK,WACLgG,MAAO,CAAEzB,MAAO,OAAQ8B,UAAW,aACnCH,UAAW,GACXC,UAAW,GACXF,YAAY,gBACZzG,MAAK,UAAElB,EAAMyC,eAAR,aAAE,EAAesC,SACtB3D,OAAQ,SAACC,GACPrB,EAAMyD,qBAAqB,CAAEsB,SAAU1D,EAAEE,OAAOL,QAC1B,IAAlBG,EAAEE,OAAOL,OACXoD,EAAgB,WAAYjD,EAE/B,EAEDF,SAAU,SAACE,GACTrB,EAAMkD,iBAAiB,CACrBzB,IAAKJ,EAAEE,OAAOG,KACdR,MAAOG,EAAEE,OAAOL,MAAM4G,eAEzB,QAGA,IACP,cAAC,IAAD,CAAKtH,KAAM,GAAI2B,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAnC,SACE,cAAC,IAAK4E,KAAN,CACEC,MAAM,mBACNvF,KAAK,YACLwF,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,qCAEX,CACEkC,IAAK,GACLlC,QAAS,sCAGbmC,cAAe,WAAQ,EACvB9B,aAAW,EAdb,SAgBE,cAAC,IAAD,CACExD,GAAG,iBACHvC,KAAK,YACLgG,MAAO,CAAEzB,MAAO,OAAQ8B,UAAW,aACnCJ,YAAY,iBACZC,UAAW,GACXC,UAAW,GACXzG,OAAQ,SAACC,GACPrB,EAAM0D,sBAAsB,CAAEgB,UAAWrD,EAAEE,OAAOL,QAC5B,IAAlBG,EAAEE,OAAOL,OACXoD,EAAgB,YAAajD,EAEhC,EACDH,MAAK,UAAElB,EAAMyC,eAAR,aAAE,EAAeiC,UAEtBvD,SAAU,SAACE,GACTrB,EAAMkD,iBAAiB,CACrBzB,IAAKJ,EAAEE,OAAOG,KACdR,MAAOG,EAAEE,OAAOL,MAAM4G,eAEzB,cAQhB,G,uTChqBGuB,EAAO,IAAID,KACTC,EAAKG,cACLH,EAAKI,WA6cInH,mBAff,YAA+D,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,KAAMkH,EAAmB,EAAnBA,gBACzC,MAAO,CACLC,OAAQpH,EAASoH,OACjBC,eAAgBrH,EAASqH,eACzB/G,eAAgBL,EAAKK,eACrBC,oBAAqBN,EAAKM,oBAC1B+G,aAAcrH,EAAKqH,aACnB9G,eAAgBP,EAAKO,eACrB+G,qBAAsBtH,EAAKsH,qBAE3BC,sBAAuBL,EAAgBK,sBACvCC,oBAAqBN,EAAgBM,oBAExC,GAEuC,CACtCC,oBACAC,sBACAC,2BACAC,gBACA/G,kBACAC,uBACA+G,oBACA9G,kBACA+G,yBACAC,uBACAC,6BAEAC,2BACAC,gCACAC,6BACAC,2BACAC,mCAjBavI,EA3cA,SAACtC,GAAW,IAAD,cACxB,EAAe2D,IAAKC,UAAbC,EAAP,oBACAC,qBAAU,WACR9D,EAAMqD,gBACNrD,EAAMsD,qBACNtD,EAAMuD,gBACNvD,EAAMsK,sBACNtK,EAAMuK,mBAAN,eAA8BvK,EAAM+J,wBACpC/J,EAAMqK,iBACP,GAAE,IAmEH,SAASlB,IAAiE,IAA/CN,EAA8C,uDAAtC,CAAEC,WAAW,EAAOC,SAAS,GACtDD,EAAuBD,EAAvBC,UAAWC,EAAYF,EAAZE,QACnB,OAAO,SAAsBC,GAC3B,IAAIC,GAAa,EACbC,GAAW,EAgBf,OAfIJ,IACFG,EACED,GACAA,EAAU1C,IAAOwC,EAAY,YAAa,wBAE1CC,IACFG,EACEF,GACAA,EACE1C,IACEA,IAAOyC,GAASxC,OAAO,cAAgB,YACvC,wBAIAuC,GAAaG,GAAgBF,GAAWG,CACjD,CACF,CAkBD,OAhBApF,qBAAU,WAAO,IAAD,IACdD,EAAKmB,eAAe,CAClB8F,WAAU,UAAE9K,EAAM4J,sBAAR,aAAE,EAAsBkB,WAClCC,SAAQ,UAAE/K,EAAM4J,sBAAR,aAAE,EAAsBmB,SAChCC,eAAgBhL,EAAM4J,eAAeoB,eACrCC,qBAAsBjL,EAAM4J,eAAeqB,qBAC3CC,eAAgBlL,EAAM4J,eAAesB,eACrCC,qBAAsBnL,EAAM4J,eAAeuB,qBAC3CC,kBAAmBpL,EAAM4J,eAAewB,kBACxCC,kBAAmBrL,EAAM4J,eAAeyB,mBAE3C,GAAE,CAACrL,EAAM4J,iBAMR,cAAC,IAAD,CAAK7C,OAAQ,CAAC,GAAI,IAAlB,SACE,cAAC,IAAD,CAAKvG,KAAM,GAAX,SACE,cAAC,IAAD,CACEqE,MAAM,UACNoB,MAAO,IACPxF,UAAU,mBACV6K,QAAS,WACPtL,EAAMiK,iBAAgB,EACvB,EACDsB,UAAU,QACV7F,QAAS1F,EAAM2J,OACf6B,UAAW,CACTC,cAAe,IAVnB,SAaE,eAAC,IAAD,CACE5H,KAAMA,EACNqC,OAAO,WACPxE,KAAK,QACLgK,cAAe,CAAEC,UAAU,GAC3BvF,SAtHO,WACfpG,EAAMkK,kBAAN,2BACKlK,EAAM4J,gBADX,IAEEkB,WAAY9K,EAAM4J,eAAekB,WACjCC,SAAU/K,EAAM4J,eAAemB,SAC/Ba,KAAM,EACNC,OAAQ,GACRC,UAAW,MAGb9L,EAAMoK,YAAN,2BACKpK,EAAM4J,gBADX,IAcEkB,WAAY9K,EAAM4J,eAAekB,WACjCC,SAAU/K,EAAM4J,eAAemB,SAC/Ba,KAAM,EACNC,OAAQ,GACRC,UAAW,MAEb9L,EAAMiK,iBAAgB,EACvB,EAkFO,UAOE,eAAC,IAAD,CAAKlD,OAAQ,CAAC,GAAI,IAAlB,UACE,cAAC,IAAD,CAAKvG,KAAM,GAAX,SACE,cAAC,IAAKwG,KAAN,CAAWC,MAAM,YAAYvF,KAAK,aAAlC,SACE,cAAC,IAAD,CACEgG,MAAO,CAAEzB,MAAO,QAChB0C,OAAO,OACPhB,YAAY,cACZpB,OAAO,aACPqC,aAAcO,EAAkB,CAC9BJ,QAAS,IAAIK,OAEfjI,SAAU,SAACkI,GACTrJ,EAAMmK,uBAAuB,CAC3B1I,IAAK,aACLP,MAAe,MAARmI,EAAe,GAAKA,IAEjB,MAARA,GACFrJ,EAAMmK,uBAAuB,CAC3B1I,IAAK,WACLP,MAAO,IAGZ,QAKP,cAAC,IAAD,CAAKV,KAAM,GAAX,SACE,cAAC,IAAKwG,KAAN,CAAWC,MAAM,UAAUvF,KAAK,WAAhC,SACE,cAAC,IAAD,CACEgG,MAAO,CAAEzB,MAAO,QAChB0C,OAAO,OACPhB,YAAY,cACZpB,OAAO,aACPqC,aAAcO,EAAkB,CAC9BJ,QAASzC,MAASC,OAAO,cACzBuC,UAAWxC,IAAM,UACftG,EAAM4J,sBADS,aACf,EAAsBkB,YACtBvE,OAAO,gBAEXwF,SACqC,MAAnC/L,EAAM4J,eAAekB,YACc,IAAnC9K,EAAM4J,eAAekB,WAIvB3J,SAAU,SAACkI,GACTrJ,EAAMmK,uBAAuB,CAC3B1I,IAAK,WACLP,MAAe,MAARmI,EAAe,GAAKA,GAE9B,QAKP,cAAC,IAAD,CAAK7I,KAAM,GAAX,SACE,cAAC,IAAKwG,KAAN,CAAWC,MAAM,UAAUvF,KAAK,iBAAhC,SACE,cAAC,IAAD,CACEsG,YAAU,EACVgE,YAAU,EACV/D,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SACJC,cACAC,SAASJ,EAAMG,cAHN,EAKdV,YAAY,gBACZY,iBAAiB,QACjBpH,SAAU,SAACD,GACTlB,EAAMsD,mBAAmB,CAAEmD,MAAOvF,IAClClB,EAAM0K,4BACJ1K,EAAM4K,uBACN5K,EAAMmK,uBAAuB,CAC3B1I,IAAK,iBACLP,MAAOA,GAEZ,EACDA,MACmC,MAAjClB,EAAM4J,eAAezE,SACjB,GADJ,UAEInF,EAAM4J,sBAFV,aAEI,EAAsBzE,SAtB9B,SAyBGnF,EAAM6C,eAAe2F,KAAI,SAAC/B,EAAOgC,GAChC,OACE,cAACC,OAAD,CAAoBxH,MAAOuF,EAAMxC,GAAjC,SACGwC,EAAM/E,MADI+G,EAIhB,UAKP,cAAC,IAAD,CAAKjI,KAAM,GAAX,SACE,cAAC,IAAKwG,KAAN,CAAWC,MAAM,iBAAiBvF,KAAK,uBAAvC,SACE,cAAC,IAAD,CACEsG,YAAU,EACVgE,YAAU,EACV/D,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SACJC,cACAC,SAASJ,EAAMG,cAHN,EAKdV,YAAY,sBACZY,iBAAiB,eACjBpH,SAAU,SAACD,GACTlB,EAAMuD,cAAc,CAAEmD,YAAaxF,IACnClB,EAAM4K,uBACJ5K,EAAMmK,uBAAuB,CAC3B1I,IAAK,uBACLP,MAAOA,GAEZ,EACDA,MACyC,MAAvClB,EAAM4J,eAAexE,eACjB,GADJ,UAEIpF,EAAM4J,sBAFV,aAEI,EAAsBxE,eArB9B,SAwBGpF,EAAM8C,oBAAoB0F,KAAI,SAAC9B,EAAa+B,GAC3C,OACE,cAACC,OAAD,CAAoBxH,MAAOwF,EAAYzC,GAAvC,SACGyC,EAAYhF,MADF+G,EAIhB,UAKP,cAAC,IAAD,CAAKjI,KAAM,GAAX,SACE,cAAC,IAAKwG,KAAN,CAAWC,MAAM,UAAUvF,KAAK,iBAAhC,SACE,cAAC,IAAD,CACEsG,YAAU,EACVgE,YAAU,EACV/D,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SACJC,cACAC,SAASJ,EAAMG,cAHN,EAKdV,YAAY,eACZY,iBAAiB,QACjBpH,SAAU,SAACD,GACTlB,EAAMmK,uBAAuB,CAC3B1I,IAAK,iBACLP,MAAOA,GAEV,EACDA,MACmC,MAAjClB,EAAM4J,eAAevE,SACjB,GADJ,UAEIrF,EAAM4J,sBAFV,aAEI,EAAsBvE,SAnB9B,SAsBGrF,EAAM+C,eAAeyF,KAAI,SAAC9F,EAAO+F,GAChC,OACE,cAACC,OAAD,CAAoBxH,MAAOwB,EAAMuB,GAAjC,SACGvB,EAAMhB,MADI+G,EAIhB,UAKP,cAAC,IAAD,CAAKjI,KAAM,GAAX,SACE,cAAC,IAAKwG,KAAN,CAAWC,MAAM,iBAAiBvF,KAAK,uBAAvC,SACE,cAAC,IAAD,CACEsG,YAAU,EACVgE,YAAU,EACV/D,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SACJC,cACAC,SAASJ,EAAMG,cAHN,EAKdV,YAAY,sBACZY,iBAAiB,cACjBpH,SAAU,SAACD,GACTlB,EAAMmK,uBAAuB,CAC3B1I,IAAK,uBACLP,MAAOA,GAEV,EACDA,MACyC,MAAvClB,EAAM4J,eAAeqC,eACjB,GADJ,UAEIjM,EAAM4J,sBAFV,aAEI,EAAsBqC,eAnB9B,SAsBGjM,EAAM8J,qBAAqBtB,KAAI,SAAC0D,EAAazD,GAC5C,OACE,cAACC,OAAD,CAAoBxH,MAAOgL,EAAYjI,GAAvC,SACGiI,EAAYxK,MADF+G,EAIhB,UAKP,cAAC,IAAD,CAAKjI,KAAM,GAAX,SACE,cAAC,IAAKwG,KAAN,CAAWC,MAAM,aAAavF,KAAK,oBAAnC,SACE,cAAC,IAAD,CACEsG,YAAU,EACVgE,YAAU,EACV/D,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SACJC,cACAC,SAASJ,EAAMG,cAHN,EAKdV,YAAY,kBACZY,iBAAiB,WACjBpH,SAAU,SAACD,GACTlB,EAAMmK,uBAAuB,CAC3B1I,IAAK,oBACLP,MAAOA,GAEV,EACDA,MACsC,MAApClB,EAAM4J,eAAeuC,YACjB,GADJ,UAEInM,EAAM4J,sBAFV,aAEI,EAAsBuC,YAnB9B,SAsBGnM,EAAM6J,aAAarB,KAAI,SAAC4D,EAAU3D,GACjC,OACE,cAACC,OAAD,CAAoBxH,MAAOkL,EAASnI,GAApC,SACGmI,EAAS1K,MADC+G,EAIhB,UAKP,cAAC,IAAD,CAAKjI,KAAM,GAAX,SACE,cAAC,IAAKwG,KAAN,CAAWC,MAAM,YAAYvF,KAAK,oBAAlC,SACE,cAAC,IAAD,CACEsG,YAAU,EACVgE,YAAU,EACVrE,YAAY,mBACZY,iBAAiB,WACjBN,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SACJC,cACAC,SAASJ,EAAMG,cAHN,EAKdlH,SAAU,SAACD,GACTlB,EAAMmK,uBAAuB,CAC3B1I,IAAK,oBACLP,MAAOA,GAEV,EACDA,MACmC,MAAjClB,EAAM4J,eAAeyC,SACjB,GADJ,UAEIrM,EAAM4J,sBAFV,aAEI,EAAsByC,SAnB9B,SA9WS,CACvB,CAAEpI,GAAI,EAAGvC,KAAM,UACf,CAAEuC,GAAI,EAAGvC,KAAM,UACf,CAAEuC,GAAI,EAAGvC,KAAM,OACf,CAAEuC,GAAI,EAAGvC,KAAM,YACf,CAAEuC,GAAI,EAAGvC,KAAM,eA+XmB8G,KAAI,SAAC6D,EAAU5D,GAC/B,OACE,cAACC,OAAD,CAAoBxH,MAAOmL,EAASpI,GAApC,SACGoI,EAAS3K,MADC+G,EAIhB,aAKT,eAAC,IAAD,CAAK1B,OAAQ,CAAC,GAAI,IAAlB,UACE,cAAC,IAAD,CAAK3E,GAAI,GAAT,SACE,cAAC,IAAD,CACEtB,OAAK,EACLD,KAAK,YACLJ,UAAU,yBACVE,QAAS,WA3WvBX,EAAMkK,kBAAkB,CACtBY,WAAY,GACZC,SAAU,GACVa,KAAM,EACNC,OAAQ,GACRC,UAAW,KAGb9L,EAAMoK,YAAY,CAChBU,WAAY,GACZC,SAAU,GACVa,KAAM,EACNC,OAAQ,GACRC,UAAW,KAGb9L,EAAMqD,gBACNrD,EAAMsD,qBACNtD,EAAMuD,gBACNvD,EAAMsK,sBACNtK,EAAMuK,mBAAN,eAA8BvK,EAAM+J,wBACpC/J,EAAMqK,iBAwVS,EACDiC,SAAS,SAPX,qBAYF,cAAC,IAAD,CAAKlK,GAAI,GAAT,SACE,cAAC,IAAD,CACEtB,OAAK,EACLD,KAAK,UACLJ,UAAU,yBACVE,QAAS,WACPkD,EAAKK,QACN,EANH,gCAiBf,IC9Hc5B,uBAXf,YAA+C,IAArBC,EAAoB,EAApBA,SAAUgK,EAAU,EAAVA,OAClC,MAAO,CACLC,aAAcjK,EAASiK,aACvBC,UAAWlK,EAASkK,UACpBC,UAAWnK,EAASmK,UACpB9C,eAAgBrH,EAASqH,eACzB+C,QAASpK,EAASoK,QAClBC,eAAgBL,EAAOK,eAE1B,GAEsC,CACrCxC,gBACAyC,mBACA5J,mBACAiH,sBACA5G,uBACAC,kBACAJ,oBACA8G,oBACA6C,oBATaxK,EAnUf,SAAkBtC,GAAQ,IAAD,MACvB8D,qBAAU,WACR9D,EAAMoK,YAAY,CAAEwB,KAAM,EAAGC,OAAQ,GAAIC,UAAW,IACrD,GAAE,IACH,MAAgCiB,oBAAS,GAAzC,mBACMC,GADN,UAEE,8EAEIC,EAAU,CACd,CACEpI,MAAO,OACPqI,UAAW,QACXjH,MAAO,GACPkH,MAAOnM,WAAW,KAAO,QAE3B,CACE6D,MAAO,OACPqI,UAAW,OAEXE,cAAc,EACdnH,MAAO,IACPkH,MAAOnM,WAAW,KAAO,QAE3B,CACE6D,MAAO,OACPwI,OAAQ,SAACC,GAAD,OACN,sBAAM7M,UAAWuM,EAAjB,SAA+B1G,IAAOgH,EAAIC,WAAWhH,OAAO,eADtD,EAGRiH,WAAY,OACZJ,cAAc,EACdnH,MAAO,KAET,CACEpB,MAAO,iBACPwI,OAAQ,SAACC,GAAD,OACN,sBAAM7M,UAAWuM,EAAjB,SAA+BM,EAAIpI,WAD7B,EAGRsI,WAAY,OACZJ,cAAc,EAEdnH,MAAO,KAET,CACEpB,MAAO,gBACPwI,OAAQ,SAACC,GAAD,OACN,sBAAM7M,UAAWuM,EAAjB,SAA+BM,EAAIhI,aAD7B,EAGRkI,WAAY,OACZJ,cAAc,EAEdnH,MAAO,KAET,CACEpB,MAAO,QACPwI,OAAQ,SAACC,GAAD,eACN,sBAAM7M,UAAWuM,EAAjB,mBAA+BM,EAAI1G,eAAnC,iBAA+B,EAAaH,aAA5C,aAA+B,EAAoB/E,MAD7C,EAGR8L,WAAY,OACZJ,cAAc,EACdnH,MAAO,KAET,CACEpB,MAAO,eACPwI,OAAQ,SAACC,GAAD,eACN,sBAAM7M,UAAWuM,EAAjB,mBAA+BM,EAAI1G,eAAnC,iBAA+B,EAAaF,mBAA5C,aAA+B,EAA0BhF,MADnD,EAGR8L,WAAY,OACZJ,cAAc,EAEdnH,MAAO,KAET,CACEpB,MAAO,QACPwI,OAAQ,SAACC,GAAD,eACN,sBAAM7M,UAAWuM,EAAjB,mBAA+BM,EAAI1G,eAAnC,iBAA+B,EAAalE,aAA5C,aAA+B,EAAoBhB,MAD7C,EAGR8L,WAAY,OACZJ,cAAc,EAEdnH,MAAO,IAET,CACEpB,MAAO,UACPwI,OAAQ,SAACC,GAAD,aAAS,sBAAM7M,UAAWuM,EAAjB,mBAA+BM,EAAI1G,eAAnC,aAA+B,EAAalF,MAArD,EACR8L,WAAY,OACZJ,cAAc,EAEdnH,MAAO,KAET,CACEpB,MAAO,OACPwI,OAAQ,SAACC,GAAD,OACN,sBAAM7M,UAAWuM,EAAjB,SAA+BM,EAAI7H,MAD7B,EAGR+H,WAAY,OACZJ,cAAc,EAEdnH,MAAO,IAET,CACEpB,MAAO,gBACPwI,OAAQ,SAACC,GAAD,OACN,sBAAM7M,UAAWuM,EAAjB,SAA+BM,EAAIvI,UAD7B,EAGRyI,WAAY,OACZJ,cAAc,EACdnH,MAAO,KAET,CACEpB,MAAO,iBACPwI,OAAQ,SAACC,GAAD,OACN,sBAAM7M,UAAWuM,EAAjB,SAA+BM,EAAI5I,WAD7B,EAGR8I,WAAY,OACZJ,cAAc,EACdnH,MAAO,KAET,CACEpB,MAAO,YACPwI,OAAQ,SAACC,GAAD,aACN,sBAAM7M,UAAWuM,EAAjB,mBAA+BM,EAAI1G,eAAnC,aAA+B,EAAa6G,eADtC,EAGRD,WAAY,OACZJ,cAAc,EACdnH,MAAO,KAET,CACEpB,MAAO,WACPwI,OAAQ,SAACC,GAAD,eACN,sBAAM7M,UAAWuM,EAAjB,mBAA+BM,EAAI1G,eAAnC,iBAA+B,EAAawF,gBAA5C,aAA+B,EAAuB1K,MADhD,EAGR8L,WAAY,OACZJ,cAAc,EACdnH,MAAO,KAET,CACEpB,MAAO,UACPpD,IAAK,SACLwE,MAAO,IACPkH,MAAOnM,WAAW,KAAO,QACzBqM,OAAQ,SAACC,EAAKI,GAAN,eACN,eAAC,IAAD,CAAO9M,KAAK,SAAZ,WACgE,KAA7D,UAAAZ,EAAM4M,sBAAN,eAAsBe,QAAQ,4BAC/B,mBACElN,UAAU,4BACViH,MAAO,CAAEkG,OAAQ,UAAWC,MAAO,WACnClN,QAAS,WACPX,EAAM8M,eAAeQ,EAAIrJ,GAC1B,KAIyD,KAA7D,UAAAjE,EAAM4M,sBAAN,eAAsBe,QAAQ,4BAC7B,cAAC,IAAD,CACEpC,UAAU,WACV1G,MAAM,sCACNiJ,UAAW,kBAAM9N,EAAM6M,eAAeS,EAAIrJ,GAA/B,EACX8J,OAAO,MACPC,WAAW,KACXvN,UAAU,UACVM,KACE,cAAC,IAAD,CAAoBN,UAAU,uCARlC,SAWE,mBACEA,UAAU,wBACViH,MAAO,CAAEkG,OAAQ,UAAWC,MAAO,iBA1BnC,IAmCNtJ,EAAOvE,EAAMwM,aAAahE,KAAI,SAAC8E,EAAK7L,GAAN,mBAAC,eAChC6L,GAD+B,IAElC7E,OACGzI,EAAM4J,eAAegC,KAAO,GAAK5L,EAAM4J,eAAekC,UACvDrK,EACA,GALgC,IA4B5BwM,EAAWC,IAAXD,OACR,OACE,eAAC,IAAD,CAAKlH,OAAQ,CAAC,GAAI,IAAlB,UACE,cAAC,IAAD,CACE5G,UAAU,WAMVI,kBAAmBP,EAAMiD,eACzBkL,eAAgBnO,EAAM0C,QAGxB,cAAC,IAAD,CAAKlC,KAAM,GAAX,SACE,eAAC,IAAD,CAAMuG,OAAQ,CAAC,GAAI,IAAnB,UACE,cAAC,IAAD,CAAKvG,KAAM,GAAI2B,GAAI,GAAIiM,GAAI,GAAIhM,GAAI,GAAnC,SACE,cAAC6L,EAAD,CACEtG,YAAY,YACZqE,YAAU,EACV7K,SAAU,SAACE,GACa,IAAlBA,EAAEE,OAAOL,QACXlB,EAAMoK,YAAN,2BACKpK,EAAM4J,gBADX,IAEEgC,KAAM,EACNC,OAAQ,MAEV7L,EAAMkK,kBAAN,2BACKlK,EAAM4J,gBADX,IAEEgC,KAAM,EACNC,OAAQ,MAGb,EACDwC,SAAU,SAACnN,GAzCvB,IAAkBoN,IA0CKpN,EAzCrBlB,EAAMkK,kBAAN,2BAA6BlK,EAAM4J,gBAAnC,IAAmDgC,KAAM,EAAGC,OAAQyC,KACpEtO,EAAMoK,YAAN,2BAAuBpK,EAAM4J,gBAA7B,IAA6CgC,KAAM,EAAGC,OAAQyC,IAyCnD,MAIL,cAAC,IAAD,CAAK9N,KAAM,GAAI2B,GAAI,EAAGiM,GAAI,EAAGhM,GAAI,EAAjC,SACE,cAAC,IAAD,CACEzB,QAAS,WACPX,EAAMiK,iBAAgB,EAEvB,EACDxJ,UAAU,mBACVM,KAAM,cAACwN,EAAA,EAAD,CAAgB9N,UAAU,aANlC,UAYIO,YAAY,cAIyC,KAA1D,UAAAhB,EAAM4M,sBAAN,eAAsBe,QAAQ,yBAC7B,cAAC,IAAD,CAAKnN,KAAM,GAAI2B,GAAI,EAAGiM,GAAI,EAAGhM,GAAI,EAAjC,SACE,cAAC,IAAD,CACEzB,QAAS,WACPX,EAAMiD,gBAAe,EACtB,EACDxC,UAAU,mBACVM,KAAM,cAACyN,EAAA,EAAD,CAAc/N,UAAU,aALhC,UAOIO,YAAY,wBAOxB,cAAC,IAAD,CAAKR,KAAM,GAAX,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAKC,UAAU,WAAf,UACE,cAAC,IAAD,CAAKD,KAAM,GAAX,SACE,cAAC,IAAD,CAAMiO,IAAI,aAAaC,SAAU1O,EAAM2M,QAASgC,MAAO,IAAvD,SACE,cAAC,IAAD,CACE1B,QAASA,EACT2B,WAAYrK,EACZsK,OAAQ,CAAEC,EAAG,MACbC,YAAY,EACZnO,KAAK,SACLH,UAAU,eAIhB,cAAC,IAAD,CAAKD,KAAM,GAAX,SACE,cAAC,IAAD,CACEI,KAAK,QACLoI,QAAO,UAAEhJ,EAAM4J,sBAAR,aAAE,EAAsBgC,KAC/BoD,SAAQ,UAAEhP,EAAM4J,sBAAR,aAAE,EAAsBkC,UAChCmD,MAAOjP,EAAM0M,UACbwC,UAjGd,SAAmBD,GACjB,MAAO,SAAWA,EAAQ,QAC3B,EAgGaE,iBAAe,EACfhO,SApHd,SAAsByK,EAAMoD,GAC1BhP,EAAMkK,kBAAN,2BACKlK,EAAM4J,gBADX,IAEEkC,UAAWkD,EACXpD,KAAc,GAARA,EAAY,EAAIA,KAExB5L,EAAMoK,YAAN,2BACKpK,EAAM4J,gBADX,IAEEkC,UAAWkD,EACXpD,KAAc,GAARA,EAAY,EAAIA,IAEzB,EA0GanL,UAAU,8CAMpB,cAAC,IAAD,IACA,cAAC2O,EAAD,MAGL,G","file":"static/js/30.5b68851f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Input, Tooltip } from \"antd\";\n\nconst formatNumber = (value) => new Intl.NumberFormat().format(value);\n\nexport default function NumericInput(props) {\n  const { value, onChange, onBlur } = props;\n\n  const handleChange = (e) => {\n    const { value: inputValue } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n\n    if (reg.test(inputValue) || inputValue === \"\" || inputValue === \"-\") {\n      onChange({ key: props.name, value: inputValue });\n    }\n  }; // '.' at the end or only '-' in the input box.\n\n  const handleBlur = () => {\n    let valueTemp = value;\n\n    if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n      valueTemp = value.slice(0, -1);\n    }\n\n    // onChange({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n    onBlur({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n  };\n\n  return (\n    <Input\n      {...props}\n      onChange={handleChange}\n      onBlur={props.onBlur && handleBlur}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function PageTitle(props) {\n  let history = useHistory();\n\n  const {\n    pageTitle,\n    pageText,\n    goBack,\n    addModelTile,\n    addModelTile2,\n    setIsModalVisible,\n    setIsModalVisible2,\n  } = props;\n\n  return (\n    <Col span={24} className=\"hp-mt-12\">\n      <Row>\n        <Col span={16} xs={16} md={12} xl={16}>\n          {goBack && (\n            <Link\n              to=\"#\"\n              onClick={() => {\n                history.goBack();\n              }}\n              className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n            >\n              <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n            </Link>\n          )}\n          <Row className=\"hp-d-inline-block\">\n            <Col span={24}>\n              {pageTitle && <h3 className=\"hp-mb-2 hp-mt-4\">{pageTitle}</h3>}\n            </Col>\n\n            <Col span={24}>\n              {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n            </Col>\n          </Row>\n        </Col>\n        <Col span={8} xs={8} md={12} xl={8}>\n          <div className=\"hp-float-right hp-d-inline-block\">\n            {addModelTile && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile}\n                </Button>\n              </div>\n            )}\n            {addModelTile2 && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"hp-pr-12\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible2(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile2}\n                </Button>\n              </div>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport {\n  Button,\n  Input,\n  Form,\n  Modal,\n  Radio,\n  Row,\n  Col,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport {\n  vehiclesAdd,\n  isModelVisible,\n  InputChangeValue,\n  vehicleNumberValidate,\n  engineNumberValidate,\n  chassisNumberValidate,\n} from \"../../../../store/Masters/Vehicles/vehiclesSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  getMiniVersion,\n  getMiniEmissionnorms,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniModels,\n} from \"../../../../store/mini/miniSlice\";\nimport {\n  RiCheckboxCircleLine,\n  RiAlertLine,\n  RiInformationLine,\n} from \"react-icons/ri\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddVehicles = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    // props.getMiniVersion();\n    props.getMiniEmissionnorms();\n    props.getMiniBrands();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      vehicleno:\n        props.rowdata?.vehicleType === \"new\"\n          ? props.rowdata.vehicletrno\n          : props.rowdata?.vehicleno,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletrno: props.rowdata.vehicletrno,\n      year: moment(props.rowdata?.year).format(\"YYYY\"),\n      engineno: props.rowdata.engineno,\n      emission_id: props.rowdata.emission_id,\n      version_id: props.rowdata.version_id,\n      chassisno: props.rowdata.chassisno,\n    };\n    props.vehiclesAdd({obj});\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      vehicleno:\n        props.rowdata?.vehicleType === \"new\"\n          ? props.rowdata.vehicletrno\n          : props.rowdata?.vehicleno,\n      brand_id:\n        props.rowdata?.brand_id == null\n          ? props.rowdata.brand.id\n          : props.rowdata?.brand_id,\n      brandfamily_id:\n        props.rowdata?.brandfamily_id == null\n          ? props.rowdata.brandfamily.id\n          : props.rowdata?.brandfamily_id,\n      model_id:\n        props.rowdata?.model_id == null\n          ? props.rowdata.model.id\n          : props.rowdata?.model_id,\n      vehicletrno: props.rowdata?.vehicletrno,\n      year: moment(props.rowdata?.year).format(\"YYYY\"),\n      engineno: props.rowdata?.engineno,\n      emission_id:\n        props.rowdata?.emission_id == null\n          ? props.rowdata.emission.id\n          : props.rowdata?.emission_id,\n      version_id:\n        props.rowdata?.version_id == null\n          ? props.rowdata.version.id\n          : props.rowdata?.version_id,\n      chassisno: props.rowdata?.chassisno,\n    };\n    props.vehiclesAdd({obj, type: props.type, typeId: props.typeId}, );\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Vehicle\n    </h5>\n  );\n\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck = current && current < moment(startDate, \"YYYY\");\n      }\n      if (endDate) {\n        endCheck = current && current > moment(endDate, \"YYYY\");\n      }\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n  // props.rowdata?.engineno ==\n  function checkValidation(type, data) {\n    console.log(\"type\", type, data.target.value);\n    if (type == \"engineno\") {\n      if (data.target.value == props.rowdata?.chassisno) {\n        props.InputChangeValue({\n          key: type,\n          value: \"\",\n        });\n        Modal.error({\n          icon: (\n            <span className=\"remix-icon\">\n              <RiInformationLine />\n            </span>\n          ),\n          title: (\n            <h5 className=\"hp-mb-0 hp-font-weight-500\">Engine Number Error</h5>\n          ),\n          content: (\n            <div>\n              <p className=\"hp-p1-body hp-text-color-black-80\">\n                Engine & Chassis Number should not be same{\" \"}\n              </p>\n            </div>\n          ),\n        });\n      }\n    } else {\n      if (data.target.value == props.rowdata?.engineno) {\n        props.InputChangeValue({\n          key: type,\n          value: \"\",\n        });\n        Modal.error({\n          icon: (\n            <span className=\"remix-icon\">\n              <RiInformationLine />\n            </span>\n          ),\n          title: (\n            <h5 className=\"hp-mb-0 hp-font-weight-500\">Chassis Number Error</h5>\n          ),\n          content: (\n            <div>\n              <p className=\"hp-p1-body hp-text-color-black-80\">\n                Engine & Chassis Number should not be same{\" \"}\n              </p>\n            </div>\n          ),\n        });\n      }\n    }\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      vehicleType: props.rowdata.vehicleType,\n      vehicleno: props.rowdata.vehicleno,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletrno: props.rowdata.vehicletrno,\n      version_id: props.rowdata.version_id,\n      emission_id: props.rowdata.emission_id,\n      year: props.rowdata.year,\n      engineno: props.rowdata.engineno,\n      chassisno: props.rowdata.chassisno,\n    });\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={616}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row gutter={[12, 0]}>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Vehicle Type\"\n              name=\"vehicleType\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select Your Vehicle Type!\",\n                },\n              ]}\n            >\n              <Radio.Group\n                name=\"vehicleType\"\n                onChange={ChangeHandeler}\n                value={props.rowdata?.vehicleType}\n              >\n                <Radio.Button value=\"new\">New Vehicle</Radio.Button>\n                <Radio.Button value=\"old\">Old Vehicle</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n          {props.rowdata?.vehicleType === \"new\" ? (\n            <>\n              <Col span={24} xs={24} xl={12} md={12}>\n                <Form.Item\n                  label=\"Vehicle TR Number:\"\n                  name=\"vehicletrno\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter Your Vehicle TR Number!\",\n                    },\n                    {\n                      pattern: new RegExp(\n                        /[A-Z][A-Z][0-9][0-9][A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9]$/i\n                      ),\n                      message: \"field does not accept numbers\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Input\n                    id=\"Version\"\n                    name=\"vehicletrno\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"EX:AP00ABCD1234\"\n                    minLength={10}\n                    maxLength={15}\n                    value={props.rowdata?.vehicletrno}\n                    onChange={(e) => {\n                      props.InputChangeValue({\n                        key: e.target.name,\n                        value: e.target.value.toUpperCase(),\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n            </>\n          ) : (\n            <>\n              <Col span={24} xs={24} xl={12} md={12}>\n                <Form.Item\n                  label=\"Vehicle Number\"\n                  name=\"vehicleno\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter Your Vehicle Number!\",\n                    },\n\n                    // {\n                    //   pattern: new RegExp(\n                    //     \"^[A-Z]{2}[0-9]{1,2}[A-Z]{1,2}[0-9]{1,4}$\"\n                    //   ),\n                    //   message: \"Please accept valid vehicle number\",\n                    // },\n                    {\n                      pattern: new RegExp(\n                        \"^[A-Z]{2}[0-9]{1,2}[A-Z]{1,2}[0-9]{4}$\"\n                      ),\n                      message: \"Please accept valid vehicle number\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Input\n                    id=\"vehicleno-input\"\n                    name=\"vehicleno\"\n                    label=\"Vehicle Number:\"\n                    maxLength={11}\n                    style={{ width: \"100%\", transform: \"uppercase\" }}\n                    placeholder=\"EX: AP00QQ0000\"\n                    onBlur={(data) => {\n                      console.log(\"data\", data);\n                      props.vehicleNumberValidate({\n                        vehicleno: data.target.value,\n                      });\n                    }}\n                    value={props.rowdata?.vehicleno}\n                    onChange={(e) => {\n                      props.InputChangeValue({\n                        key: e.target.name,\n                        value: e.target.value.toUpperCase(),\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n            </>\n          )}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Brand :\"\n              name=\"brand_id\"\n              rules={[{ required: true, message: \"Please select your Brand!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select  Brand\"\n                optionFilterProp=\"Brand\"\n                onChange={(value) => {\n                  props.getMiniBrandFamily({ brand: value });\n                  props.InputChangeValue({\n                    key: \"brand_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brand_id == null ? \"\" : props.rowdata?.brand_id\n                }\n              >\n                {props.miniBrandsList.map((brand, index) => {\n                  return (\n                    <Option key={index} value={brand.id}>\n                      {brand.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Brand Family :\"\n              name=\"brandfamily_id\"\n              rules={[\n                { required: true, message: \"Please select your Brand Family!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Brand Family\"\n                optionFilterProp=\"brand Family\"\n                onChange={(value) => {\n                  props.getMiniModels({ brandfamily: value });\n                  props.InputChangeValue({\n                    key: \"brandfamily_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brandfamily_id == null\n                    ? \"\"\n                    : props.rowdata?.brandfamily_id\n                }\n              >\n                {props.miniBrandFamilyList.map((brandfamily, index) => {\n                  return (\n                    <Option key={index} value={brandfamily.id}>\n                      {brandfamily.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Model :\"\n              name=\"model_id\"\n              rules={[{ required: true, message: \"Please select your Model!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Model\"\n                optionFilterProp=\"Model\"\n                onChange={(value) => {\n                  props.getMiniVersion({ model: value });\n                  props.InputChangeValue({\n                    key: \"model_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.model_id == null ? \"\" : props.rowdata?.model_id\n                }\n              >\n                {props.miniModelsList.map((model, index) => {\n                  return (\n                    <Option key={index} value={model.id}>\n                      {model.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Version :\"\n              name=\"version_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Version!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Version\"\n                optionFilterProp=\"version\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"version_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.version_id == null\n                    ? \"\"\n                    : props.rowdata?.version_id\n                }\n              >\n                {props.miniVersionList.map((version, index) => {\n                  return (\n                    <Option key={index} value={version.id}>\n                      {version.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Emission :\"\n              name=\"emission_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Emission!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select a Emission\"\n                optionFilterProp=\"emission\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"emission_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.emission_id == null\n                    ? \"\"\n                    : props.rowdata?.emission_id\n                }\n              >\n                {props.miniEmissionnorms.map((emission, index) => {\n                  return (\n                    <Option key={index} value={emission.id}>\n                      {emission.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Year\"\n              name=\"year\"\n              rules={[{ required: true, message: \"Select Year\" }]}\n              hasFeedback\n            >\n              <DatePicker\n                id=\"year\"\n                name=\"year\"\n                style={{ width: \"100%\" }}\n                picker=\"year\"\n                // format=\"YYYY\"\n                disabledDate={disableDateRanges({\n                  endDate: new Date(),\n                  startDate: 1990,\n                })}\n                placeholder=\"Select Year\"\n                value={props.rowdata?.year}\n                onChange={(date) => {\n                  console.log(\"Year\", date, typeof date);\n                  props.InputChangeValue({\n                    key: \"year\",\n                    value: date,\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Engine Number:\"\n              name=\"engineno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Engine Number!\",\n                },\n                {\n                  min: 10,\n                  message: \"Engine Number must be 10 digits!\",\n                }\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"engineno\"\n                name=\"engineno\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                minLength={10}\n                maxLength={20}\n                placeholder=\"Engine Number\"\n                value={props.rowdata?.engineno}\n                onBlur={(e) => {\n                  props.engineNumberValidate({ engineno: e.target.value });\n                  if (e.target.value != \"\") {\n                    checkValidation(\"engineno\", e);\n                  }\n                }}\n                // onChange={ChangeHandeler}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Chassis Number :\"\n              name=\"chassisno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Chassis Number!\",\n                },\n                {\n                  min: 10,\n                  message: \"Chassis Number must be 10 digits!\",\n                }\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <Input\n                id=\"Chassis Number\"\n                name=\"chassisno\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                placeholder=\"Chassis Number\"\n                minLength={10}\n                maxLength={20}\n                onBlur={(e) => {\n                  props.chassisNumberValidate({ chassisno: e.target.value });\n                  if (e.target.value != \"\") {\n                    checkValidation(\"chassisno\", e);\n                  }\n                }}\n                value={props.rowdata?.chassisno}\n                // onChange={ChangeHandeler}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ vehicles, mini }) {\n  return {\n    rowdata: vehicles.rowdata,\n    model: vehicles.model,\n    miniVersionList: mini.miniVersionList,\n    miniEmissionnorms: mini.miniEmissionnorms,\n    miniBrandsList: mini.miniBrandsList,\n    miniBrandFamilyList: mini.miniBrandFamilyList,\n    miniModelsList: mini.miniModelsList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  vehiclesAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniVersion,\n  getMiniEmissionnorms,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniModels,\n  vehicleNumberValidate,\n  engineNumberValidate,\n  chassisNumberValidate,\n})(AddVehicles);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Button,\n  Drawer,\n  Space,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport moment, { min } from \"moment\";\n\nimport {\n  isDrawerVisible,\n  FilterInputChangeValue,\n  getVehicles,\n  SetVehiclesParams,\n} from \"../../../../../store/Masters/Vehicles/vehiclesSlice\";\nimport {\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniPriority,\n  getMiniModels,\n  getMiniVehicletypes,\n  getMiniBrandsClearData,\n  getMiniBrandFamilyClearData,\n  getMiniPriorityClearData,\n  getMiniModelsClearData,\n  getMiniVehicletypesClearData,\n} from \"../../../../../store/mini/miniSlice\";\n\nimport {\n  getVersionfeatures,\n  SetVersionfeaturesParams,\n} from \"../../../../../store/Masters/Versionfeatures​/versionfeatures​Slice\";\n\nvar date = new Date(),\n  y = date.getFullYear(),\n  m = date.getMonth();\n\nconst filter = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniBrands();\n    props.getMiniBrandFamily();\n    props.getMiniModels();\n    props.getMiniVehicletypes();\n    props.getVersionfeatures({ ...props.versionfeaturesParams });\n    props.getMiniPriority();\n  }, []);\n\n  const FUELTYPE_CHOICES = [\n    { id: 1, name: \"Petrol\" },\n    { id: 2, name: \"Diesel\" },\n    { id: 3, name: \"Cng\" },\n    { id: 4, name: \"Electric\" },\n    { id: 5, name: \"Bio diesel\" },\n  ];\n\n  const onFinish = () => {\n    props.SetVehiclesParams({\n      ...props.vehiclesParams,\n      start_date: props.vehiclesParams.start_date,\n      end_date: props.vehiclesParams.end_date,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n\n    props.getVehicles({\n      ...props.vehiclesParams,\n      // start_date:\n      //   props.vehiclesParams.start_date != null &&\n      //   props.vehiclesParams.start_date != \"\"\n      //     ? moment(props.vehiclesParams.start_date).format(\"YYYY-MM-DD\")\n      //     : \"\",\n      // end_date:\n      //   props.vehiclesParams.end_date != null &&\n      //   props.vehiclesParams.end_date != \"\"\n      //     ? moment(props.vehiclesParams.end_date)\n      //         .add(1, \"days\")\n      //         .format(\"YYYY-MM-DD\")\n      //     : \"\",\n      start_date: props.vehiclesParams.start_date,\n      end_date: props.vehiclesParams.end_date,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.isDrawerVisible(false);\n  };\n\n  function clearFilter() {\n    props.SetVehiclesParams({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n\n    props.getVehicles({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n\n    props.getMiniBrands();\n    props.getMiniBrandFamily();\n    props.getMiniModels();\n    props.getMiniVehicletypes();\n    props.getVersionfeatures({ ...props.versionfeaturesParams });\n    props.getMiniPriority();\n  }\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.vehiclesParams?.start_date,\n      end_date: props.vehiclesParams?.end_date,\n      version__brand: props.vehiclesParams.version__brand,\n      version__brandfamily: props.vehiclesParams.version__brandfamily,\n      version__model: props.vehiclesParams.version__model,\n      version__vehicletype: props.vehiclesParams.version__vehicletype,\n      version__priority: props.vehiclesParams.version__priority,\n      version__fueltype: props.vehiclesParams.version__fueltype,\n    });\n  }, [props.vehiclesParams]);\n\n  function onSearch(val) {\n    props.getVehicles({ page: 1, search: val, page_size: 10 });\n  }\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Drawer\n          title=\"Filters\"\n          width={420}\n          className=\"hp-drawer-mobile\"\n          onClose={() => {\n            props.isDrawerVisible(false);\n          }}\n          placement=\"right\"\n          visible={props.drawer}\n          bodyStyle={{\n            paddingBottom: 10,\n          }}\n        >\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              <Col span={12}>\n                <Form.Item label=\"From Date\" name=\"start_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: new Date(),\n                    })}\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"start_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                      if (date == null) {\n                        props.FilterInputChangeValue({\n                          key: \"end_date\",\n                          value: \"\",\n                        });\n                      }\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"To Date\" name=\"end_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment().format(\"YYYY-MM-DD\"),\n                      startDate: moment(\n                        props.vehiclesParams?.start_date\n                      ).format(\"YYYY-MM-DD\"),\n                    })}\n                    disabled={\n                      props.vehiclesParams.start_date == null ||\n                      props.vehiclesParams.start_date == \"\"\n                        ? true\n                        : false\n                    }\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"end_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Brand :\" name=\"version__brand\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select  Brand\"\n                    optionFilterProp=\"Brand\"\n                    onChange={(value) => {\n                      props.getMiniBrandFamily({ brand: value });\n                      props.getMiniBrandFamilyClearData,\n                        props.getMiniModelsClearData,\n                        props.FilterInputChangeValue({\n                          key: \"version__brand\",\n                          value: value,\n                        });\n                    }}\n                    value={\n                      props.vehiclesParams.brand_id == null\n                        ? \"\"\n                        : props.vehiclesParams?.brand_id\n                    }\n                  >\n                    {props.miniBrandsList.map((brand, index) => {\n                      return (\n                        <Option key={index} value={brand.id}>\n                          {brand.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Brand Family :\" name=\"version__brandfamily\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Brand Family\"\n                    optionFilterProp=\"brand Family\"\n                    onChange={(value) => {\n                      props.getMiniModels({ brandfamily: value });\n                      props.getMiniModelsClearData,\n                        props.FilterInputChangeValue({\n                          key: \"version__brandfamily\",\n                          value: value,\n                        });\n                    }}\n                    value={\n                      props.vehiclesParams.brandfamily_id == null\n                        ? \"\"\n                        : props.vehiclesParams?.brandfamily_id\n                    }\n                  >\n                    {props.miniBrandFamilyList.map((brandfamily, index) => {\n                      return (\n                        <Option key={index} value={brandfamily.id}>\n                          {brandfamily.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Model :\" name=\"version__model\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Model\"\n                    optionFilterProp=\"Model\"\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"version__model\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.vehiclesParams.model_id == null\n                        ? \"\"\n                        : props.vehiclesParams?.model_id\n                    }\n                  >\n                    {props.miniModelsList.map((model, index) => {\n                      return (\n                        <Option key={index} value={model.id}>\n                          {model.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Vehicle Type :\" name=\"version__vehicletype\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Vehicle Type\"\n                    optionFilterProp=\"vehicletype\"\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"version__vehicletype\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.vehiclesParams.vehicletype_id == null\n                        ? \"\"\n                        : props.vehiclesParams?.vehicletype_id\n                    }\n                  >\n                    {props.miniVehicletypesList.map((vehicletype, index) => {\n                      return (\n                        <Option key={index} value={vehicletype.id}>\n                          {vehicletype.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Priority :\" name=\"version__priority\">\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Priority\"\n                    optionFilterProp=\"priority\"\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"version__priority\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.vehiclesParams.priority_id == null\n                        ? \"\"\n                        : props.vehiclesParams?.priority_id\n                    }\n                  >\n                    {props.miniPriority.map((priority, index) => {\n                      return (\n                        <Option key={index} value={priority.id}>\n                          {priority.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Fuel Type\" name=\"version__fueltype\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Fuel Type\"\n                    optionFilterProp=\"fueltype\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"version__fueltype\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.vehiclesParams.fueltype == null\n                        ? \"\"\n                        : props.vehiclesParams?.fueltype\n                    }\n                  >\n                    {FUELTYPE_CHOICES.map((fueltype, index) => {\n                      return (\n                        <Option key={index} value={fueltype.id}>\n                          {fueltype.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    clearFilter();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n              </Col>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Apply\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Drawer>\n      </Col>\n    </Row>\n  );\n};\n\nfunction mapStateToProps({ vehicles, mini, versionfeatures }) {\n  return {\n    drawer: vehicles.drawer,\n    vehiclesParams: vehicles.vehiclesParams,\n    miniBrandsList: mini.miniBrandsList,\n    miniBrandFamilyList: mini.miniBrandFamilyList,\n    miniPriority: mini.miniPriority,\n    miniModelsList: mini.miniModelsList,\n    miniVehicletypesList: mini.miniVehicletypesList,\n\n    versionfeaturesParams: versionfeatures.versionfeaturesParams,\n    versionfeatureslist: versionfeatures.versionfeatureslist,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  isDrawerVisible,\n  SetVehiclesParams,\n  FilterInputChangeValue,\n  getVehicles,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniPriority,\n  getMiniModels,\n  getMiniVehicletypes,\n  getVersionfeatures,\n  SetVersionfeaturesParams,\n\n  getMiniBrandsClearData,\n  getMiniBrandFamilyClearData,\n  getMiniPriorityClearData,\n  getMiniModelsClearData,\n  getMiniVehicletypesClearData,\n})(filter);\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Input,\n  Card,\n  Pagination,\n  Popconfirm,\n  Spin,\n  Button,\n} from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { Search } from \"react-iconly\";\nimport { connect } from \"react-redux\";\nimport { FilterOutlined, UploadOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport PageTitle from \"../../../../layout/components/content/page-title\";\nimport moment from \"moment\";\nimport {\n  getVehicles,\n  vehiclesDelete,\n  isModelVisible,\n  SetVehiclesParams,\n  isDrawerVisible,\n  getvehicleByID\n} from \"../../../../store/Masters/Vehicles/vehiclesSlice\";\nimport AddVehicles from \"./addVehicles\";\nimport { isMobile } from \"react-device-detect\";\nimport {\n  getMiniBrandFamily,\n  getMiniModels,\n  getMiniVersion,\n} from \"../../../../store/mini/miniSlice\";\nimport Filter from \"./Filters/Filter\";\n\nfunction Vehicles(props) {\n  useEffect(() => {\n    props.getVehicles({ page: 1, search: \"\", page_size: 10 });\n  }, []);\n  const [isActive, setIsActive] = useState(false);\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: 70,\n      fixed: isMobile ? null : \"left\",\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: 120,\n      fixed: isMobile ? null : \"left\",\n    },\n    {\n      title: \"Date\",\n      render: (row) => (\n        <span className={columnClass}>{moment(row.createdon).format(\"DD-MM-YYYY\")}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 120,\n    },\n    {\n      title: \"Vehicle Number\",\n      render: (row) => (\n        <span className={columnClass}>{row.vehicleno}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: 120,\n    },\n    {\n      title: \"Vehicle TR No\",\n      render: (row) => (\n        <span className={columnClass}>{row.vehicletrno}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: 120,\n    },\n    {\n      title: \"Brand\",\n      render: (row) => (\n        <span className={columnClass}>{row.version?.brand?.name}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 180,\n    },\n    {\n      title: \"Brand Family\",\n      render: (row) => (\n        <span className={columnClass}>{row.version?.brandfamily?.name}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: 120,\n    },\n    {\n      title: \"Model\",\n      render: (row) => (\n        <span className={columnClass}>{row.version?.model?.name}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: 80,\n    },\n    {\n      title: \"Version\",\n      render: (row) => <span className={columnClass}>{row.version?.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: 180,\n    },\n    {\n      title: \"Year\",\n      render: (row) => (\n        <span className={columnClass}>{row.year}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.year.length - b.year.length,\n      width: 70,\n    },\n    {\n      title: \"Engine Number\",\n      render: (row) => (\n        <span className={columnClass}>{row.engineno}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 210,\n    },\n    {\n      title: \"Chassis Number\",\n      render: (row) => (\n        <span className={columnClass}>{row.chassisno}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 200,\n    },\n    {\n      title: \"Fuel Type\",\n      render: (row) => (\n        <span className={columnClass}>{row.version?.fueltype_name}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 100,\n    },\n    {\n      title: \"Priority\",\n      render: (row) => (\n        <span className={columnClass}>{row.version?.priority?.name}</span>\n      ),\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: 100,\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: 100,\n      fixed: isMobile ? null : \"right\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {props.userAccessList?.indexOf(\"Masters.change_vehicle\") !== -1 && (\n          <i\n            className=\"ri-edit-box-line hp-mr-2 \"\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n            onClick={() => {\n              props.getvehicleByID(row.id)\n            }}\n          ></i>\n          )}\n\n        {props.userAccessList?.indexOf(\"Masters.delete_vehicle\") !== -1 && (\n          <Popconfirm\n            placement=\"topRight\"\n            title=\"Are you sure to delete this Record?\"\n            onConfirm={() => props.vehiclesDelete(row.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            className=\"hp-ml-8\"\n            icon={\n              <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n            }\n          >\n            <i\n              className=\"ri-delete-bin-2-line \"\n              style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n            ></i>\n          </Popconfirm>\n          )}\n        </Space>\n      ),\n    },\n  ];\n\n  const data = props.vehicleslist.map((row, key) => ({\n    ...row,\n    index:\n      (props.vehiclesParams.page - 1) * props.vehiclesParams.page_size +\n      key +\n      1,\n  }));\n\n  function onPageChange(page, pageSize) {\n    props.SetVehiclesParams({\n      ...props.vehiclesParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getVehicles({\n      ...props.vehiclesParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.SetVehiclesParams({ ...props.vehiclesParams, page: 1, search: val });\n    props.getVehicles({ ...props.vehiclesParams, page: 1, search: val });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  const { Search } = Input;\n  return (\n    <Row gutter={[12, 12]} >\n      <PageTitle\n        pageTitle=\"Vehicles\"\n        // addModelTile={\n        //   props.userAccessList?.indexOf(\"Masters.add_vehicle\") !== -1 &&\n        //   \"Add Vehicle\"\n        // }\n        // goBack={true}\n        setIsModalVisible={props.isModelVisible}\n        isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Row  gutter={[12, 12]}>\n          <Col span={24} xs={24} sm={24} md={14}>\n            <Search\n              placeholder=\"Search...\"\n              allowClear\n              onChange={(e) => {\n                if (e.target.value == \"\") {\n                  props.getVehicles({\n                    ...props.vehiclesParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                  props.SetVehiclesParams({\n                    ...props.vehiclesParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                }\n              }}\n              onSearch={(value) => {\n                onSearch(value);\n              }}\n            />\n          </Col>\n\n          <Col span={24} xs={8} sm={8} md={3}>\n            <Button\n              onClick={() => {\n                props.isDrawerVisible(true);\n                // setIsActive((current) => !current);\n              }}\n              className=\"hp-w-100 hp-p-12\"\n              icon={<FilterOutlined className=\"hp-mr-10\" />}\n              // style={{\n              //   backgroundColor: isActive ? \"#0010f7\" : \"\",\n              //   color: isActive ? \"#fff\" : \"\",\n              // }}\n            >\n              {!isMobile && \"Filter\"}\n            </Button>\n          </Col>\n\n          {props.userAccessList?.indexOf(\"Masters.add_vehicle\") !== -1 && (\n            <Col span={24} xs={8} sm={8} md={4}>\n              <Button\n                onClick={() => {\n                  props.isModelVisible(true);\n                }}\n                className=\"hp-w-100 hp-p-12\"\n                icon={<PlusOutlined className=\"hp-mr-10\" />}\n              >\n                {!isMobile && \"Add Vehicles\"}\n              </Button>\n            </Col>\n          )}\n        </Row>\n      </Col>\n\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\">\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 1300 }}\n                  pagination={false}\n                  size=\"middle\"\n                  className=\"hp-p-0\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.vehiclesParams?.page}\n                pageSize={props.vehiclesParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <AddVehicles />\n      <Filter />\n    </Row>\n  );\n}\n\nfunction mapAreaToProps({ vehicles, system }) {\n  return {\n    vehicleslist: vehicles.vehicleslist,\n    noofpages: vehicles.noofpages,\n    listCount: vehicles.listCount,\n    vehiclesParams: vehicles.vehiclesParams,\n    loading: vehicles.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapAreaToProps, {\n  getVehicles,\n  vehiclesDelete,\n  isModelVisible,\n  SetVehiclesParams,\n  getMiniBrandFamily,\n  getMiniModels,\n  getMiniVersion,\n  isDrawerVisible,\n  getvehicleByID\n})(Vehicles);\n"],"sourceRoot":""}