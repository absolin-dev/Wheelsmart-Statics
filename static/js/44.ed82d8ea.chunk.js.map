{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/components/data-entry/inputs/numberInput.jsx","view/pages/MastersDashboard/dealer/addDealer.jsx","view/pages/MastersDashboard/dealer/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","NumericInput","value","onChange","onBlur","e","inputValue","target","test","key","name","valueTemp","charAt","length","slice","replace","connect","dealers","mini","dealerUserData","userdata","model","miniStatesList","miniDistrictList","miniCityList","miniAreaList","miniBanksList","dealerAdd","isModelVisible","InputChangeValue","getMinicountry","getMiniStates","getMiniCity","getMiniDistrict","getMiniBanks","getMiniArea","userEmailValidation","userMobileValidation","Form","useForm","form","ChangeHandeler","Option","Select","useEffect","handleResetInputValues","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","setFieldsValue","first_name","last_name","email","phone","aadharno","bank_id","accono","ifsccode","gstno","state_id","district_id","city_id","area_id","pincode","username","password","address","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","onFinish","obj","user","group_ids","deviceaccess","handleAdd","handleUpdate","md","xs","Item","label","rules","required","message","pattern","RegExp","hasFeedback","style","placeholder","min","getValueProps","maxLength","minLength","showSearch","optionFilterProp","onSearch","console","log","filterOption","input","option","children","toLowerCase","includes","map","bank","index","transform","toUpperCase","state","district","city","area","TextArea","system","dealerslist","noofpages","listCount","dealersParams","loading","userAccessList","getDealers","dealerEdit","dealerDelete","SetDealersParams","clearDealerList","page","search","page_size","columnClass","columns","dataIndex","fixed","filterSearch","render","code","filterMode","row","record","indexOf","cursor","color","placement","onConfirm","okText","cancelText","data","Search","Input","gutter","isModalVisible","sm","allowClear","val","tip","spinning","delay","dataSource","scroll","x","pagination","current","pageSize","total","showTotal","showSizeChanger"],"mappings":"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","file":"static/js/44.ed82d8ea.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Input, Tooltip } from \"antd\";\n\nconst formatNumber = (value) => new Intl.NumberFormat().format(value);\n\nexport default function NumericInput(props) {\n  const { value, onChange, onBlur } = props;\n\n  const handleChange = (e) => {\n    const { value: inputValue } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n\n    if (reg.test(inputValue) || inputValue === \"\" || inputValue === \"-\") {\n      onChange({ key: props.name, value: inputValue });\n    }\n  }; // '.' at the end or only '-' in the input box.\n\n  const handleBlur = () => {\n    let valueTemp = value;\n\n    if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n      valueTemp = value.slice(0, -1);\n    }\n\n    // onChange({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n    onBlur({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n  };\n\n  return (\n    <Input\n      {...props}\n      onChange={handleChange}\n      onBlur={props.onBlur && handleBlur}\n    />\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport {\n  Button,\n  Input,\n  Form,\n  Modal,\n  Badge,\n  Row,\n  Col,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  isModelVisible,\n  InputChangeValue,\n  dealerAdd,\n  userEmailValidation,\n  userMobileValidation,\n} from \"../../../../store/Masters/Dealers/dealersSlice\";\nimport {\n  RiCheckboxCircleLine,\n  RiAlertLine,\n  RiInformationLine,\n} from \"react-icons/ri\";\nimport {\n  getMinicountry,\n  getMiniStates,\n  getMiniCity,\n  getMiniDistrict,\n  getMiniBanks,\n  getMiniArea,\n} from \"../../../../store/mini/miniSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\nconst AddDealer = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const { Option } = Select;\n\n  useEffect(() => {\n    props.getMiniStates();\n    props.getMiniBanks();\n  }, []);\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      user: {\n        username: props.dealerUserData?.phone,\n        email: props.dealerUserData?.email,\n        phone: props.dealerUserData?.phone,\n        group_ids: props.dealerUserData?.group_ids,\n        first_name: props.dealerUserData?.first_name,\n        last_name: props.dealerUserData?.last_name,\n        state_id: props.dealerUserData?.state_id,\n        district_id: props.dealerUserData?.district_id,\n        city_id: props.dealerUserData?.city_id,\n        area_id: props.dealerUserData?.area_id,\n        address: props.dealerUserData?.address,\n        pincode: props.dealerUserData?.pincode,\n        // password: props.dealerUserData?.password,\n        deviceaccess: 1,\n      },\n      bank_id: props.dealerUserData?.bank_id,\n      aadharno: props.dealerUserData?.aadharno,\n      gstno: props.dealerUserData?.gstno,\n      accono: props.dealerUserData?.accono,\n      ifsccode: props.dealerUserData?.ifsccode,\n    };\n    props.dealerAdd(obj);\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.dealerUserData?.id,\n      user: {\n        username: props.dealerUserData?.phone,\n        email: props.dealerUserData?.email,\n        phone: props.dealerUserData?.phone,\n        // group_ids: props.dealerUserData?.group_ids,\n        first_name: props.dealerUserData?.first_name,\n        last_name: props.dealerUserData?.last_name,\n        state_id: props.dealerUserData?.state_id,\n        district_id: props.dealerUserData?.district_id,\n        city_id: props.dealerUserData?.city_id,\n        area_id: props.dealerUserData?.area_id,\n        address: props.dealerUserData?.address,\n        pincode: props.dealerUserData?.pincode,\n        password: props.dealerUserData?.password,\n        deviceaccess: 1,\n      },\n      bank_id: props.dealerUserData?.bank_id,\n      aadharno: props.dealerUserData?.aadharno,\n      gstno: props.dealerUserData?.gstno,\n      accono: props.dealerUserData?.accono,\n      ifsccode: props.dealerUserData?.ifsccode,\n    };\n    props.dealerAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  // function checkUserName(data) {\n  //   Modal.info({\n  //     icon: (\n  //       <span className=\"remix-icon\">\n  //         <RiInformationLine />\n  //       </span>\n  //     ),\n  //     title: <h5 className=\"hp-mb-0 hp-font-weight-500\">User Name Error</h5>,\n  //     content: (\n  //       <div>\n  //         <p className=\"hp-p1-body hp-text-color-black-80\">\n  //           This user name already exit {props.username}\n  //         </p>\n  //       </div>\n  //     ),\n  //   });\n  // }\n\n  const FooterAddOrUpdate = () => {\n    if (props.dealerUserData.id == null || props.dealerUserData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.dealerUserData.id == null || props.dealerUserData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Dealer\n    </h5>\n  );\n\n  const onSearch = (value) => {\n    console.log(\"search:\", value);\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      first_name: props.dealerUserData.first_name,\n      last_name: props.dealerUserData.last_name,\n      email: props.dealerUserData.email,\n      phone: props.dealerUserData.phone,\n      aadharno: props.dealerUserData.aadharno,\n      bank_id: props.dealerUserData.bank_id,\n      accono: props.dealerUserData.accono,\n      ifsccode: props.dealerUserData.ifsccode,\n      gstno: props.dealerUserData.gstno,\n      state_id: props.dealerUserData.state_id,\n      district_id: props.dealerUserData.district_id,\n      city_id: props.dealerUserData.city_id,\n      area_id: props.dealerUserData.area_id,\n      pincode: props.dealerUserData.pincode,\n      username: props.dealerUserData.username,\n      password: props.dealerUserData.password,\n      username: props.dealerUserData.username,\n      address: props.dealerUserData.address,\n    });\n  }, [props.dealerUserData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={816}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={() => {\n          if (props.dealerUserData.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"First Name :\"\n              name=\"first_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your First name!\",\n                },\n                {\n                  pattern: new RegExp(/[a-z][A-Z]$/i),\n                  message: \"field does not accept numbers\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"first_name\"\n                name=\"first_name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"First name\"\n                value={\n                  props.dealerUserData.first_name == null\n                    ? \"\"\n                    : props.dealerUserData?.first_name\n                }\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Last Name :\"\n              name=\"last_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Last Name!\",\n                },\n                {\n                  pattern: new RegExp(/[a-z][A-Z]$/i),\n                  message: \"field does not accept numbers\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"last_name\"\n                name=\"last_name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"last name\"\n                value={\n                  props.dealerUserData?.last_name == null\n                    ? \"\"\n                    : props.dealerUserData.last_name\n                }\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Email :\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Email!\",\n                },\n                {\n                  pattern: new RegExp(\n                    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                  ),\n                  message: \"field does not accept Email\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"email\"\n                name=\"email\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Email\"\n                onBlur={(e) => {\n                  props.userEmailValidation({\n                    email: e.target.value,\n                  });\n                }}\n                value={\n                  props.dealerUserData?.email == null\n                    ? \"\"\n                    : props.dealerUserData.email\n                }\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Phone :\"\n              name=\"phone\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Phone!\",\n                },\n                {\n                  min: 10,\n                  message: \"Phone Number Must be 10 number\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"phone\"\n                name=\"phone\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Phone\"\n                maxLength={10}\n                minLength={10}\n                onBlur={(e) => {\n                  props.userMobileValidation({ phone: e.value });\n                }}\n                value={\n                  props.dealerUserData.phone == null\n                    ? \"\"\n                    : props.dealerUserData?.phone\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Aadhar Number:\"\n              name=\"aadharno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Aadhar Number!\",\n                },\n                {\n                  pattern: new RegExp(/^\\d{12}$/g),\n                  message: \"field does not accept aadhar number\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"aadharno\"\n                name=\"aadharno\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Aadhar Number\"\n                maxLength={12}\n                value={\n                  props.dealerUserData?.aadharno == null\n                    ? \"\"\n                    : props.dealerUserData?.aadharno\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Bank :\"\n              name=\"bank_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Bank!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select a Bank\"\n                optionFilterProp=\"children\"\n                onSearch={onSearch}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"bank_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.dealerUserData.bank_id == null\n                    ? \"\"\n                    : props.dealerUserData?.bank_id\n                }\n              >\n                {props.miniBanksList.map((bank, index) => {\n                  return (\n                    <Option key={index} value={bank.id}>\n                      {bank.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Account Number :\"\n              name=\"accono\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Account Number !\",\n                },\n                {\n                  min: 9,\n                  message: \"Account Number Must be minimum 9 characters\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"accono\"\n                name=\"accono\"\n                style={{ width: \"100%\" }}\n                maxLength={18}\n                placeholder=\"Account Number\"\n                value={\n                  props.dealerUserData.accono == null\n                    ? \"\"\n                    : props.dealerUserData?.accono\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"IFSC Code :\"\n              name=\"ifsccode\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your IFSC Code!\",\n                },\n                {\n                  pattern: new RegExp(/[A-Z]{4}[0][a-zA-Z0-9]{6}$/i),\n                  message: \"field does not accept IFSC code\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Ifsccode\"\n                name=\"ifsccode\"\n                maxLength={11}\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                placeholder=\"IFSC Code\"\n                value={props.dealerUserData?.ifsccode}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"GST Number\"\n              name=\"gstno\"\n              rules={[\n                // {\n                //   required: true,\n                //   message: \"Please input your GST Number!\",\n                // },\n                {\n                  min: 15,\n                  message: \"GST Number must be minimum 15 characters.\",\n                },\n                // {\n                //   pattern: new RegExp(\n                //     /^[0-9]{2}([A-Z]{3}[P,C,H,A,B,G,J,L,F,T][A-Z][0-9]{4}[A-Z])[0-9][Z][0-9]$/i\n                //   ),\n                //   message: \"Please input your GST number!\",\n                // }\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"gstno\"\n                name=\"gstno\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                maxLength={15}\n                placeholder=\"GST Number\"\n                value={props.dealerUserData?.gstno}\n                onChange={ChangeHandeler}\n                // normalize={value => (value || '').toUpperCase()}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"State :\"\n              name=\"state_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your State!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select State\"\n                optionFilterProp=\"state\"\n                onChange={(value) => {\n                  props.getMiniDistrict({ state: value });\n                  props.InputChangeValue({\n                    key: \"state_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.dealerUserData.state_id == null\n                    ? \"\"\n                    : props.dealerUserData?.state_id\n                }\n              >\n                {props.miniStatesList.map((state, index) => {\n                  return (\n                    <Option key={index} value={state.id}>\n                      {state.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"District :\"\n              name=\"district_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your District!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select District\"\n                optionFilterProp=\"district\"\n                onChange={(value) => {\n                  props.getMiniCity({ district: value });\n                  props.InputChangeValue({\n                    key: \"district_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.dealerUserData.district_id == null\n                    ? \"\"\n                    : props.dealerUserData?.district_id\n                }\n              >\n                {props.miniDistrictList.map((district, index) => {\n                  return (\n                    <Option key={index} value={district.id}>\n                      {district.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"City :\"\n              name=\"city_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your City!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select City\"\n                optionFilterProp=\"city\"\n                onChange={(value) => {\n                  props.getMiniArea({ city: value });\n                  props.InputChangeValue({\n                    key: \"city_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.dealerUserData.city_id == null\n                    ? \"\"\n                    : props.dealerUserData?.city_id\n                }\n              >\n                {props.miniCityList.map((city, index) => {\n                  return (\n                    <Option key={index} value={city.id}>\n                      {city.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Area :\"\n              name=\"area_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your Area!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Area\"\n                optionFilterProp=\"area\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"area_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.dealerUserData.area_id == null\n                    ? \"\"\n                    : props.dealerUserData?.area_id\n                }\n              >\n                {props.miniAreaList.map((area, index) => {\n                  return (\n                    <Option key={index} value={area.id}>\n                      {area.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Pincode :\"\n              name=\"pincode\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Pincode!\",\n                },\n                {\n                  pattern: new RegExp(/^\\d{6}$/g),\n                  message: \"field does not accept pincode\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"pincode\"\n                name=\"pincode\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Pincode\"\n                maxLength={6}\n                value={\n                  props.dealerUserData.pincode == null\n                    ? \"\"\n                    : props.dealerUserData?.pincode\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          {/* <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"User Name :\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your User Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"username\"\n                name=\"username\"\n                style={{ width: \"100%\" }}\n                placeholder=\"User Name\"\n                // onBlur={(value) => {\n                //   checkUserName(value);\n                // }}\n                value={\n                  props.dealerUserData.username == null\n                    ? \"\"\n                    : props.dealerUserData?.username\n                }\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          {props.dealerUserData.id == null && (\n            <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n              <Form.Item\n                label=\"Password :\"\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your password!\",\n                  },\n                ]}\n                hasFeedback\n              >\n                <Input.Password\n                  id=\"password\"\n                  name=\"password\"\n                  style={{ width: \"100%\" }}\n                  placeholder=\"Password\"\n                  value={\n                    props.dealerUserData?.password == null\n                      ? \"\"\n                      : props.dealerUserData?.password\n                  }\n                  onChange={ChangeHandeler}\n                />\n              </Form.Item>\n            </Col>\n          )} */}\n\n          <Col md={24} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Address :\"\n              name=\"address\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Address!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input.TextArea\n                id=\"address\"\n                name=\"address\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Address\"\n                value={props.dealerUserData?.address}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ dealers, mini }) {\n  return {\n    dealerUserData: dealers.userdata,\n    model: dealers.model,\n    miniStatesList: mini.miniStatesList,\n    miniDistrictList: mini.miniDistrictList,\n    miniCityList: mini.miniCityList,\n    miniAreaList: mini.miniAreaList,\n    miniBanksList: mini.miniBanksList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  dealerAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMinicountry,\n  getMiniStates,\n  getMiniCity,\n  getMiniDistrict,\n  getMiniBanks,\n  getMiniArea,\n  userEmailValidation,\n  userMobileValidation,\n})(AddDealer);\n","import React, { useEffect, useState } from \"react\";\n\nimport { Row, Col, Input, Card, Pagination, Spin, Popconfirm } from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\n\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport AddDealer from \"./addDealer\";\n\nimport {\n  getDealers,\n  dealerEdit,\n  dealerDelete,\n  isModelVisible,\n  SetDealersParams,\n  clearDealerList\n} from \"../../../../store/Masters/Dealers/dealersSlice\";\nimport {\n  getMiniStates,\n  getMiniCity,\n  getMiniDistrict,\n  getMiniArea,\n} from \"../../../../store/mini/miniSlice\";\n\nfunction Dealer(props) {\n  useEffect(() => {\n    props.getDealers({ page: 1, search: \"\", page_size: 10 });\n  }, []);\n\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: 70,\n      fixed: \"left\",\n      // sorter: (a, b) => a.index - b.index,\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: 120,\n      fixed: \"left\",\n      render: (code) => <span className={columnClass}>{code}</span>,\n    },\n    // {\n    //   title: \"User Name\",\n    //   filterMode: \"tree\",\n    //   filterSearch: true,\n    //   render: (row) => <span className={columnClass}>{row.user?.username}</span>,\n    //   width: \"20%\",\n    // },\n    {\n      title: \"Name\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterMode: \"tree\",\n      filterSearch: true,\n      render: (row) => (\n        <span className={columnClass}>\n          {\" \"}\n          {row.user?.first_name} {row.user?.last_name}{\" \"}\n        </span>\n      ),\n      width: \"20%\",\n    },\n    {\n      title: \"Email\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: \"20%\",\n      filterMode: \"tree\",\n      filterSearch: true,\n      render: (row) => <span className={columnClass}>{row.user?.email}</span>,\n    },\n    {\n      title: \"Mobile\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterMode: \"tree\",\n      filterSearch: true,\n      render: (row) => <span className={columnClass}>{row.user?.phone}</span>,\n      width: \"20%\",\n    },\n\n    {\n      title: \"Aadhar Number\",\n      // dataIndex: \"mobile\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterMode: \"tree\",\n      filterSearch: true,\n      render: (row) => <span className={columnClass}>{row.aadharno}</span>,\n      width: \"20%\",\n    },\n    {\n      title: \"Address\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterMode: \"tree\",\n      filterSearch: true,\n      render: (row) => <span className={columnClass}>{row.user?.address}</span>,\n      width: \"20%\",\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: 100,\n      fixed: \"right\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {props.userAccessList?.indexOf(\"Masters.change_dealer\") !== -1 && (\n          <i\n            className=\"ri-edit-box-line hp-mr-2 \"\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n            onClick={() => {\n              props.dealerEdit(row);\n              props.getMiniDistrict({ state: row.user?.state?.id });\n              props.getMiniCity({ district: row.user?.district?.id });\n              props.getMiniArea({ city: row.user?.city?.id });\n              props.isModelVisible(true);\n            }}\n          ></i>\n          )}\n\n          {props.userAccessList?.indexOf(\"Masters.delete_dealer\") !== -1 && (\n          <Popconfirm\n            placement=\"topRight\"\n            title=\"Are you sure to delete this Record?\"\n            onConfirm={() => props.dealerDelete(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            className=\"hp-ml-8\"\n            icon={\n              <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n            }\n          >\n            <i\n              className=\"ri-delete-bin-2-line \"\n              style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n            ></i>\n          </Popconfirm>\n          )}\n        </Space>\n      ),\n    },\n  ];\n\n  const data = props.dealerslist.map((row, key) => ({\n    ...row,\n    index:\n      (props.dealersParams.page - 1) * props.dealersParams.page_size + key + 1,\n  }));\n\n  function onPageChange(page, pageSize) {\n    props.clearDealerList();\n    props.SetDealersParams({\n      ...props.dealersParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getDealers({\n      ...props.dealersParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.SetDealersParams({ ...props.dealersParams, search: val });\n    props.getDealers({ ...props.dealersParams, search: val });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  const { Search } = Input;\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Dealer Master\"\n        addModelTile={\n          props.userAccessList?.indexOf(\"Masters.add_dealer\") !== -1 &&\n          \"Add Dealer\"\n        }\n        goBack={true}\n        setIsModalVisible={props.isModelVisible}\n        isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\">\n            <Col span={12} xs={24} sm={24} md={14} className=\"hp-mb-16\">\n              <Search\n                placeholder=\"Search...\"\n                allowClear\n                onChange={(e) => {\n                  if (e.target.value == \"\") {\n                    props.getDealers({\n                      ...props.dealersParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                    props.SetDealersParams({\n                      ...props.dealersParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                  }\n                }}\n                onSearch={(value) => {\n                  onSearch(value);\n                }}\n              />\n            </Col>\n\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 1300 }}\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.dealersParams?.page}\n                pageSize={props.dealersParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <AddDealer />\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ dealers, system }) {\n  return {\n    dealerslist: dealers.dealerslist,\n    noofpages: dealers.noofpages,\n    listCount: dealers.listCount,\n    dealersParams: dealers.dealersParams,\n    loading: dealers.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getDealers,\n  dealerEdit,\n  dealerDelete,\n  isModelVisible,\n  SetDealersParams,\n  getMiniStates,\n  getMiniCity,\n  getMiniDistrict,\n  getMiniArea,\n  clearDealerList,\n})(Dealer);\n"],"sourceRoot":""}