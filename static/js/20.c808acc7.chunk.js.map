{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","layout/components/content/page-title/index.jsx","assets/images/app/empty-list.svg","../node_modules/antd/es/popconfirm/index.js","assets/images/broken_img.png","assets/images/pages/profile/dummy-img.jpeg","assets/images/defaultVechicleImg.svg","view/pages/Dashboard/myStock/myStockGrid.jsx","view/pages/Dashboard/myStock/myStockList.jsx","view/pages/Dashboard/myStock/filter.jsx","view/pages/Dashboard/myStock/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","PageTitle","addModelTile2","setIsModalVisible2","xs","md","xl","_this","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Popconfirm","React","ref","getPrefixCls","ConfigContext","_useMergedState","useMergedState","value","visible","defaultValue","defaultVisible","_useMergedState2","_slicedToArray","setVisible","settingVisible","_a","onVisibleChange","close","onConfirm","onCancel","customizePrefixCls","prefixCls","placement","children","overlayClassName","restProps","prefixClsConfirm","overlayClassNames","classNames","overlay","LocaleReceiver","componentName","defaultLocale","popconfirmLocale","okButtonProps","cancelButtonProps","title","cancelText","okText","okType","_props$showCancel","showCancel","concat","getRenderPropValue","Button","_extends","ActionButton","buttonProps","convertLegacyProps","actionFn","quitOnNullishReturnValue","emitEvent","renderOverlay","Popover","disabled","_overlay","cloneElement","onKeyDown","_b","keyCode","KeyCode","ESC","_onKeyDown","defaultProps","trigger","ExclamationCircleFilled","MyStockGrid","Text","Typography","Link","Title","Card","Meta","sm","lg","xxl","href","id","hoverable","cover","vehiclefront_image","height","src","defaultVehicle","alt","preview","onError","currentTarget","onerror","brokenImg","file_thumbnail","actions","gutter","level","vehicle","vehicleno","version","name","partytype_name","availability","counter","cluster","lastdailyattendence","moment","format","lastverficationattendence","connect","mystock","loading","myStockParams","stockList","columnClass","columns","dataIndex","width","render","text","row","customer","firstname","brand","brandfamily","approvalstatus_name","data","map","key","index","page","page_size","tip","spinning","delay","rowClassName","dataSource","scroll","x","pagination","mini","miniCountersList","miniModelsList","miniBrandsList","miniBrandFamilyList","miniVersionList","miniVehicletypesList","InputChangeValue","clearData","getMiniCounters","getMiniModels","getMyStockList","setMyStockParams","getMiniBrands","getMiniBrandFamily","getMiniVersion","getMiniVehicletypes","getMiniZonesClearData","getMiniClustersClearData","getMiniDivisionsClearData","getMiniCountersClearData","getMiniBrandsClearData","getMiniBrandFamilyClearData","getMiniModelsClearData","getMiniVersionClearData","Form","useForm","form","useEffect","console","log","setFieldsValue","counter__zone","counter__division","counter__cluster","vehicle__year","vehicle__version__model","vehicle__version__brand","vehicle__version__brandfamily","vehicle__version__vehicletype","vehicle__version","layout","initialValues","remember","onFinish","Item","label","showSearch","allowClear","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","includes","onChange","counter_id","bank","Option","brand_id","brandfamily_id","model","model_id","version_id","vehicletype_id","vehicletype","style","picker","disabledDate","range","startDate","endDate","current","startCheck","endCheck","disableDateRanges","Date","year","date","search","htmlType","submit","system","myStockList","listCount","userAccessList","getReportList","clearStockList","Search","Input","useState","productListToggle","setProductListToggle","isShown","setIsShown","onPageChange","pageSize","showTotal","total","start_date","end_date","target","onSearch","val","FilterOutlined","objData","file_format","model_name","ParamsData","add","UploadOutlined","AppstoreOutlined","OrderedListOutlined","showSizeChanger","renderItem","image","EmptyImage","imageStyle","description"],"mappings":"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","file":"static/js/20.c808acc7.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import React from \"react\";\n\nimport { Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function PageTitle(props) {\n  let history = useHistory();\n\n  const {\n    pageTitle,\n    pageText,\n    goBack,\n    addModelTile,\n    addModelTile2,\n    setIsModalVisible,\n    setIsModalVisible2,\n  } = props;\n\n  return (\n    <Col span={24} className=\"hp-mt-12\">\n      <Row>\n        <Col span={16} xs={16} md={12} xl={16}>\n          {goBack && (\n            <Link\n              to=\"#\"\n              onClick={() => {\n                history.goBack();\n              }}\n              className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n            >\n              <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n            </Link>\n          )}\n          <Row className=\"hp-d-inline-block\">\n            <Col span={24}>\n              {pageTitle && <h3 className=\"hp-mb-2 hp-mt-4\">{pageTitle}</h3>}\n            </Col>\n\n            <Col span={24}>\n              {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n            </Col>\n          </Row>\n        </Col>\n        <Col span={8} xs={8} md={12} xl={8}>\n          <div className=\"hp-float-right hp-d-inline-block\">\n            {addModelTile && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile}\n                </Button>\n              </div>\n            )}\n            {addModelTile2 && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"hp-pr-12\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible2(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile2}\n                </Button>\n              </div>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/empty-list.6fd5c5d1.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this;\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/button';\nimport { ConfigContext } from '../config-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport Popover from '../popover';\nimport ActionButton from '../_util/ActionButton';\nimport { getRenderPropValue } from '../_util/getRenderPropValue';\nimport { cloneElement } from '../_util/reactNode';\nvar Popconfirm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var _useMergedState = useMergedState(false, {\n    value: props.visible,\n    defaultValue: props.defaultVisible\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      visible = _useMergedState2[0],\n      setVisible = _useMergedState2[1]; // const isDestroyed = useDestroyed();\n\n\n  var settingVisible = function settingVisible(value, e) {\n    var _a;\n\n    setVisible(value, true);\n    (_a = props.onVisibleChange) === null || _a === void 0 ? void 0 : _a.call(props, value, e);\n  };\n\n  var close = function close(e) {\n    settingVisible(false, e);\n  };\n\n  var onConfirm = function onConfirm(e) {\n    var _a;\n\n    return (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n\n  var onCancel = function onCancel(e) {\n    var _a;\n\n    settingVisible(false, e);\n    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n\n  var _onKeyDown = function onKeyDown(e) {\n    if (e.keyCode === KeyCode.ESC && visible) {\n      settingVisible(false, e);\n    }\n  };\n\n  var onVisibleChange = function onVisibleChange(value) {\n    var disabled = props.disabled;\n\n    if (disabled) {\n      return;\n    }\n\n    settingVisible(value);\n  };\n\n  var renderOverlay = function renderOverlay(prefixCls, popconfirmLocale) {\n    var okButtonProps = props.okButtonProps,\n        cancelButtonProps = props.cancelButtonProps,\n        title = props.title,\n        cancelText = props.cancelText,\n        okText = props.okText,\n        okType = props.okType,\n        icon = props.icon,\n        _props$showCancel = props.showCancel,\n        showCancel = _props$showCancel === void 0 ? true : _props$showCancel;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-inner-content\")\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message\")\n    }, icon, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message-title\")\n    }, getRenderPropValue(title))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-buttons\")\n    }, showCancel && /*#__PURE__*/React.createElement(Button, _extends({\n      onClick: onCancel,\n      size: \"small\"\n    }, cancelButtonProps), cancelText || popconfirmLocale.cancelText), /*#__PURE__*/React.createElement(ActionButton, {\n      buttonProps: _extends(_extends({\n        size: 'small'\n      }, convertLegacyProps(okType)), okButtonProps),\n      actionFn: onConfirm,\n      close: close,\n      prefixCls: getPrefixCls('btn'),\n      quitOnNullishReturnValue: true,\n      emitEvent: true\n    }, okText || popconfirmLocale.okText)));\n  };\n\n  var customizePrefixCls = props.prefixCls,\n      placement = props.placement,\n      children = props.children,\n      overlayClassName = props.overlayClassName,\n      restProps = __rest(props, [\"prefixCls\", \"placement\", \"children\", \"overlayClassName\"]);\n\n  var prefixCls = getPrefixCls('popover', customizePrefixCls);\n  var prefixClsConfirm = getPrefixCls('popconfirm', customizePrefixCls);\n  var overlayClassNames = classNames(prefixClsConfirm, overlayClassName);\n  var overlay = /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Popconfirm\",\n    defaultLocale: defaultLocale.Popconfirm\n  }, function (popconfirmLocale) {\n    return renderOverlay(prefixCls, popconfirmLocale);\n  });\n  return /*#__PURE__*/React.createElement(Popover, _extends({}, restProps, {\n    prefixCls: prefixCls,\n    placement: placement,\n    onVisibleChange: onVisibleChange,\n    visible: visible,\n    _overlay: overlay,\n    overlayClassName: overlayClassNames,\n    ref: ref\n  }), cloneElement(children, {\n    onKeyDown: function onKeyDown(e) {\n      var _a, _b;\n\n      if ( /*#__PURE__*/React.isValidElement(children)) {\n        (_b = children === null || children === void 0 ? void 0 : (_a = children.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      }\n\n      _onKeyDown(e);\n    }\n  }));\n});\nPopconfirm.defaultProps = {\n  placement: 'top',\n  trigger: 'click',\n  okType: 'primary',\n  icon: /*#__PURE__*/React.createElement(ExclamationCircleFilled, null),\n  disabled: false\n};\nexport default Popconfirm;","export default __webpack_public_path__ + \"static/media/broken_img.203310e1.png\";","export default __webpack_public_path__ + \"static/media/dummy-img.4128e0e1.jpeg\";","export default __webpack_public_path__ + \"static/media/defaultVechicleImg.5d5b5510.svg\";","import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\nimport {\n  Row,\n  Col,\n  Button,\n  Card,\n  Avatar,\n  Typography,\n  InputNumber,\n  Tooltip,\n  Image,\n} from \"antd\";\n\nimport { ArrowRightOutlined } from \"@ant-design/icons\";\nimport dummy from \"../../../../assets/images/pages/profile/dummy-img.jpeg\";\nimport defaultVehicle from \"../../../../assets/images/defaultVechicleImg.svg\";\nimport brokenImg from \"../../../../assets/images/broken_img.png\";\nimport moment from \"moment\";\n\nimport {\n  EditOutlined,\n  EllipsisOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\n\nexport default function MyStockGrid(props) {\n  const { value } = props;\n  const { Text, Link, Title } = Typography;\n  const { Meta } = Card;\n  // console.log(\"PurchaseGridList\", value);\n  return (\n    <Col\n      span={24}\n      xs={12}\n      sm={10}\n      md={8}\n      lg={6}\n      xl={6}\n      xxl={4}\n      className=\"hp-mb-32\"\n      key={value.id}\n    >\n      <Link href={`/pages/mystock-view/` + value.id}>\n        <Card\n          hoverable\n          cover={\n            value.vehiclefront_image == null ? (\n              <Image\n                height={150}\n                src={defaultVehicle}\n                alt=\"Default Vehicle Image\"\n                preview={false}\n                onError={({ currentTarget }) => {\n                  currentTarget.onerror = null; // prevents looping\n                  currentTarget.src = brokenImg;\n                }}\n              />\n            ) : (\n              <Image\n                height={150}\n                src={value.vehiclefront_image?.file_thumbnail}\n                alt={value.vehiclefront_image?.alt}\n                preview={false}\n                onError={({ currentTarget }) => {\n                  currentTarget.onerror = null; // prevents looping\n                  currentTarget.src = brokenImg;\n                }}\n              />\n            )\n          }\n          actions={[]}\n        >\n          <Col span={24}>\n            <Row gutter={[24, 24]} className=\"hp-mb-10\">\n              <Col className=\" hp-mt-0 hp-p-0\">\n                <Title level={4} className=\"hp-mb-0\">\n                  {value.vehicle?.vehicleno}\n                </Title>\n                <Text type=\"secondary\">{value.vehicle?.version?.name}</Text>\n              </Col>\n            </Row>\n            <Row gutter={[24, 24]} className=\"hp-mb-5\">\n              <Col className=\"hp-mt-0 hp-p-0\" span={12}>\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Party Type :\n                </p>\n                <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                  {value.partytype_name}\n                </p>\n              </Col>\n              <Col className=\"hp-mt-0 hp-p-0\" span={12}>\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Stock Status :\n                </p>\n                <Text\n                  type={\n                    value.availability ? \"success\" : \"danger\"\n                    // : \"warning\"\n                  }\n                >\n                  {value.availability ? \"Available\" : \"Not Available\"}\n                </Text>\n              </Col>\n            </Row>\n            <Row gutter={[24, 24]} className=\"hp-mb-5\">\n              <Col className=\"hp-mt-0 hp-p-0\" span={12}>\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Counter :\n                </p>\n                <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                  {value.counter?.name}\n                </p>\n              </Col>\n              <Col className=\"hp-mt-0 hp-p-0\" span={12}>\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Cluster :\n                </p>\n                <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                  {value.counter?.cluster?.name}\n                </p>\n              </Col>\n            </Row>\n            <Row gutter={[24, 24]} className=\"hp-mb-5\">\n              <Col className=\"hp-mt-0 hp-p-0\" span={24}>\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Last Daily Attendence :\n                </p>\n                <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                  {value.lastdailyattendence == \"\" ||\n                  value.lastdailyattendence == null\n                    ? \"None\"\n                    : moment(value.lastdailyattendence).format(\n                        \"DD-MM-YYYY hh:mm a\"\n                      )}\n                </p>\n              </Col>\n            </Row>\n            <Row gutter={[24, 24]} className=\"hp-mb-5\">\n              <Col className=\"hp-mt-0 hp-p-0\" span={24}>\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Last Verfication Attendence :\n                </p>\n                <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                  {value.lastverficationattendence == \"\" ||\n                  value.lastverficationattendence == null\n                    ? \"None\"\n                    : moment(value.lastverficationattendence).format(\n                        \"DD-MM-YYYY hh:mm a\"\n                      )}\n                </p>\n              </Col>\n            </Row>\n\n            {/* <Row gutter={[24, 24]} className=\"hp-mb-5\">\n            <Col span={12}>\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Division :\n                </p>\n                <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                  {value.counter?.division?.name}\n                </p>\n              </Col>\n\n              <Col span={12}>\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Zone :\n                </p>\n                <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                  {value.counter?.zone?.name}\n                </p>\n              </Col>\n            </Row> */}\n\n            {/* <Row gutter={[8, 8]}>\n            <Col span={24} className=\"hp-w-100\">\n              <Link href={`/pages/purchases-view/` + value.id}>\n                <Button\n                  block\n                  // icon={<RiShoppingBagLine className=\"remix-icon\" />}\n                  className=\"hp-px-12 hp-btn-bg-color\"\n                >\n                  View Details\n                </Button>\n              </Link>\n            </Col>\n          </Row> */}\n          </Col>\n        </Card>\n      </Link>\n    </Col>\n  );\n}\n","import React from \"react\";\n\nimport { Card, Row, Col, Table, Space, Spin } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction MyStockList(props) {\n  const { stockList } = props;\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-100 hp-text-color-dark-0 hp-font-weight-600 \";\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"3%\",\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"date\",\n      width: \"10%\",\n      render: (text) => <span className={columnClass}>{text}</span>,\n    },\n    {\n      title: \"Doc No\",\n      dataIndex: \"code\",\n      width: \"10%\",\n      render: (text) => <span className={columnClass}>{text}</span>,\n    },\n    {\n      title: \"Customer\",\n      width: \"10%\",\n      render: (row) => (\n        <span className={columnClass}>{row.customer?.firstname}</span>\n      ),\n    },\n    {\n      title: \"Vehicle No\",\n      width: \"10%\",\n      render: (row) => (\n        <Link to={`/pages/purchases-view/` + row.id}>\n          {row.vehicle.vehicleno}\n        </Link>\n      ),\n    },\n    {\n      title: \"Counter Name\",\n      width: \"10%\",\n      render: (row) => <span className={columnClass}>{row.counter?.name}</span>,\n    },\n    {\n      title: \"Party Type\",\n      width: \"10%\",\n      render: (row) => (\n        <span className={columnClass}>{row.partytype_name}</span>\n      ),\n    },\n    {\n      title: \"Version\",\n      width: \"10%\",\n      render: (row) => (\n        <span className={columnClass}>{row.vehicle?.version?.name}</span>\n      ),\n    },\n    {\n      title: \"Brand\",\n      width: \"10%\",\n      render: (row) => (\n        <span className={columnClass}>{row.vehicle?.version?.brand?.name}</span>\n      ),\n    },\n    {\n      title: \"Brand Family\",\n      width: \"10%\",\n      render: (row) => (\n        <span className={columnClass}>\n          {row.vehicle?.version?.brandfamily?.name}\n        </span>\n      ),\n    },\n    {\n      title: \"Status\",\n      width: \"10%\",\n      render: (row) => (\n        <span className={columnClass}>{row.approvalstatus_name}</span>\n      ),\n    },\n    // {\n    //   title: \"Actions\",\n    //   key: \"action\",\n    //   sorter: true,\n    //   width: \"10%\",\n    //   render: (row, record) => (\n    //     <Space size=\"middle\">\n    //       <Link to={`/pages/purchasesadd/` + row.id}>\n    //         <i\n    //           className=\"ri-edit-box-line hp-mr-2 \"\n    //           style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n    //         ></i>\n    //       </Link>\n    //       <i\n    //         className=\"ri-delete-bin-2-line \"\n    //         style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n    //         onClick={() => deletePurchase(row)}\n    //       ></i>\n    //     </Space>\n    //   ),\n    // },\n  ];\n  const data = stockList.map((row, key) => ({\n    ...row,\n    // index: key + 1,\n    index:\n      (props.myStockParams.page - 1) * props.myStockParams.page_size +\n      (key + 1),\n  }));\n\n  return (\n    <Card>\n      <Row className=\"hp-mb-12\">\n        <Col span={24}>\n          <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n            <Table\n              columns={columns}\n              rowClassName=\"hp-btn-bg-color-none\"\n              dataSource={data}\n              scroll={{ x: 1300 }}\n              pagination={false}\n              size=\"middle\"\n            />\n          </Spin>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n\nfunction mapStateToProps({ mystock }) {\n  return {\n    loading: mystock.loading,\n    myStockParams: mystock.myStockParams,\n  };\n}\n\nexport default connect(mapStateToProps, {})(MyStockList);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  DatePicker,\n  Button,\n  Radio,\n  Select,\n  Empty,\n} from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { connect } from \"react-redux\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport EmptyImage from \"../../../../assets/images/app/empty-list.svg\";\nimport {\n  InputChangeValue,\n  clearData,\n  getMyStockList,\n  setMyStockParams,\n} from \"../../../../store/sideMenu/mystock/mystockSlice\";\nimport {\n  getMiniCounters,\n  // getMiniZones,\n  // getMiniDivisions,\n  // getMiniClusters,\n  getMiniModels,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniVersion,\n  getMiniVehicletypes,\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n  getMiniBrandsClearData,\n  getMiniBrandFamilyClearData,\n  getMiniModelsClearData,\n  getMiniVersionClearData,\n} from \"../../../../store/mini/miniSlice\";\nimport moment from \"moment\";\nfunction Filter(props) {\n  const [form] = Form.useForm();\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  useEffect(() => {\n    props.clearData();\n    // props.getMiniZones();\n    props.getMiniCounters();\n    // props.getMiniDivisions();\n    // props.getMiniClusters();\n    props.getMiniModels();\n    props.getMiniBrands();\n    props.getMiniVehicletypes();\n    props.getMiniVersion();\n    props.getMiniBrandFamily();\n  }, []);\n\n  const availabilityList = [\n    { value: true, name: \"Yes\" },\n    { value: false, name: \"No\" },\n  ];\n\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const onFinish = () => {\n    props.getMyStockList({\n      ...props.myStockParams,\n      page: 1,\n      vehicle__year: props.myStockParams.vehicle__year\n        ? moment(props.myStockParams.vehicle__year).format(\"YYYY\")\n        : \"\",\n    });\n  };\n\n  function clearFilter() {\n    props.setMyStockParams({\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getMyStockList({\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    // props.getMiniZones();\n    props.getMiniCounters();\n    // props.getMiniDivisions();\n    // props.getMiniClusters();\n    props.getMiniModels();\n    props.getMiniVehicletypes();\n    props.getMiniBrandFamily();\n    props.getMiniVersion();\n    props.getMiniBrands();\n  }\n\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck = current && current < moment(startDate, \"YYYY\");\n      }\n      if (endDate) {\n        endCheck = current && current > moment(endDate, \"YYYY\");\n      }\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  console.log(\"props.miniModelsList\", props.miniModelsList);\n\n  useEffect(() => {\n    form.setFieldsValue({\n      counter__zone: props.myStockParams?.counter__zone,\n      counter__division: props.myStockParams?.counter__division,\n      counter__cluster: props.myStockParams?.counter__cluster,\n      counter: props.myStockParams.counter,\n      vehicle__year: props.myStockParams.vehicle__year,\n      vehicle__version__model: props.myStockParams.vehicle__version__model,\n      vehicle__version__brand: props.myStockParams.vehicle__version__brand,\n      vehicle__version__brandfamily:\n        props.myStockParams.vehicle__version__brandfamily,\n      vehicle__version__vehicletype:\n        props.myStockParams.vehicle__version__vehicletype,\n      vehicle__version: props.myStockParams.vehicle__version,\n      availability: props.myStockParams?.availability,\n    });\n  }, [props.myStockParams]);\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>\n        <Card>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              {/* <Col\n                span={24}\n                xs={24}\n                md={6}\n                xl={6}\n                className=\"hp-pr-sm-0 hp-pr-12\"\n              >\n                <Form.Item label=\"Zone Name:\" name=\"counter__zone\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Zone\"\n                    optionFilterProp=\"zone\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniDivisions({ zone: value });\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.InputChangeValue({\n                        key: \"counter__zone\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.myStockParams.zone_id == null\n                        ? \"\"\n                        : props.myStockParams?.zone_id\n                    }\n                  >\n                    {props.miniZonesList.map((zone, index) => {\n                      return (\n                        <Option key={index} value={zone.id}>\n                          {zone.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Division Name:\" name=\"counter__division\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Division\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniClusters({ division: value });\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.InputChangeValue({\n                        key: \"counter__division\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.myStockParams.division_id == null\n                        ? \"\"\n                        : props.myStockParams?.division_id\n                    }\n                  >\n                    {props.miniDivisionsList.map((division, index) => {\n                      return (\n                        <Option key={index} value={division.id}>\n                          {division.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Cluster Name:\" name=\"counter__cluster\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Cluster\"\n                    optionFilterProp=\"cluster\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniCounters({ cluster: value });\n                      props.getMiniCountersClearData();\n                      props.InputChangeValue({\n                        key: \"counter__cluster\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.myStockParams.cluster_id == null\n                        ? \"\"\n                        : props.myStockParams?.cluster_id\n                    }\n                  >\n                    {props.miniClustersList.map((cluster, index) => {\n                      return (\n                        <Option key={index} value={cluster.id}>\n                          {cluster.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col> */}\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item label=\"Counter :\" name=\"counter\" className=\"hp-mb-0\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select a Counter\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"counter\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.myStockParams.counter_id == null\n                        ? \"\"\n                        : props.myStockParams?.counter_id\n                    }\n                  >\n                    {props.miniCountersList.map((bank, index) => {\n                      return (\n                        <Option key={index} value={bank.id}>\n                          {bank.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item\n                  label=\"Brand Name:\"\n                  name=\"vehicle__version__brand\"\n                  className=\"hp-mb-0\"\n                >\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Brand\"\n                    optionFilterProp=\"brand\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniBrandFamily({ brand: value });\n                      props.getMiniBrandFamilyClearData();\n                      props.getMiniModelsClearData();\n                      props.getMiniVersionClearData();\n                      props.InputChangeValue({\n                        key: \"vehicle__version__brand\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.myStockParams.brand_id == null\n                        ? \"\"\n                        : props.myStockParams?.brand_id\n                    }\n                  >\n                    {props.miniBrandsList.map((brand, index) => {\n                      return (\n                        <Option key={index} value={brand.id}>\n                          {brand.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item\n                  label=\"BrandFamily Name:\"\n                  name=\"vehicle__version__brandfamily\"\n                  className=\"hp-mb-0\"\n                >\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select BrandFamily\"\n                    optionFilterProp=\"brandfamily\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniModels({ brandfamily: value });\n                      props.getMiniModelsClearData();\n                      props.getMiniVersionClearData();\n                      props.InputChangeValue({\n                        key: \"vehicle__version__brandfamily\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.myStockParams.brandfamily_id == null\n                        ? \"\"\n                        : props.myStockParams?.brandfamily_id\n                    }\n                  >\n                    {props.miniBrandFamilyList.map((brandfamily, index) => {\n                      return (\n                        <Option key={index} value={brandfamily.id}>\n                          {brandfamily.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col\n                span={24}\n                xs={24}\n                md={6}\n                xl={6}\n                className=\"hp-pr-sm-0 hp-pr-12\"\n              >\n                <Form.Item\n                  label=\"Model :\"\n                  name=\"vehicle__version__model\"\n                  className=\"hp-mb-0\"\n                >\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Model\"\n                    optionFilterProp=\"Model\"\n                    onChange={(value) => {\n                      props.getMiniVersion({ model: value });\n                      props.getMiniVersionClearData(),\n                        props.InputChangeValue({\n                          key: \"vehicle__version__model\",\n                          value: value,\n                        });\n                    }}\n                    value={\n                      props.myStockParams.model_id == null\n                        ? \"\"\n                        : props.myStockParams?.model_id\n                    }\n                  >\n                    {props.miniModelsList.map((model, index) => {\n                      return (\n                        <Option key={index} value={model.id}>\n                          {model.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item\n                  label=\"Version :\"\n                  name=\"vehicle__version\"\n                  className=\"hp-mb-0\"\n                >\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Version\"\n                    optionFilterProp=\"Version\"\n                    onChange={(value) => {\n                      // props.getMiniVehicletypes({ vehicletype: value });\n                      props.InputChangeValue({\n                        key: \"vehicle__version\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.myStockParams.version_id == null\n                        ? \"\"\n                        : props.myStockParams?.version_id\n                    }\n                  >\n                    {props.miniVersionList.map((version, index) => {\n                      return (\n                        <Option key={index} value={version.id}>\n                          {version.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item\n                  label=\"Vehicle Type :\"\n                  name=\"vehicle__version__vehicletype\"\n                  className=\"hp-mb-0\"\n                >\n                  <Select\n                    showSearch\n                    allowClear\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Vehicle Type\"\n                    optionFilterProp=\"vehicletype\"\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"vehicle__version__vehicletype\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.myStockParams.vehicletype_id == null\n                        ? \"\"\n                        : props.myStockParams?.vehicletype_id\n                    }\n                  >\n                    {props.miniVehicletypesList.map((vehicletype, index) => {\n                      return (\n                        <Option key={index} value={vehicletype.id}>\n                          {vehicletype.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item\n                  label=\"Availability\"\n                  name=\"availability\"\n                  className=\"hp-mb-0\"\n                >\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Availability\"\n                    optionFilterProp=\"availability\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"availability\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.myStockParams.availability == null\n                        ? \"\"\n                        : props.myStockParams?.availability\n                    }\n                  >\n                    {availabilityList.map((availability, index) => {\n                      return (\n                        <Option key={index} value={availability.value}>\n                          {availability.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={24} xs={24} md={6} xl={6}>\n                <Form.Item\n                  label=\"Year\"\n                  name=\"vehicle__year\"\n                  className=\"hp-mb-0\"\n                >\n                  <DatePicker\n                    id=\"year\"\n                    name=\"vehicle__year\"\n                    style={{ width: \"100%\" }}\n                    picker=\"year\"\n                    format=\"YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: new Date(),\n                      startDate: 1990,\n                    })}\n                    placeholder=\"Select Year\"\n                    value={props.myStockParams?.year}\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"vehicle__year\",\n                        value: date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col md={4} className=\"hp-mt-18\">\n                <Button\n                  block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    clearFilter();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n              </Col>\n\n              <Col md={4} className=\"hp-mt-18\">\n                <Button\n                  block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Apply\n                </Button>\n              </Col>\n            </Row>\n            {/* <Button\n              type=\"primary\"\n              className=\"hp-submit-btn hp-float-right hp-mt-10\"\n              disabled={props.loading}\n              onClick={() => {\n                form.submit();\n              }}\n            >\n              Apply\n            </Button> */}\n          </Form>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ mystock, mini }) {\n  return {\n    loading: mystock.loading,\n    myStockParams: mystock.myStockParams,\n    // miniZonesList: mini.miniZonesList,\n    miniCountersList: mini.miniCountersList,\n    // miniDivisionsList: mini.miniDivisionsList,\n    // miniClustersList: mini.miniClustersList,\n    miniModelsList: mini.miniModelsList,\n    miniBrandsList: mini.miniBrandsList,\n    miniBrandFamilyList: mini.miniBrandFamilyList,\n    miniVersionList: mini.miniVersionList,\n    miniVehicletypesList: mini.miniVehicletypesList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  InputChangeValue,\n  clearData,\n  getMiniCounters,\n  // getMiniZones,\n  // getMiniDivisions,\n  // getMiniClusters,\n  getMiniModels,\n  getMyStockList,\n  setMyStockParams,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniVersion,\n  getMiniVehicletypes,\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n  getMiniBrandsClearData,\n  getMiniBrandFamilyClearData,\n  getMiniModelsClearData,\n  getMiniVersionClearData,\n})(Filter);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  DatePicker,\n  Empty,\n  Button,\n  Input,\n  Pagination,\n  Drawer,\n  Spin,\n  List,\n  Popconfirm,\n} from \"antd\";\nimport {\n  FilterOutlined,\n  UploadOutlined,\n  PlusOutlined,\n  OrderedListOutlined,\n  AppstoreOutlined,\n} from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport PageTitle from \"../../../../layout/components/content/page-title\";\nimport EmptyImage from \"../../../../assets/images/app/empty-list.svg\";\nimport {\n  InputChangeValue,\n  clearData,\n  getMyStockList,\n  setMyStockParams,\n  clearStockList,\n} from \"../../../../store/sideMenu/mystock/mystockSlice\";\nimport MyStockGrid from \"./myStockGrid\";\nimport MyStockList from \"./myStockList\";\nimport Filter from \"./filter\";\nimport { getReportList } from \"../../../../store/reports/reportsSlice\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\n\nfunction MyStock(props) {\n  const [form] = Form.useForm();\n  const { Search } = Input;\n  const [productListToggle, setProductListToggle] = useState(false);\n  const [isShown, setIsShown] = useState(false);\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  useEffect(() => {\n    props.clearData();\n    props.getMyStockList({\n      ...props.myStockParams,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n  }, []);\n\n  const handleClick = () => {\n    // 👇️ toggle shown state\n    setIsShown((current) => !current);\n\n    // 👇️ or simply set it to true\n    // setIsShown(true);\n  };\n\n  function onSearch(val) {\n    props.getMyStockList({ ...props.myStockParams, page: 1, search: val });\n    props.setMyStockParams({ ...props.myStockParams, page: 1, search: val });\n  }\n\n  function onPageChange(page, pageSize) {\n    props.clearStockList();\n    props.setMyStockParams({\n      ...props.myStockParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getMyStockList({\n      ...props.myStockParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.myStockParams?.start_date,\n      end_date: props.myStockParams?.end_date,\n    });\n  }, [props.myStockParams]);\n\n  function exportData() {\n    // var { file_format, ...params } = props.reportParamsData;\n    var objData = {\n      file_format: 0,\n      model_name: \"Stock\",\n    };\n\n    props.getReportList({\n      objData,\n      ParamsData: {\n        ...props.myStockParams,\n        start_date:\n          props.myStockParams.start_date != null &&\n          props.myStockParams.start_date != \"\"\n            ? moment(props.myStockParams.start_date).format(\"YYYY-MM-DD\")\n            : \"\",\n        end_date:\n          props.myStockParams.end_date != null &&\n          props.myStockParams.end_date != \"\"\n            ? moment(props.myStockParams.end_date)\n                .add(1, \"days\")\n                .format(\"YYYY-MM-DD\")\n            : \"\",\n      },\n    });\n  }\n\n  return (\n    <Row gutter={[12, 12]}>\n      <PageTitle pageTitle=\"My Stock\" goBack={false} />\n      <Col span={24}>\n        <Row gutter={[12, 12]} className=\"hp-ecommerce-app-header \">\n          <Col md={14} xs={24} className=\"hp-ecommerce-app-header-search \">\n            <Search\n              placeholder=\"Search for date, doc, number, customer, counter, vehicle\"\n              allowClear\n              onChange={(e) => {\n                if (e.target.value == \"\") {\n                  props.getMyStockList({\n                    ...props.myStockParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                  props.setMyStockParams({\n                    ...props.myStockParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                }\n              }}\n              onSearch={(value) => {\n                onSearch(value);\n              }}\n            />\n          </Col>\n\n          <Col md={4} xs={8}>\n            <Button\n              // onClick={() => {\n              //   props.isDrawerVisible(true);\n              // }}\n              onClick={handleClick}\n              className=\"hp-w-100 hp-p-12 \"\n              icon={<FilterOutlined className=\"hp-mr-10\" />}\n              size=\"small\"\n            >\n              {\" \"}\n              Filter\n            </Button>\n          </Col>\n\n          {props.userAccessList?.indexOf(\"Purchase.export_stock\") !== -1 && (\n            <Col md={4} xs={8}>\n              <Popconfirm\n                placement=\"topRight\"\n                title=\"Are you sure to export this Record?\"\n                onConfirm={() => exportData()}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                className=\"hp-ml-8\"\n                icon={\n                  <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n                }\n              >\n                <Button\n                  className=\"hp-w-100 hp-p-12\"\n                  icon={<UploadOutlined className=\"hp-mr-10\" />}\n                  size=\"small\"\n                >\n                  Export\n                </Button>\n              </Popconfirm>\n            </Col>\n          )}\n\n          <Col md={1} xs={4}>\n            <Button\n              className=\"hp-w-100 hp-p-12\"\n              icon={<AppstoreOutlined />}\n              onClick={() => setProductListToggle(false)}\n            ></Button>\n          </Col>\n\n          <Col md={1} xs={4}>\n            <Button\n              className=\"hp-w-100 hp-p-12\"\n              icon={<OrderedListOutlined />}\n              onClick={() => setProductListToggle(true)}\n            ></Button>\n          </Col>\n        </Row>\n      </Col>\n\n      {isShown && (\n        <Col span={24} xs={24}>\n          <Filter />\n        </Col>\n      )}\n\n      <Col\n        span={24}\n        xs={24}\n        className=\"hp-purchase-app-content\"\n        productListToggle={productListToggle}\n        setProductListToggle={setProductListToggle}\n      >\n        <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n          {props.myStockList.length !== 0 ? (\n            <>\n              {!productListToggle ? (\n                <>\n                  <List\n                    dataSource={props.myStockList}\n                    renderItem={(value) => <MyStockGrid value={value} />}\n                  />\n                  <Pagination\n                    size=\"small\"\n                    current={props.myStockParams?.page}\n                    pageSize={props.myStockParams?.page_size}\n                    total={props.listCount}\n                    showTotal={showTotal}\n                    showSizeChanger\n                    onChange={onPageChange}\n                    className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n                  />\n                </>\n              ) : (\n                <>\n                  <MyStockList\n                    stockList={props.myStockList}\n                    // deletePurchase={deleteRecord}\n                  />{\" \"}\n                  <Pagination\n                    size=\"small\"\n                    current={props.myStockParams?.page}\n                    pageSize={props.myStockParams?.page_size}\n                    total={props.listCount}\n                    showTotal={showTotal}\n                    showSizeChanger\n                    onChange={onPageChange}\n                    className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n                  />\n                </>\n              )}\n            </>\n          ) : (\n            <Card>\n              <Empty\n                className=\"hp-m-32\"\n                image={EmptyImage}\n                imageStyle={{\n                  height: 160,\n                }}\n                description={<h5>Your Stock list is empty</h5>}\n              >\n                {/* <Button type=\"primary\">\n                <Link to=\" \">Go to Purchase list</Link>\n              </Button> */}\n              </Empty>\n            </Card>\n          )}\n        </Spin>\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ mystock, system }) {\n  return {\n    loading: mystock.loading,\n    myStockParams: mystock.myStockParams,\n    myStockList: mystock.myStockList,\n    listCount: mystock.listCount,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  InputChangeValue,\n  clearData,\n  getMyStockList,\n  setMyStockParams,\n  getReportList,\n  clearStockList,\n})(MyStock);\n"],"sourceRoot":""}