{"version":3,"sources":["view/components/data-entry/inputs/numberInput.jsx","layout/components/content/page-title/index.jsx","assets/images/app/empty-list.svg","assets/images/broken_img.png","view/pages/MastersDashboard/vehicles/addVehicles.jsx","view/pages/MastersDashboard/person/addPerson.jsx","assets/images/pages/profile/dummy-img.jpeg","assets/images/defaultVechicleImg.svg","view/pages/Dashboard/purchases/PurchaseListView.jsx","view/pages/Dashboard/purchases/PurchaseGridView.jsx","view/pages/Dashboard/purchases/Filters/Filter.jsx","view/pages/Dashboard/purchases/index.jsx"],"names":["NumericInput","props","value","onChange","onBlur","e","inputValue","target","test","key","name","valueTemp","charAt","length","slice","replace","PageTitle","history","useHistory","pageTitle","pageText","goBack","addModelTile","addModelTile2","setIsModalVisible","setIsModalVisible2","span","className","xs","md","xl","to","onClick","size","type","icon","isMobile","connect","vehicles","mini","rowdata","model","miniVersionList","miniEmissionnorms","miniBrandsList","miniBrandFamilyList","miniModelsList","vehiclesAdd","isModelVisible","InputChangeValue","getMiniVersion","getMiniEmissionnorms","getMiniBrands","getMiniBrandFamily","getMiniModels","vehicleNumberValidate","engineNumberValidate","chassisNumberValidate","Form","useForm","form","useEffect","handleResetInputValues","FooterAddOrUpdate","id","submit","block","FooterCancel","ghost","modalTitle","checkValidation","data","console","log","chassisno","Modal","error","title","content","engineno","setFieldsValue","vehicleType","vehicleno","brand_id","brandfamily_id","model_id","vehicletrno","version_id","emission_id","year","visible","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","moment","format","handleAdd","brand","brandfamily","emission","version","typeId","handleUpdate","gutter","Item","label","rules","required","message","Group","Button","pattern","RegExp","hasFeedback","style","placeholder","minLength","maxLength","toUpperCase","transform","showSearch","filterOption","input","option","children","toLowerCase","includes","optionFilterProp","map","index","Option","picker","disabledDate","range","startDate","endDate","current","startCheck","endCheck","disableDateRanges","Date","date","min","getValueProps","person","miniStatesList","miniDistrictList","miniCityList","miniAreaList","miniBanksList","miniOccupationList","personAdd","checkAadharnoValidate","checkMobileValidate","getMiniDistrict","getMiniCity","getMiniArea","getMiniBanks","getMiniOccupation","getMiniStates","ChangeHandeler","firstname","middlename","lastname","mobile","aadharno","gender","dob","maritalstatus","dom","qualification","occupation_id","housetype","income","bank_id","accono","ifsccode","state_id","district_id","city_id","area_id","pincode","addressline1","addressline2","occupation","allowClear","bank","state","district","city","area","TextArea","purchase","system","loading","purchaseParams","userAccessList","purchaseDelete","purchaseList","columnClass","columns","dataIndex","fixed","render","row","partytype_name","text","customer","vehicle","counter","record","editable","indexOf","cursor","color","page","page_size","tip","spinning","delay","dataSource","pagination","scroll","x","PurchaseGridView","Text","Typography","Link","sm","lg","xxl","vehiclefront_image","height","preview","src","file_thumbnail","alt","onError","currentTarget","onerror","brokenImg","defaultVehicle","substring","createdby","fullname","approvalstatus","approvalstatus_name","customer_image","dummy","ArrowUpOutlined","href","getFullYear","getMonth","drawer","miniCountersList","miniClustersList","miniDivisionsList","miniZonesList","miniColorsList","personParams","personlist","miniVehiclesList","vehiclesParams","isDrawerVisible","getMiniCounters","getMiniClusters","getMiniDivisions","getMiniZones","FilterInputChangeValue","getPurchaseList","setPurchaseParams","getMiniColors","getPerson","Person","SetPersonParams","getMiniVehicles","SetVehiclesParams","getVehicles","getMiniZonesClearData","getMiniClustersClearData","getMiniDivisionsClearData","getMiniCountersClearData","start_date","end_date","counter__zone","counter__division","counter__cluster","is_stock","partytype","availability","onClose","placement","bodyStyle","paddingBottom","initialValues","remember","search","disabled","onSearch","defaultActiveFirstOption","showArrow","onPopupScroll","no_of_pages","customer_id","zone","zone_id","division","division_id","cluster","cluster_id","counter_id","approvals","vehicle_id","htmlType","noofpages","listCount","clearPurchaseList","getReportList","Search","Input","useState","productListToggle","setProductListToggle","showTotal","total","onPageChange","pageSize","val","FilterOutlined","onConfirm","objData","file_format","model_name","ParamsData","add","okText","cancelText","UploadOutlined","PlusOutlined","AppstoreOutlined","OrderedListOutlined","deletePurchase","showSizeChanger","renderItem","image","EmptyImage","imageStyle","description","Filter"],"mappings":"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","file":"static/js/19.dc4e0aed.chunk.js","sourcesContent":["import { Input, Tooltip } from \"antd\";\n\nconst formatNumber = (value) => new Intl.NumberFormat().format(value);\n\nexport default function NumericInput(props) {\n  const { value, onChange, onBlur } = props;\n\n  const handleChange = (e) => {\n    const { value: inputValue } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n\n    if (reg.test(inputValue) || inputValue === \"\" || inputValue === \"-\") {\n      onChange({ key: props.name, value: inputValue });\n    }\n  }; // '.' at the end or only '-' in the input box.\n\n  const handleBlur = () => {\n    let valueTemp = value;\n\n    if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n      valueTemp = value.slice(0, -1);\n    }\n\n    // onChange({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n    onBlur({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n  };\n\n  return (\n    <Input\n      {...props}\n      onChange={handleChange}\n      onBlur={props.onBlur && handleBlur}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function PageTitle(props) {\n  let history = useHistory();\n\n  const {\n    pageTitle,\n    pageText,\n    goBack,\n    addModelTile,\n    addModelTile2,\n    setIsModalVisible,\n    setIsModalVisible2,\n  } = props;\n\n  return (\n    <Col span={24} className=\"hp-mt-12\">\n      <Row>\n        <Col span={16} xs={16} md={12} xl={16}>\n          {goBack && (\n            <Link\n              to=\"#\"\n              onClick={() => {\n                history.goBack();\n              }}\n              className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n            >\n              <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n            </Link>\n          )}\n          <Row className=\"hp-d-inline-block\">\n            <Col span={24}>\n              {pageTitle && <h3 className=\"hp-mb-2 hp-mt-4\">{pageTitle}</h3>}\n            </Col>\n\n            <Col span={24}>\n              {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n            </Col>\n          </Row>\n        </Col>\n        <Col span={8} xs={8} md={12} xl={8}>\n          <div className=\"hp-float-right hp-d-inline-block\">\n            {addModelTile && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile}\n                </Button>\n              </div>\n            )}\n            {addModelTile2 && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"hp-pr-12\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible2(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile2}\n                </Button>\n              </div>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/empty-list.6fd5c5d1.svg\";","export default __webpack_public_path__ + \"static/media/broken_img.203310e1.png\";","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport {\n  Button,\n  Input,\n  Form,\n  Modal,\n  Radio,\n  Row,\n  Col,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport {\n  vehiclesAdd,\n  isModelVisible,\n  InputChangeValue,\n  vehicleNumberValidate,\n  engineNumberValidate,\n  chassisNumberValidate,\n} from \"../../../../store/Masters/Vehicles/vehiclesSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  getMiniVersion,\n  getMiniEmissionnorms,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniModels,\n} from \"../../../../store/mini/miniSlice\";\nimport {\n  RiCheckboxCircleLine,\n  RiAlertLine,\n  RiInformationLine,\n} from \"react-icons/ri\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddVehicles = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    // props.getMiniVersion();\n    props.getMiniEmissionnorms();\n    props.getMiniBrands();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      vehicleno:\n        props.rowdata?.vehicleType === \"new\"\n          ? props.rowdata.vehicletrno\n          : props.rowdata?.vehicleno,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletrno: props.rowdata.vehicletrno,\n      year: moment(props.rowdata?.year).format(\"YYYY\"),\n      engineno: props.rowdata.engineno,\n      emission_id: props.rowdata.emission_id,\n      version_id: props.rowdata.version_id,\n      chassisno: props.rowdata.chassisno,\n    };\n    props.vehiclesAdd({obj});\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      vehicleno:\n        props.rowdata?.vehicleType === \"new\"\n          ? props.rowdata.vehicletrno\n          : props.rowdata?.vehicleno,\n      brand_id:\n        props.rowdata?.brand_id == null\n          ? props.rowdata.brand.id\n          : props.rowdata?.brand_id,\n      brandfamily_id:\n        props.rowdata?.brandfamily_id == null\n          ? props.rowdata.brandfamily.id\n          : props.rowdata?.brandfamily_id,\n      model_id:\n        props.rowdata?.model_id == null\n          ? props.rowdata.model.id\n          : props.rowdata?.model_id,\n      vehicletrno: props.rowdata?.vehicletrno,\n      year: moment(props.rowdata?.year).format(\"YYYY\"),\n      engineno: props.rowdata?.engineno,\n      emission_id:\n        props.rowdata?.emission_id == null\n          ? props.rowdata.emission.id\n          : props.rowdata?.emission_id,\n      version_id:\n        props.rowdata?.version_id == null\n          ? props.rowdata.version.id\n          : props.rowdata?.version_id,\n      chassisno: props.rowdata?.chassisno,\n    };\n    props.vehiclesAdd({obj, type: props.type, typeId: props.typeId}, );\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Vehicle\n    </h5>\n  );\n\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck = current && current < moment(startDate, \"YYYY\");\n      }\n      if (endDate) {\n        endCheck = current && current > moment(endDate, \"YYYY\");\n      }\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n  // props.rowdata?.engineno ==\n  function checkValidation(type, data) {\n    console.log(\"type\", type, data.target.value);\n    if (type == \"engineno\") {\n      if (data.target.value == props.rowdata?.chassisno) {\n        props.InputChangeValue({\n          key: type,\n          value: \"\",\n        });\n        Modal.error({\n          icon: (\n            <span className=\"remix-icon\">\n              <RiInformationLine />\n            </span>\n          ),\n          title: (\n            <h5 className=\"hp-mb-0 hp-font-weight-500\">Engine Number Error</h5>\n          ),\n          content: (\n            <div>\n              <p className=\"hp-p1-body hp-text-color-black-80\">\n                Engine & Chassis Number should not be same{\" \"}\n              </p>\n            </div>\n          ),\n        });\n      }\n    } else {\n      if (data.target.value == props.rowdata?.engineno) {\n        props.InputChangeValue({\n          key: type,\n          value: \"\",\n        });\n        Modal.error({\n          icon: (\n            <span className=\"remix-icon\">\n              <RiInformationLine />\n            </span>\n          ),\n          title: (\n            <h5 className=\"hp-mb-0 hp-font-weight-500\">Chassis Number Error</h5>\n          ),\n          content: (\n            <div>\n              <p className=\"hp-p1-body hp-text-color-black-80\">\n                Engine & Chassis Number should not be same{\" \"}\n              </p>\n            </div>\n          ),\n        });\n      }\n    }\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      vehicleType: props.rowdata.vehicleType,\n      vehicleno: props.rowdata.vehicleno,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletrno: props.rowdata.vehicletrno,\n      version_id: props.rowdata.version_id,\n      emission_id: props.rowdata.emission_id,\n      year: props.rowdata.year,\n      engineno: props.rowdata.engineno,\n      chassisno: props.rowdata.chassisno,\n    });\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={616}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row gutter={[12, 0]}>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Vehicle Type\"\n              name=\"vehicleType\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select Your Vehicle Type!\",\n                },\n              ]}\n            >\n              <Radio.Group\n                name=\"vehicleType\"\n                onChange={ChangeHandeler}\n                value={props.rowdata?.vehicleType}\n              >\n                <Radio.Button value=\"new\">New Vehicle</Radio.Button>\n                <Radio.Button value=\"old\">Old Vehicle</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n          {props.rowdata?.vehicleType === \"new\" ? (\n            <>\n              <Col span={24} xs={24} xl={12} md={12}>\n                <Form.Item\n                  label=\"Vehicle TR Number:\"\n                  name=\"vehicletrno\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter Your Vehicle TR Number!\",\n                    },\n                    {\n                      pattern: new RegExp(\n                        /[A-Z][A-Z][0-9][0-9][A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9]$/i\n                      ),\n                      message: \"field does not accept numbers\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Input\n                    id=\"Version\"\n                    name=\"vehicletrno\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"EX:AP00ABCD1234\"\n                    minLength={10}\n                    maxLength={15}\n                    value={props.rowdata?.vehicletrno}\n                    onChange={(e) => {\n                      props.InputChangeValue({\n                        key: e.target.name,\n                        value: e.target.value.toUpperCase(),\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n            </>\n          ) : (\n            <>\n              <Col span={24} xs={24} xl={12} md={12}>\n                <Form.Item\n                  label=\"Vehicle Number\"\n                  name=\"vehicleno\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter Your Vehicle Number!\",\n                    },\n\n                    // {\n                    //   pattern: new RegExp(\n                    //     \"^[A-Z]{2}[0-9]{1,2}[A-Z]{1,2}[0-9]{1,4}$\"\n                    //   ),\n                    //   message: \"Please accept valid vehicle number\",\n                    // },\n                    {\n                      pattern: new RegExp(\n                        \"^[A-Z]{2}[0-9]{1,2}[A-Z]{1,2}[0-9]{4}$\"\n                      ),\n                      message: \"Please accept valid vehicle number\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Input\n                    id=\"vehicleno-input\"\n                    name=\"vehicleno\"\n                    label=\"Vehicle Number:\"\n                    maxLength={11}\n                    style={{ width: \"100%\", transform: \"uppercase\" }}\n                    placeholder=\"EX: AP00QQ0000\"\n                    onBlur={(data) => {\n                      console.log(\"data\", data);\n                      props.vehicleNumberValidate({\n                        vehicleno: data.target.value,\n                      });\n                    }}\n                    value={props.rowdata?.vehicleno}\n                    onChange={(e) => {\n                      props.InputChangeValue({\n                        key: e.target.name,\n                        value: e.target.value.toUpperCase(),\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n            </>\n          )}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Brand :\"\n              name=\"brand_id\"\n              rules={[{ required: true, message: \"Please select your Brand!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select  Brand\"\n                optionFilterProp=\"Brand\"\n                onChange={(value) => {\n                  props.getMiniBrandFamily({ brand: value });\n                  props.InputChangeValue({\n                    key: \"brand_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brand_id == null ? \"\" : props.rowdata?.brand_id\n                }\n              >\n                {props.miniBrandsList.map((brand, index) => {\n                  return (\n                    <Option key={index} value={brand.id}>\n                      {brand.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Brand Family :\"\n              name=\"brandfamily_id\"\n              rules={[\n                { required: true, message: \"Please select your Brand Family!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Brand Family\"\n                optionFilterProp=\"brand Family\"\n                onChange={(value) => {\n                  props.getMiniModels({ brandfamily: value });\n                  props.InputChangeValue({\n                    key: \"brandfamily_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brandfamily_id == null\n                    ? \"\"\n                    : props.rowdata?.brandfamily_id\n                }\n              >\n                {props.miniBrandFamilyList.map((brandfamily, index) => {\n                  return (\n                    <Option key={index} value={brandfamily.id}>\n                      {brandfamily.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Model :\"\n              name=\"model_id\"\n              rules={[{ required: true, message: \"Please select your Model!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Model\"\n                optionFilterProp=\"Model\"\n                onChange={(value) => {\n                  props.getMiniVersion({ model: value });\n                  props.InputChangeValue({\n                    key: \"model_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.model_id == null ? \"\" : props.rowdata?.model_id\n                }\n              >\n                {props.miniModelsList.map((model, index) => {\n                  return (\n                    <Option key={index} value={model.id}>\n                      {model.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Version :\"\n              name=\"version_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Version!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Version\"\n                optionFilterProp=\"version\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"version_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.version_id == null\n                    ? \"\"\n                    : props.rowdata?.version_id\n                }\n              >\n                {props.miniVersionList.map((version, index) => {\n                  return (\n                    <Option key={index} value={version.id}>\n                      {version.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Emission :\"\n              name=\"emission_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Emission!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select a Emission\"\n                optionFilterProp=\"emission\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"emission_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.emission_id == null\n                    ? \"\"\n                    : props.rowdata?.emission_id\n                }\n              >\n                {props.miniEmissionnorms.map((emission, index) => {\n                  return (\n                    <Option key={index} value={emission.id}>\n                      {emission.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Year\"\n              name=\"year\"\n              rules={[{ required: true, message: \"Select Year\" }]}\n              hasFeedback\n            >\n              <DatePicker\n                id=\"year\"\n                name=\"year\"\n                style={{ width: \"100%\" }}\n                picker=\"year\"\n                // format=\"YYYY\"\n                disabledDate={disableDateRanges({\n                  endDate: new Date(),\n                  startDate: 1990,\n                })}\n                placeholder=\"Select Year\"\n                value={props.rowdata?.year}\n                onChange={(date) => {\n                  console.log(\"Year\", date, typeof date);\n                  props.InputChangeValue({\n                    key: \"year\",\n                    value: date,\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Engine Number:\"\n              name=\"engineno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Engine Number!\",\n                },\n                {\n                  min: 10,\n                  message: \"Engine Number must be 10 digits!\",\n                }\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"engineno\"\n                name=\"engineno\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                minLength={10}\n                maxLength={20}\n                placeholder=\"Engine Number\"\n                value={props.rowdata?.engineno}\n                onBlur={(e) => {\n                  props.engineNumberValidate({ engineno: e.target.value });\n                  if (e.target.value != \"\") {\n                    checkValidation(\"engineno\", e);\n                  }\n                }}\n                // onChange={ChangeHandeler}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Chassis Number :\"\n              name=\"chassisno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Chassis Number!\",\n                },\n                {\n                  min: 10,\n                  message: \"Chassis Number must be 10 digits!\",\n                }\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <Input\n                id=\"Chassis Number\"\n                name=\"chassisno\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                placeholder=\"Chassis Number\"\n                minLength={10}\n                maxLength={20}\n                onBlur={(e) => {\n                  props.chassisNumberValidate({ chassisno: e.target.value });\n                  if (e.target.value != \"\") {\n                    checkValidation(\"chassisno\", e);\n                  }\n                }}\n                value={props.rowdata?.chassisno}\n                // onChange={ChangeHandeler}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ vehicles, mini }) {\n  return {\n    rowdata: vehicles.rowdata,\n    model: vehicles.model,\n    miniVersionList: mini.miniVersionList,\n    miniEmissionnorms: mini.miniEmissionnorms,\n    miniBrandsList: mini.miniBrandsList,\n    miniBrandFamilyList: mini.miniBrandFamilyList,\n    miniModelsList: mini.miniModelsList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  vehiclesAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniVersion,\n  getMiniEmissionnorms,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniModels,\n  vehicleNumberValidate,\n  engineNumberValidate,\n  chassisNumberValidate,\n})(AddVehicles);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill, } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Row, Col, Select, DatePicker } from \"antd\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport moment from \"moment\";\n\nimport {\n  checkAadharnoValidate,\n  checkMobileValidate,\n  personAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Person/personSlice\";\n\nimport {\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n  getMiniArea,\n  getMiniBanks,\n  getMiniOccupation,\n} from \"../../../../store/mini/miniSlice\";\nimport { string } from \"prop-types\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddPerson = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniStates();\n    props.getMiniBanks();\n    props.getMiniOccupation();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  const housetypeList = [\n    { id: 1, name: \"Own\" },\n    { id: 2, name: \"Rent\" },\n  ];\n\n  const maritalStatusList = [\n    { value: true, name: \"Yes\" },\n    { value: false, name: \"No\" },\n  ];\n\n  const qualificationList = [\n    { id: 1, name: \"Illiterate\" },\n    { id: 2, name: \"10th/Ssc\" },\n    { id: 3, name: \"Intermediate\" },\n    { id: 4, name: \"Graduate\" },\n    { id: 5, name: \"Post Graduate\" },\n  ];\n\n  const genderList = [\n    { id: 1, name: \"Male\" },\n    { id: 2, name: \"Female\" },\n    { id: 3, name: \"Others\" },\n  ];\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      firstname: props.rowdata?.firstname,\n      middlename: props.rowdata?.middlename,\n      lastname: props.rowdata?.lastname,\n      mobile: props.rowdata?.mobile,\n      aadharno: props.rowdata?.aadharno,\n      gender: props.rowdata?.gender,\n      housetype: props.rowdata?.housetype,\n      qualification: props.rowdata?.qualification,\n      addressline1: props.rowdata?.addressline1,\n      addressline2: props.rowdata?.addressline2,\n      area_id: props.rowdata?.area_id,\n      state_id: props.rowdata.state_id,\n      district_id: props.rowdata.district_id,\n      city_id: props.rowdata.city_id,\n      bank_id: props.rowdata.bank_id,\n      occupation_id: props.rowdata.occupation_id,\n      pincode: props.rowdata.pincode,\n      ifsccode: props.rowdata.ifsccode,\n      income: props.rowdata.income,\n      accono: props.rowdata.accono,\n      dob: moment(props.rowdata?.dob).format(\"YYYY-MM-DD\"),\n      // dom: moment(props.rowdata?.dom).format(\"YYYY-MM-DD\"),\n      dom: props.rowdata.dom != null ? moment(props.rowdata.dom).format('YYYY-MM-DD') : null,\n      maritalstatus: props.rowdata.maritalstatus,\n    };\n    props.personAdd({obj});\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      firstname: props.rowdata?.firstname,\n      middlename: props.rowdata?.middlename,\n      lastname: props.rowdata?.lastname,\n      mobile: props.rowdata?.mobile,\n      aadharno: props.rowdata?.aadharno,\n      gender: props.rowdata?.gender,\n      housetype: props.rowdata?.housetype,\n      qualification: props.rowdata?.qualification,\n      addressline1: props.rowdata?.addressline1,\n      addressline2: props.rowdata?.addressline2,\n      area_id: props.rowdata?.area_id,\n      state_id: props.rowdata.state_id,\n      district_id: props.rowdata.district_id,\n      city_id: props.rowdata.city_id,\n      bank_id: props.rowdata.bank_id,\n      occupation_id: props.rowdata.occupation_id,\n      pincode: props.rowdata.pincode,\n      ifsccode: props.rowdata.ifsccode,\n      income: props.rowdata.income,\n      accono: props.rowdata.accono,\n      dob: moment(props.rowdata?.dob).format(\"YYYY-MM-DD\"),\n      // dom: moment(props.rowdata?.dom).format(\"YYYY-MM-DD\"),\n      dom: props.rowdata.dom != null ? moment(props.rowdata.dom).format('YYYY-MM-DD') : null,\n      maritalstatus: props.rowdata.maritalstatus,\n    };\n    props.personAdd({obj, type: props.type, typeId: props.typeId});\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    form.resetFields();\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n            form.resetFields();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Customer\n    </h5>\n  );\n\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck = current && current < moment(startDate, \"YYYY-MM-DD\");\n      }\n      if (endDate) {\n        endCheck = current && current > moment(endDate, \"YYYY-MM-DD\");\n      }\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  \n\n  useEffect(() => {\n    form.setFieldsValue({\n      firstname: props.rowdata.firstname,\n      middlename: props.rowdata.middlename,\n      lastname: props.rowdata.lastname,\n      mobile: props.rowdata.mobile,\n      aadharno: props.rowdata.aadharno,\n      gender: props.rowdata.gender,\n      dob: props.rowdata.dob,\n      maritalstatus: props.rowdata.maritalstatus,\n      dom: props.rowdata.dom,\n      qualification: props.rowdata.qualification,\n      occupation_id: props.rowdata.occupation_id,\n      housetype: props.rowdata.housetype,\n      income: props.rowdata.income,\n      bank_id: props.rowdata.bank_id,\n      accono: props.rowdata.accono,\n      ifsccode: props.rowdata.ifsccode,\n      state_id: props.rowdata.state_id,\n      district_id: props.rowdata.district_id,\n      city_id: props.rowdata.city_id,\n      area_id: props.rowdata.area_id,\n      pincode: props.rowdata.pincode,\n      addressline1: props.rowdata.addressline1,\n      addressline2: props.rowdata.addressline2,\n    });\n  }, [props.rowdata]);\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        form.resetFields();\n        handleResetInputValues();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={916}\n    >\n      <Form\n        form={form}\n        name=\"userForm\"\n        layout=\"vertical\"\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"First Name :\"\n              name=\"firstname\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your First Name!\",\n                },\n                {\n                  pattern: new RegExp(/^[a-zA-Z][a-zA-Z\\s]+$/i),\n                  message: \"field does not accept numbers\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Firstname\"\n                name=\"firstname\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                placeholder=\"First Name\"\n                value={props.rowdata?.firstname}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Middle Name :\"\n              name=\"middlename\"\n              rules={[\n                // {\n                //   required: true,\n                //   message: \"Please input your First Name!\",\n                // },\n                // {\n                //   pattern: new RegExp(/^[a-zA-Z][a-zA-Z\\s]+$/i),\n                //   message: \"field does not accept numbers\",\n                // },\n                {\n                  pattern: new RegExp(/^[a-zA-Z]+$/),\n                  message: \"field does not space allow\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Middlename\"\n                name=\"middlename\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                placeholder=\"Middle Name\"\n                value={props.rowdata?.middlename}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Last Name :\"\n              name=\"lastname\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Last Name!\",\n                },\n                // {\n                //   // pattern: new RegExp(/^[a-zA-Z][a-zA-Z\\s]+$/i),\n                //   // pattern: new RegExp(/^(?=[\\p{L}0-9])[\\p{L}\\p{N}_@,.&$%#\\s-]{1}$/u),\n                //   message: \"field does not accept numbers\",\n                // },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Lastname\"\n                name=\"lastname\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Last Name\"\n                value={props.rowdata?.lastname}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Mobile Number :\"\n              name=\"mobile\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Mobile Number!\",\n                },\n                {\n                  min: 10,\n                  message: \"Not a valid Mobile Number!\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Mobile\"\n                name=\"mobile\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Mobile Number\"\n                onBlur={(data) => {\n                  props.checkMobileValidate({ mobile: data.value });\n                }}\n                maxLength={10}\n                value={\n                  props.rowdata?.mobile == null ? \"\" : props.rowdata?.mobile\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Aadhar No:\"\n              name=\"aadharno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Aadhar Number!\",\n                },\n                {\n                  min: 12,\n                  message: \"Not a valid aadhar number\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"aadharno\"\n                name=\"aadharno\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Aadhar No \"\n                maxLength={12}\n                onBlur={(data) => {\n                  props.checkAadharnoValidate({ aadharno: data.value });\n                }}\n                value={\n                  props.rowdata?.aadharno == null ? \"\" : props.rowdata?.aadharno\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Gender\"\n              name=\"gender\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your gender!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select Gender\"\n                optionFilterProp=\"gender\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"gender\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.gender == null ? \"\" : props.rowdata?.gender\n                }\n              >\n                {genderList.map((gender, index) => {\n                  return (\n                    <Option key={index} value={gender.id}>\n                      {gender.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Date of Birth  :\"\n              name=\"dob\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Date of Birth!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <DatePicker\n                id=\"dob\"\n                name=\"dob\"\n                style={{ width: \"100%\" }}\n                format=\"DD-MM-YYYY\"\n                disabledDate={disableDateRanges({\n                  endDate: new Date(),\n                  // startDate: new Date(\"2020-01-01\"),\n                })}\n                placeholder=\"Select Date of Birth\"\n                value={props.rowdata.dob == null ? \"\" : props.rowdata?.dob}\n                onChange={(date) => {\n                  props.InputChangeValue({\n                    key: \"dob\",\n                    value: date,\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Marital Status\"\n              name=\"maritalstatus\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Marital Status!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Marital Status\"\n                optionFilterProp=\"maritalstatus\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"maritalstatus\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.maritalstatus == null\n                    ? \"\"\n                    : props.rowdata?.maritalstatus\n                }\n              >\n                {maritalStatusList.map((maritalstatus, index) => {\n                  return (\n                    <Option key={index} value={maritalstatus.value}>\n                      {maritalstatus.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          {props.rowdata.maritalstatus && (\n            <>\n              <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n                <Form.Item\n                  label=\"Date of Marriage  :\"\n                  name=\"dom\"\n                  // rules={[\n                  //   {\n                  //     required: true,\n                  //     message: \"Please select your marriage Date!\",\n                  //   },\n                  // ]}\n                  hasFeedback\n                >\n                  <DatePicker\n                    id=\"dom\"\n                    name=\"dom\"\n                    style={{ width: \"100%\" }}\n                    format=\"DD-MM-YYYY\"\n                    placeholder=\"Select Date of Marriage\"\n                    disabledDate={disableDateRanges({\n                      endDate: new Date(),\n                    })}\n                    value={props.rowdata.dom == null ? \"\" : props.rowdata?.dom}\n                    onChange={(date) => {\n                      props.InputChangeValue({\n                        key: \"dom\",\n                        value: date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n            </>\n          )}\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Qualification\"\n              name=\"qualification\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Qualification!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select Qualification\"\n                optionFilterProp=\"Qualification\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"qualification\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.qualification == null\n                    ? \"\"\n                    : props.rowdata?.qualification\n                }\n              >\n                {qualificationList.map((qualification, index) => {\n                  return (\n                    <Option key={index} value={qualification.id}>\n                      {qualification.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Occupation :\"\n              name=\"occupation_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Occupation!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Occupation\"\n                optionFilterProp=\"occupation\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"occupation_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.occupation_id == null\n                    ? \"\"\n                    : props.rowdata?.occupation_id\n                }\n              >\n                {props.miniOccupationList.map((occupation, index) => {\n                  return (\n                    <Option key={index} value={occupation.id}>\n                      {occupation.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"House Type\"\n              name=\"housetype\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your House Type!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select House Type\"\n                optionFilterProp=\"Housetype\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"housetype\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.housetype == null\n                    ? \"\"\n                    : props.rowdata?.housetype\n                }\n              >\n                {housetypeList.map((housetype, index) => {\n                  return (\n                    <Option key={index} value={housetype.id}>\n                      {housetype.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Income :\"\n              name=\"income\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Income!\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Income\"\n                name=\"income\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Income\"\n                maxLength={6}\n                value={\n                  props.rowdata.income == null ? \"\" : props.rowdata?.income\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Bank :\"\n              name=\"bank_id\"\n              // rules={[\n              //   {\n              //     required: true,\n              //     message: \"Please select your Bank!\",\n              //   },\n              // ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                allowClear\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Bank\"\n                optionFilterProp=\"Bank\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"bank_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.bank_id == null ? \"\" : props.rowdata?.bank_id\n                }\n              >\n                {props.miniBanksList.map((bank, index) => {\n                  return (\n                    <Option key={index} value={bank.id}>\n                      {bank.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Account Number :\"\n              name=\"accono\"\n              rules={[\n                // {\n                //   required: true,\n                //   message: \"Please input your Account Number!\",\n                // },\n                {\n                  min: 9,\n                  message: \"Account Number Must be minimum 9 characters\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Accono\"\n                name=\"accono\"\n                maxLength={18}\n                style={{ width: \"100%\" }}\n                placeholder=\"Account Number\"\n                value={\n                  props.rowdata.accono == null ? \"\" : props.rowdata?.accono\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"IFSC Code\"\n              name=\"ifsccode\"\n              rules={[\n                // {\n                //   required: true,\n                //   message: \"Please input your IFSC code!\",\n                // },\n                // {\n                //   pattern: new RegExp(/[A-Z]{4}[0][a-zA-Z0-9]{6}$/i),\n                //   message: \"field does not accept IFSC code\",\n                // },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Ifsccode\"\n                name=\"ifsccode\"\n                style={{ width: \"100%\" }}\n                maxLength={11}\n                placeholder=\"IFSC Code\"\n                value={props.rowdata?.ifsccode}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"State :\"\n              name=\"state_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your State!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select State\"\n                optionFilterProp=\"state\"\n                onChange={(value) => {\n                  props.getMiniDistrict({ state: value });\n                  props.InputChangeValue({\n                    key: \"state_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.state_id == null ? \"\" : props.rowdata?.state_id\n                }\n              >\n                {props.miniStatesList.map((state, index) => {\n                  return (\n                    <Option key={index} value={state.id}>\n                      {state.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"District :\"\n              name=\"district_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your District!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select District\"\n                optionFilterProp=\"district\"\n                onChange={(value) => {\n                  props.getMiniCity({ district: value });\n                  props.InputChangeValue({\n                    key: \"district_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.district_id == null\n                    ? \"\"\n                    : props.rowdata?.district_id\n                }\n              >\n                {props.miniDistrictList.map((district, index) => {\n                  return (\n                    <Option key={index} value={district.id}>\n                      {district.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"City :\"\n              name=\"city_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your City!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select City\"\n                optionFilterProp=\"city\"\n                onChange={(value) => {\n                  props.getMiniArea({ city: value });\n                  props.InputChangeValue({\n                    key: \"city_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.city_id == null ? \"\" : props.rowdata?.city_id\n                }\n              >\n                {props.miniCityList.map((city, index) => {\n                  return (\n                    <Option key={index} value={city.id}>\n                      {city.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Area :\"\n              name=\"area_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your Area!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Area\"\n                optionFilterProp=\"area\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"area_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.area_id == null ? \"\" : props.rowdata?.area_id\n                }\n              >\n                {props.miniAreaList.map((area, index) => {\n                  return (\n                    <Option key={index} value={area.id}>\n                      {area.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Pincode :\"\n              name=\"pincode\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Pincode!\",\n                },\n                {\n                  pattern: new RegExp(/^\\d{6}$/g),\n                  message: \"field does not accept pincode\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Pincode\"\n                name=\"pincode\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Pincode\"\n                maxLength={6}\n                value={\n                  props.rowdata.pincode == null ? \"\" : props.rowdata?.pincode\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Address 1:\"\n              name=\"addressline1\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Input your Address!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input.TextArea\n                id=\"Address Line1\"\n                name=\"addressline1\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Addressline1\"\n                value={props.rowdata?.addressline1}\n                onChange={ChangeHandeler}\n                maxLength={150}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item label=\"Address 2:\" name=\"addressline2\" hasFeedback>\n              <Input.TextArea\n                id=\"Addressline2\"\n                name=\"addressline2\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Addressline2\"\n                value={props.rowdata?.addressline2}\n                onChange={ChangeHandeler}\n                maxLength={150}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ person, mini }) {\n  return {\n    rowdata: person.rowdata,\n    model: person.model,\n    miniStatesList: mini.miniStatesList,\n    miniDistrictList: mini.miniDistrictList,\n    miniCityList: mini.miniCityList,\n    miniAreaList: mini.miniAreaList,\n    miniBanksList: mini.miniBanksList,\n    miniOccupationList: mini.miniOccupationList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  personAdd,\n  checkAadharnoValidate,\n  checkMobileValidate,\n  isModelVisible,\n  InputChangeValue,\n  getMiniDistrict,\n  getMiniCity,\n  getMiniArea,\n  getMiniBanks,\n  getMiniOccupation,\n  getMiniStates,\n})(AddPerson);\n","export default __webpack_public_path__ + \"static/media/dummy-img.4128e0e1.jpeg\";","export default __webpack_public_path__ + \"static/media/defaultVechicleImg.5d5b5510.svg\";","import React from \"react\";\nimport { Card, Row, Col, Table, Space, Spin, Popconfirm } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { isMobile } from \"react-device-detect\";\nimport moment from \"moment\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { purchaseDelete } from \"../../../../store/sideMenu/purchases/purchasesSlice\";\n\nfunction PurchaseListView(props) {\n  const { purchaseList } = props;\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-100 hp-text-color-dark-0 hp-font-weight-600 \";\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"3%\",\n      fixed: isMobile ? null : \"left\",\n    },\n    {\n      title: \"Date\",\n      width: \"4%\",\n      fixed: isMobile ? null : \"left\",\n      render: (row) => (\n        <span className={columnClass}>\n          {moment(row.date).format(\"DD-MM-YYYY\")}\n        </span>\n      ),\n    },\n    {\n      title: \"Purchase Type\",\n      width: \"6%\",\n      fixed: isMobile ? null : \"left\",\n      render: (row) => (\n        <span className={columnClass}>{row.partytype_name} Purchase</span>\n      ),\n    },\n    {\n      title: \"Doc No\",\n      dataIndex: \"code\",\n      width: \"7%\",\n      render: (text) => <span className={columnClass}>{text}</span>,\n    },\n\n    {\n      title: \"Customer\",\n      width: \"8%\",\n      render: (row) => (\n        <span className={columnClass}>{row.customer?.firstname}</span>\n      ),\n    },\n    {\n      title: \"Vehicle No\",\n      width: \"5%\",\n      render: (row) => (\n        <Link to={`/pages/purchases-view/` + row.id}>\n          {row.vehicle?.vehicleno}\n        </Link>\n      ),\n    },\n    {\n      title: \"Counter Name\",\n      width: \"5%\",\n      render: (row) => <span className={columnClass}>{row.counter?.name}</span>,\n    },\n\n    {\n      title: \"Status\",\n      dataIndex: \"approvalstatus_name\",\n      width: \"4%\",\n      render: (text) => <span className={columnClass}>{text}</span>,\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      // sorter: true,\n      width: \"3%\",\n      // fixed: isMobile ? null : \"right\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {/* {(row.approvalstatus == 2 || row.approvalstatus == 3) && ( */}\n          {row.editable == true && (\n            <>\n              {props.userAccessList?.indexOf(\"Purchase.change_purchase\") !==\n                -1 && (\n                <Link to={`/pages/purchasesadd/` + row.id}>\n                  <i\n                    className=\"ri-edit-box-line hp-mr-2 \"\n                    style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n                  ></i>\n                </Link>\n              )}\n              {/* {props.userAccessList?.indexOf(\"Purchase.delete_purchase\") !==\n                  -1 && (\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this Record?\"\n                      onConfirm={() => props.purchaseDelete(row)}\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      className=\"hp-ml-8\"\n                      icon={\n                        <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n                      }\n                    >\n                  <i\n                    className=\"ri-delete-bin-2-line \"\n                    style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n                  ></i>\n                  </Popconfirm>\n                )} */}\n            </>\n          )}\n        </Space>\n      ),\n    },\n  ];\n  const data = purchaseList.map((row, key) => ({\n    ...row,\n    // index: key + 1,\n    index:\n      (props.purchaseParams.page - 1) * props.purchaseParams.page_size +\n      (key + 1),\n  }));\n\n  return (\n    <Row className=\"hp-mb-12\">\n      <Col span={24}>\n        <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n          <Table\n            columns={columns}\n            dataSource={data}\n            pagination={false}\n            scroll={{ x: 1300 }}\n            size=\"middle\"\n          />\n        </Spin>\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ purchase, system }) {\n  return {\n    loading: purchase.loading,\n    purchaseParams: purchase.purchaseParams,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  purchaseDelete,\n})(PurchaseListView);\n","import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Row, Col, Button, Card, Avatar, Typography, InputNumber, Tooltip, Image } from \"antd\";\nimport brokenImg from \"../../../../assets/images/broken_img.png\";\nimport { ArrowUpOutlined } from \"@ant-design/icons\";\nimport dummy from \"../../../../assets/images/pages/profile/dummy-img.jpeg\";\nimport defaultVehicle from \"../../../../assets/images/defaultVechicleImg.svg\";\n\nexport default function PurchaseGridView(props) {\n  const { value } = props;\n  const { Text, Link } = Typography;\n  return (\n    <Col\n      span={24}\n      xs={24}\n      sm={12}\n      md={12}\n      lg={8}\n      xl={8}\n      xxl={6}\n      className=\"hp-mb-32\"\n      key={value.id}\n    >\n      <Card className=\"hp-border-color-black-40 hp-card-6 hp-eCommerceCardOne hp-eCommerceCardOne-wishlist\">\n        <Row>\n          <Col span={24}>\n            <Row gutter={[24, 24]}>\n              <Col className=\"hp-mb-16 hp-mt-0 hp-p-0\" span={8}>\n                {value.vehiclefront_image != null ? (\n                  <Image\n                    width={100}\n                    height={50}\n                    preview={false}\n                    src={value.vehiclefront_image?.file_thumbnail}\n                    alt={value.vehiclefront_image?.alt}\n                    className=\"hp-border-radius hp-mb-10 ant-upload-select-picture-card hp-preview-img\"\n                    onError={({ currentTarget }) => {\n                      currentTarget.onerror = null; // prevents looping\n                      currentTarget.src=brokenImg;\n                    }}\n                  />\n                ) : (\n                  <Image\n                    width={100}\n                    height={50}\n                    preview={false}\n                    src={defaultVehicle}\n                    alt={\"defaultVehicle\"}\n                    className=\"hp-border-radius hp-mb-10\"\n                  />\n                )}\n              </Col>\n\n              <Col span={16}>\n                  <p className=\"hp-mb-10 hp-p1-body hp-text-blue hp-font-weight-600\">\n                    {value.vehicle?.vehicleno ? value.vehicle?.vehicleno : \"None\"}\n                  </p> \n               \n                <Tooltip title={value.vehicle?.version?.name}>\n                  <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                    {/* {value.vehicle.version.name} */}\n                    {value.vehicle?.version?.name?.length > 10\n                      ? `${value.vehicle?.version?.name?.substring(0, 10)}...`\n                      : value.vehicle?.version?.name}\n                  </p>\n                </Tooltip>\n              </Col>\n            </Row>\n\n            <Row gutter={[24, 24]} className=\"hp-mb-16\">\n              <Col span={24}>\n                {/* <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Doc No\n                </p>\n\n                <p className=\"hp-mb-10 hp-text-color-black-100 hp-mb-0 hp-text-color-dark-0 hp-p1-body hp-font-weight-500\">\n                  {value.code}\n                </p> */}\n\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Created By\n                </p>\n\n                <p className=\"hp-mb-10 hp-text-color-black-100 hp-mb-0 hp-text-color-dark-0 hp-p1-body hp-font-weight-500\">\n                    { value.createdby?.fullname != null ? value.createdby?.fullname : \"------\"}\n                  </p>\n\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-text-color-black-80 hp-text-color-dark-30\">\n                  Purchases Status\n                </p>\n\n                <Text\n                  type={\n                    value.approvalstatus == 2\n                      ? \"success\"\n                      : value.approvalstatus == 3\n                      ? \"danger\"\n                      : \"warning\"\n                  }\n                >\n                  {value.approvalstatus_name == null\n                    ? \"Pending\"\n                    : value.approvalstatus_name}\n                </Text>\n              </Col>\n\n              {/* <Col span={8}>\n                  {\n                  <Link to=\"\">\n                    <Button\n                      icon={<ArrowRight className=\"remix-icon\" width={50} />}\n                      type=\"primary\"\n                      className=\"hp-px-12 hp-arrow-btn\"\n                    >\n                    </Button>\n                  </Link>\n                  }\n                </Col> */}\n            </Row>\n\n            <Row gutter={[24, 24]} className=\"hp-mb-10\">\n              <Col span={8}>\n                <Avatar\n                  size={55}\n                  icon={\n                    value.customer_image != null ? (\n                      <Image\n                        src={value.customer_image?.file_thumbnail}\n                        alt={value.customer_image?.alt}\n                        preview={false}\n                        className=\"hp-emp-img\"\n                        onError={({ currentTarget }) => {\n                          currentTarget.onerror = null; // prevents looping\n                          currentTarget.src=brokenImg;\n                        }}\n                      />\n                    ) : (\n                      <Image src={dummy} \n                      preview={false}\n                      alt={\"dummy\"}\n                      className=\"hp-emp-img \" />\n                    )\n                  }\n                />\n              </Col>\n\n              <Col span={16}>\n                <p className=\"hp-mb-4 hp-text-color-black-100 hp-mb-0 hp-text-color-dark-0 hp-p1-body hp-font-weight-500\">\n                  {value.customer?.firstname}\n                </p>\n\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-mb-10 hp-text-color-black-80 hp-text-color-dark-30\">\n                  {value.partytype_name}\n                </p>\n              </Col>\n            </Row>\n            <Row gutter={[24, 24]} className=\"hp-mb-10\">\n              <Col span={8}>\n                <Avatar size={55} icon={<ArrowUpOutlined />} />\n              </Col>\n\n              <Col span={16}>\n                <p className=\"hp-mb-4 hp-text-color-black-100 hp-mb-0 hp-text-color-dark-0 hp-p1-body hp-font-weight-500\">\n                  {value.counter?.name}\n                </p>\n\n                <p className=\"hp-mb-0 hp-caption hp-font-weight-400 hp-mb-16  hp-text-color-black-80 hp-text-color-dark-30\">\n                  Counter Name\n                </p>\n              </Col>\n            </Row>\n\n            <Row gutter={[8, 8]}>\n              <Col span={24} className=\"hp-w-100\">\n                <Link href={`/pages/purchases-view/` + value.id}>\n                  <Button\n                    block\n                    // icon={<RiShoppingBagLine className=\"remix-icon\" />}\n                    className=\"hp-px-12 hp-btn-bg-color\"\n                  >\n                    View Details\n                  </Button>\n                </Link>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Button,\n  Drawer,\n  Space,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport moment, { min } from \"moment\";\nimport * as Person from \"../../../../../store/Masters/Person/personSlice\";\n\nimport {\n  isDrawerVisible,\n  FilterInputChangeValue,\n  getPurchaseList,\n  setPurchaseParams,\n} from \"../../../../../store/sideMenu/purchases/purchasesSlice\";\nimport {\n  getMiniCounters,\n  getMiniClusters,\n  getMiniDivisions,\n  getMiniZones,\n  getMiniColors,\n  getMiniVehicles,\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n} from \"../../../../../store/mini/miniSlice\";\nimport AddPerson from \"../../../MastersDashboard/person/addPerson\";\nimport AddVehicles from \"../../../MastersDashboard/vehicles/addVehicles\";\nimport {\n  getVehicles,\n  SetVehiclesParams,\n} from \"../../../../../store/Masters/Vehicles/vehiclesSlice\";\nvar date = new Date(),\n  y = date.getFullYear(),\n  m = date.getMonth();\nfunction filter(props) {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniZones();\n    props.getMiniCounters();\n    props.getMiniClusters();\n    props.getMiniDivisions();\n    props.getMiniColors();\n    props.getPerson({ ...props.personParams, page: 1 });\n    props.getMiniVehicles();\n  }, []);\n  const purchaseTypeList = [\n    { id: 1, name: \"Customer\" },\n    { id: 2, name: \"Dealer\" },\n    { id: 3, name: \"Exchange\" },\n    { id: 4, name: \"Seizing\" },\n    { id: 5, name: \"Return\" },\n  ];\n  const stockTypeList = [\n    { value: true, name: \"Yes\" },\n    { value: false, name: \"No\" },\n  ];\n  const availabilityList = [\n    { value: true, name: \"Yes\" },\n    { value: false, name: \"No\" },\n  ];\n  const approvalStatusList = [\n    { id: 1, name: \"Pending\" },\n    { id: 2, name: \"Approved\" },\n    { id: 3, name: \"Reject\" },\n  ];\n  function onFinish() {\n    props.setPurchaseParams({\n      ...props.purchaseParams,\n      start_date: props.purchaseParams.start_date,\n      end_date: props.purchaseParams.end_date,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getPurchaseList({\n      ...props.purchaseParams,\n      // start_date: props.purchaseParams.start_date != \"\" ? props.purchaseParams.start_date.format(\"YYYY-MM-DD\") : \"\",\n      // end_date: props.purchaseParams.end_date != \"\" ? props.purchaseParams.end_date.add(1, \"days\").format(\"YYYY-MM-DD\") : \"\",\n      // start_date:\n      //   props.purchaseParams.start_date != null &&\n      //   props.purchaseParams.start_date != \"\"\n      //     ? moment(props.purchaseParams.start_date).format(\"YYYY-MM-DD\")\n      //     : \"\",\n      // end_date:\n      //   props.purchaseParams.end_date != null &&\n      //   props.purchaseParams.end_date != \"\"\n      //     ? moment(props.purchaseParams.end_date)\n      //         .add(1, \"days\")\n      //         .format(\"YYYY-MM-DD\")\n      //     : \"\",\n      start_date: props.purchaseParams.start_date,\n      end_date: props.purchaseParams.end_date,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.isDrawerVisible(false);\n  }\n  function clearFilter() {\n    props.setPurchaseParams({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getPurchaseList({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getMiniZones();\n    props.getMiniCounters();\n    props.getMiniClusters();\n    props.getMiniDivisions();\n    props.getMiniColors();\n  }\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.purchaseParams?.start_date,\n      end_date: props.purchaseParams?.end_date,\n      color: props.purchaseParams?.color,\n      customer: props.purchaseParams?.customer,\n      counter__zone: props.purchaseParams?.counter__zone,\n      counter__division: props.purchaseParams?.counter__division,\n      counter__cluster: props.purchaseParams?.counter__cluster,\n      counter: props.purchaseParams?.counter,\n      is_stock: props.purchaseParams?.is_stock,\n      vehicle: props.purchaseParams?.vehicle,\n      partytype: props.purchaseParams?.partytype,\n      approvalstatus: props.purchaseParams?.approvalstatus,\n      availability: props.purchaseParams?.availability,\n    });\n  }, [props.purchaseParams]);\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Drawer\n          title=\"Filters\"\n          loading={props.loading}\n          width={420}\n          className=\"hp-drawer-mobile\"\n          onClose={() => {\n            props.isDrawerVisible(false);\n          }}\n          placement=\"right\"\n          visible={props.drawer}\n          bodyStyle={{\n            paddingBottom: 10,\n          }}\n        >\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              <Col span={12}>\n                <Form.Item label=\"From Date\" name=\"start_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: new Date(),\n                    })}\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"start_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                      if (date == null) {\n                        props.FilterInputChangeValue({\n                          key: \"end_date\",\n                          value: \"\",\n                        });\n                      }\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"To Date\" name=\"end_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment().format(\"YYYY-MM-DD\"),\n                      startDate: moment(\n                        props.purchaseParams?.start_date\n                      ).format(\"YYYY-MM-DD\"),\n                    })}\n                    disabled={\n                      props.purchaseParams.start_date == null ||\n                      props.purchaseParams.start_date == \"\"\n                        ? true\n                        : false\n                    }\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"end_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              {/* <Col span={12}>\n                <Form.Item label=\"Color\" name=\"color\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select a Color\"\n                    optionFilterProp=\"Color\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"color\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseParams.color_id == null\n                        ? \"\"\n                        : props.purchaseParams?.color_id\n                    }\n                  >\n                    {props.miniColorsList.map((color, index) => {\n                      return (\n                        <Option key={index} value={color.id}>\n                          {color.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col> */}\n\n              <Col span={12}>\n                <Form.Item label=\"Customer\" name=\"customer\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Customer\"\n                    optionFilterProp=\"customer_id\"\n                    onSearch={(value) => {\n                      props.SetPersonParams({\n                        ...props.personParams,\n                        page: 1,\n                        search: value,\n                      });\n                      props.getPerson({\n                        ...props.personParams,\n                        page: 1,\n                        search: value,\n                      });\n                    }}\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    filterOption={false}\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"customer\",\n                        value: value,\n                      });\n                    }}\n                    onPopupScroll={() => {\n                      if (\n                        props.personParams.page < props.personParams.no_of_pages\n                      ) {\n                        props.SetPersonParams({\n                          ...props.personParams,\n                          page: props.personParams.page + 1,\n                        });\n                        props.getPerson({\n                          ...props.personParams,\n                          page: props.personParams.page + 1,\n                        });\n                      }\n                    }}\n                    value={\n                      props.purchaseParams.customer_id == null\n                        ? \"\"\n                        : props.purchaseParams?.customer_id\n                    }\n                  >\n                    {props.personlist.map((person, index) => {\n                      return (\n                        <Option value={person.id}>\n                          {person.firstname} {person.lastname} - {person.mobile}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Zone Name :\" name=\"counter__zone\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Zone\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniDivisions({ zone: value });\n                      // props.getMiniDivisionsClearData();\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.FilterInputChangeValue({\n                        key: \"counter__zone\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseParams.zone_id == null\n                        ? \"\"\n                        : props.purchaseParams?.zone_id\n                    }\n                  >\n                    {props.miniZonesList.map((zone, index) => {\n                      return (\n                        <Option key={index} value={zone.id}>\n                          {zone.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Division Name:\" name=\"counter__division\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select  Division\"\n                    optionFilterProp=\"division\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniClusters({ division: value });\n                      props.getMiniClustersClearData();\n                      props.getMiniCountersClearData();\n                      props.FilterInputChangeValue({\n                        key: \"counter__division\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseParams.division_id == null\n                        ? \"\"\n                        : props.purchaseParams?.division_id\n                    }\n                  >\n                    {props.miniDivisionsList.map((division, index) => {\n                      return (\n                        <Option key={index} value={division.id}>\n                          {division.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Cluster Name:\" name=\"counter__cluster\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Cluster\"\n                    optionFilterProp=\"cluster\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniCounters({ cluster: value });\n                      props.getMiniCountersClearData({});\n                      props.FilterInputChangeValue({\n                        key: \"counter__cluster\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseParams.cluster_id == null\n                        ? \"\"\n                        : props.purchaseParams?.cluster_id\n                    }\n                  >\n                    {props.miniClustersList.map((cluster, index) => {\n                      return (\n                        <Option key={index} value={cluster.id}>\n                          {cluster.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Counter\" name=\"counter\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select a Counter\"\n                    optionFilterProp=\"counter\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      // props.GetCounterByID(value);\n                      props.FilterInputChangeValue({\n                        key: \"counter\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseParams.counter_id == null\n                        ? \"\"\n                        : props.purchaseParams?.counter_id\n                    }\n                  >\n                    {props.miniCountersList.map((counter, index) => {\n                      return (\n                        <Option key={index} value={counter.id}>\n                          {counter.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Purchase Type\" name=\"partytype\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select a Purchase Type\"\n                    optionFilterProp=\"partytype\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"partytype\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseParams.partytype == null\n                        ? \"\"\n                        : props.purchaseParams?.partytype\n                    }\n                  >\n                    {purchaseTypeList.map((purchase, index) => {\n                      return (\n                        <Option value={purchase.id}>{purchase.name}</Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Approval Status\" name=\"approvalstatus\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Approval Status\"\n                    optionFilterProp=\"approvalstatus\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"approvalstatus\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseParams.approvalstatus == null\n                        ? \"\"\n                        : props.purchaseParams?.approvalstatus\n                    }\n                  >\n                    {approvalStatusList.map((approvals, index) => {\n                      return (\n                        <Option key={index} value={approvals.id}>\n                          {approvals.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              {/* <Col span={12}>\n                <Form.Item label=\"Stock Type\" name=\"is_stock\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select a Stock Type\"\n                    optionFilterProp=\"is_stock\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"is_stock\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.purchaseParams.is_stock == null\n                        ? \"\"\n                        : props.purchaseParams?.is_stock\n                    }\n                  >\n                    {stockTypeList.map((stock, index) => {\n                      return (\n                        <Option key={index} value={stock.value}>\n                          {stock.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              {props.purchaseParams.is_stock && (\n                <Col span={12}>\n                  <Form.Item label=\"Availability\" name=\"availability\">\n                    <Select\n                      showSearch\n                      allowClear\n                      placeholder=\"Select Availability\"\n                      optionFilterProp=\"availability\"\n                      filterOption={(input, option) =>\n                        option.children\n                          .toLowerCase()\n                          .includes(input.toLowerCase())\n                      }\n                      onChange={(value) => {\n                        props.FilterInputChangeValue({\n                          key: \"availability\",\n                          value: value,\n                        });\n                      }}\n                      value={\n                        props.purchaseParams.availability == null\n                          ? \"\"\n                          : props.purchaseParams?.availability\n                      }\n                    >\n                      {availabilityList.map((availability, index) => {\n                        return (\n                          <Option key={index} value={availability.value}>\n                            {availability.name}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  </Form.Item>\n                </Col>\n              )} */}\n\n              <Col span={12}>\n                <Form.Item label=\"Vehicle\" name=\"vehicle\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Vehicle\"\n                    optionFilterProp=\"vehicle_id\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onSearch={(value) => {\n                      props.SetVehiclesParams({\n                        ...props.vehiclesParams,\n                        page: 1,\n                        search: value,\n                      });\n                      props.getVehicles({\n                        ...props.vehiclesParams,\n                        page: 1,\n                        search: value,\n                      });\n                    }}\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    // filterOption={false}\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"vehicle\",\n                        value: value,\n                      });\n                    }}\n                    onPopupScroll={() => {\n                      if (\n                        props.vehiclesParams.page <\n                        props.vehiclesParams.no_of_pages\n                      ) {\n                        props.SetVehiclesParams({\n                          ...props.vehiclesParams,\n                          page: props.vehiclesParams.page + 1,\n                        });\n                        props.getVehicles({\n                          ...props.vehiclesParams,\n                          page: props.vehiclesParams.page + 1,\n                        });\n                      }\n                    }}\n                    value={\n                      props.purchaseParams.vehicle_id == null\n                        ? \"\"\n                        : props.purchaseParams?.vehicle_id\n                    }\n                  >\n                    {props.miniVehiclesList.map((vehicle, index) => {\n                      return (\n                        <Option key={index} value={vehicle.id}>\n                          {vehicle.vehicleno}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    clearFilter();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n              </Col>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Apply\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n          <AddPerson />\n          <AddVehicles />\n        </Drawer>\n      </Col>\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ purchase, mini, person, vehicles }) {\n  return {\n    drawer: purchase.drawer,\n    purchaseParams: purchase.purchaseParams,\n    miniCountersList: mini.miniCountersList,\n    miniClustersList: mini.miniClustersList,\n    miniDivisionsList: mini.miniDivisionsList,\n    miniZonesList: mini.miniZonesList,\n    miniColorsList: mini.miniColorsList,\n    personParams: person.personParams,\n    personlist: person.personlist,\n    miniVehiclesList: mini.miniVehiclesList,\n    vehiclesParams: vehicles.vehiclesParams,\n    loading: purchase.loading,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  isDrawerVisible,\n  getMiniCounters,\n  getMiniClusters,\n  getMiniDivisions,\n  getMiniZones,\n  FilterInputChangeValue,\n  getPurchaseList,\n  setPurchaseParams,\n  getMiniColors,\n  getPerson: Person.getPerson,\n  SetPersonParams: Person.SetPersonParams,\n  getMiniVehicles,\n  SetVehiclesParams,\n  getVehicles,\n\n  getMiniZonesClearData,\n  getMiniClustersClearData,\n  getMiniDivisionsClearData,\n  getMiniCountersClearData,\n})(filter);\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  Row,\n  Col,\n  List,\n  Empty,\n  Button,\n  Input,\n  Card,\n  Pagination,\n  Popconfirm,\n  Spin,\n} from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport {\n  FilterOutlined,\n  UploadOutlined,\n  PlusOutlined,\n  OrderedListOutlined,\n  AppstoreOutlined,\n} from \"@ant-design/icons\";\nimport { getReportList } from \"../../../../store/reports/reportsSlice\";\nimport PageTitle from \"../../../../layout/components/content/page-title\";\nimport PurchaseListView from \"./PurchaseListView\";\nimport PurchaseGridView from \"./PurchaseGridView\";\nimport EmptyImage from \"../../../../assets/images/app/empty-list.svg\";\nimport {\n  getPurchaseList,\n  clearPurchaseList,\n  purchaseDelete,\n  isDrawerVisible,\n  setPurchaseParams,\n} from \"../../../../store/sideMenu/purchases/purchasesSlice\";\nimport Filter from \"./Filters/Filter\";\nimport { isMobile } from \"react-device-detect\";\n\nfunction PurchaseView(props) {\n  const { Search } = Input;\n  useEffect(() => {\n    props.getPurchaseList({\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n  }, []);\n\n  const [productListToggle, setProductListToggle] = useState(false);\n\n  // function onPageChange(page, pageSize) {\n  //   props.getPurchaseList({ page_size: pageSize, page: page == 0 ? 1 : page });\n  // }\n\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n\n  // function deleteRecord(record) {\n  //   Swal.fire({\n  //     title: \"Are you sure?\",\n  //     text: \"You won't be able to revert this!\",\n  //     icon: \"warning\",\n  //     showCancelButton: true,\n  //     confirmButtonColor: \"#3085d6\",\n  //     cancelButtonColor: \"#d33\",\n  //     confirmButtonText: \"Yes, delete it!\",\n  //   }).then((result) => {\n  //     if (result.isConfirmed) {\n  //       props.purchaseDelete(record);\n  //     }\n  //   });\n  // }\n  function onSearch(val) {\n    props.getPurchaseList({ ...props.purchaseParams, page: 1, search: val });\n    props.setPurchaseParams({ ...props.purchaseParams, page: 1, search: val });\n  }\n\n  function onPageChange(page, pageSize) {\n    props.clearPurchaseList();\n\n    props.setPurchaseParams({\n      ...props.purchaseParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getPurchaseList({\n      ...props.purchaseParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  // Export Functionality\n\n  function exportData() {\n    // var { file_format, ...params } = props.reportParamsData;\n    var objData = {\n      file_format: 0,\n      model_name: \"Purchase\",\n    };\n\n    props.getReportList({\n      objData,\n      ParamsData: {\n        ...props.purchaseParams,\n        start_date:\n          props.purchaseParams.start_date != null &&\n          props.purchaseParams.start_date != \"\"\n            ? moment(props.purchaseParams.start_date).format(\"YYYY-MM-DD\")\n            : \"\",\n        end_date:\n          props.purchaseParams.end_date != null &&\n          props.purchaseParams.end_date != \"\"\n            ? moment(props.purchaseParams.end_date)\n                .add(1, \"days\")\n                .format(\"YYYY-MM-DD\")\n            : \"\",\n      },\n    });\n  }\n\n  return (\n    <Row gutter={[12, 12]}>\n      <PageTitle pageTitle=\"Purchases\" goBack={false} />\n      <Col span={24}>\n        <Row gutter={[12, 12]} className=\"hp-ecommerce-app-header \">\n          {/* <Col md={12} xs={24} className=\"hp-ecommerce-app-header-search \"> */}\n          <Col\n            span={24}\n            xs={24}\n            sm={24}\n            md={\n              props.userAccessList?.indexOf(\"Purchase.export_purchase\") !== -1\n                ? 12\n                : 15\n            }\n            className=\"hp-ecommerce-app-header-search \"\n          >\n            <Search\n              placeholder=\"Search for date, doc, number, customer, counter, vehicle\"\n              allowClear\n              onChange={(e) => {\n                if (e.target.value == \"\") {\n                  props.getPurchaseList({\n                    ...props.purchaseParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                  props.setPurchaseParams({\n                    ...props.purchaseParams,\n                    page: 1,\n                    search: \"\",\n                  });\n                }\n              }}\n              onSearch={(value) => {\n                onSearch(value);\n              }}\n            />\n          </Col>\n\n          <Col span={24} xs={4} sm={4} md={3}>\n            <Button\n              onClick={() => {\n                props.isDrawerVisible(true);\n              }}\n              className=\"hp-w-100 hp-p-10 \"\n              icon={<FilterOutlined className=\"hp-mr-10\" />}\n            >\n              {!isMobile && \"Filter\"}\n            </Button>\n          </Col>\n\n          {props.userAccessList?.indexOf(\"Purchase.export_purchase\") !== -1 && (\n            <Col span={24} xs={4} sm={4} md={3}>\n              <Popconfirm\n                placement=\"topRight\"\n                title=\"Are you sure to export this Record?\"\n                onConfirm={() => exportData()}\n                okText=\"Yes\"\n                cancelText=\"No\"\n                icon={\n                  <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n                }>\n                <Button\n                  className=\"hp-w-100 hp-p-10 \"\n                  icon={<UploadOutlined className=\"hp-mr-10\" />}>\n                  {!isMobile && \"Export\"}\n                </Button>\n              </Popconfirm>\n            </Col>\n          )}\n\n          {props.userAccessList?.indexOf(\"Purchase.add_purchase\") !== -1 && (\n            <Col span={24} xs={4} sm={4} md={4}>\n              <Link to=\"/pages/purchasesadd/0\">\n                <Button\n                  className=\"hp-w-100 hp-p-10\"\n                  icon={<PlusOutlined className=\"hp-mr-10\" />}\n                >\n                  {!isMobile && \"Add Purchase\"}\n                </Button>\n              </Link>\n            </Col>\n          )}\n\n          <Col span={24} xs={6} sm={5} md={1}>\n            <Button\n              className=\"hp-w-100 hp-p-10\"\n              icon={<AppstoreOutlined />}\n              onClick={() => setProductListToggle(false)}\n            ></Button>\n          </Col>\n\n          <Col span={24} xs={6} sm={5} md={1}>\n            <Button\n              className=\"hp-w-100 hp-p-10\"\n              icon={<OrderedListOutlined />}\n              onClick={() => setProductListToggle(true)}\n            ></Button>\n          </Col>\n        </Row>\n      </Col>\n\n      <Col\n        span={24}\n        xs={24}\n        className=\"hp-purchase-app-content\"\n        productListToggle={productListToggle}\n        setProductListToggle={setProductListToggle}\n      >\n        <Card>\n          <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n            {props.purchaseList.length !== 0 ? (\n              <>\n                {!productListToggle ? (\n                  <>\n                    <List\n                      dataSource={props.purchaseList}\n                      renderItem={(value) => <PurchaseGridView value={value} />}\n                    />\n                    <Pagination\n                      size=\"small\"\n                      current={props.purchaseParams?.page}\n                      pageSize={props.purchaseParams?.page_size}\n                      total={props.listCount}\n                      showTotal={showTotal}\n                      showSizeChanger\n                      onChange={onPageChange}\n                      className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n                    />\n                  </>\n                ) : (\n                  <>\n                    <PurchaseListView\n                      purchaseList={props.purchaseList}\n                      deletePurchase={props.purchaseDelete}\n                    />{\" \"}\n                    <Pagination\n                      size=\"small\"\n                      current={props.purchaseParams?.page}\n                      pageSize={props.purchaseParams?.page_size}\n                      total={props.listCount}\n                      showTotal={showTotal}\n                      showSizeChanger\n                      onChange={onPageChange}\n                      className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n                    />\n                  </>\n                )}\n              </>\n            ) : (\n              <Card>\n                <Empty\n                  className=\"hp-m-32\"\n                  image={EmptyImage}\n                  imageStyle={{\n                    height: 160,\n                  }}\n                  description={<h5>Your Purchase list is empty</h5>}\n                ></Empty>\n              </Card>\n            )}\n          </Spin>\n        </Card>\n        <Filter />\n      </Col>\n    </Row>\n  );\n}\nfunction mapStateToProps({ purchase, system }) {\n  return {\n    purchaseList: purchase.purchaseList,\n    noofpages: purchase.noofpages,\n    listCount: purchase.listCount,\n    purchaseParams: purchase.purchaseParams,\n    drawer: purchase.drawer,\n    loading: purchase.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getPurchaseList,\n  // countryEdit,\n  purchaseDelete,\n  // isModelVisible,\n  isDrawerVisible,\n  setPurchaseParams,\n  clearPurchaseList,\n  getReportList,\n})(PurchaseView);\n"],"sourceRoot":""}