{"version":3,"sources":["layout/components/content/page-title/index.jsx","assets/images/app/empty-list.svg","assets/images/broken_img.png","assets/images/noimg.png","view/pages/Dashboard/insurance/InsuranceViewModel.jsx","view/pages/Dashboard/insurance/approveInsurace/Filters/Filter.jsx","view/pages/Dashboard/insurance/approveInsurace/index.jsx"],"names":["PageTitle","props","history","useHistory","pageTitle","pageText","goBack","addModelTile","addModelTile2","setIsModalVisible","setIsModalVisible2","span","className","xs","md","xl","to","onClick","size","type","icon","isMobile","connect","newInsurance","system","viewInsuranceModel","insuranceData","userAccessList","isInsuranceViewModelVisible","insuranceApprove","buttons","useState","remarks","setRemarks","Form","useForm","form","InApprove","status","approveObj","reviewer_description","target","value","insurancestatus","id","resetFields","newInsuranceList","title","description","customername","customermobile","aadharno","counter","name","vehicle","vehicleno","customeramount","requestedamount","insurancecategory_name","reviewer","fullname","reviewedon","moment","format","processedon","insurer","insuranceImages","imgFile","aadharfront_image","file","ImgFileThumbnail","file_thumbnail","createdon","alt","aadharback_image","cbook_image","oldpolicy_image","insuranceUpdateImages","insuranceimage","insuranceAgentList","amount","insurancecompany","number","expdate","FooterAddOrUpdate","placement","onConfirm","okText","cancelText","block","FooterCancel","submit","modalTitle","visible","onCancel","footer","indexOf","justify","centered","closeIcon","width","gutter","grid","sm","lg","xxl","dataSource","renderItem","item","Item","Meta","PreviewGroup","map","insuranceImg","src","onError","currentTarget","onerror","brokenImg","preview","noImage","insuranceUpdateImg","layout","onFinish","rules","required","message","hasFeedback","TextArea","style","placeholder","onChange","e","date","Date","getFullYear","getMonth","mini","drawer","insuranceparams","miniCountersList","miniVehiclesList","getInsuranceList","isDrawerVisible","setInsuranceParams","FilterInputChangeValue","getMiniCounters","getMiniVehicles","SetVehiclesParams","getVehicles","useEffect","disableDateRanges","range","startDate","endDate","current","startCheck","endCheck","setFieldsValue","start_date","end_date","insurancecategory","onClose","bodyStyle","paddingBottom","initialValues","remember","page","search","page_size","label","picker","disabledDate","key","disabled","showSearch","allowClear","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","counter_id","index","Option","insurance","onSearch","vehiclesParams","defaultActiveFirstOption","showArrow","onPopupScroll","no_of_pages","vehicle_id","htmlType","noofpages","listCount","loading","isModelVisible","getInsuranceById","clearInsuranceList","clearInsuranceParams","Search","Input","data","row","columnClass","columns","fixed","dataIndex","render","code","record","cursor","color","val","FilterOutlined","tip","spinning","delay","rowClassName","scroll","x","pagination","pageSize","total","showTotal","showSizeChanger","InsuranceViewModel","Filter"],"mappings":"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","file":"static/js/27.32923a56.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function PageTitle(props) {\n  let history = useHistory();\n\n  const {\n    pageTitle,\n    pageText,\n    goBack,\n    addModelTile,\n    addModelTile2,\n    setIsModalVisible,\n    setIsModalVisible2,\n  } = props;\n\n  return (\n    <Col span={24} className=\"hp-mt-12\">\n      <Row>\n        <Col span={16} xs={16} md={12} xl={16}>\n          {goBack && (\n            <Link\n              to=\"#\"\n              onClick={() => {\n                history.goBack();\n              }}\n              className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n            >\n              <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n            </Link>\n          )}\n          <Row className=\"hp-d-inline-block\">\n            <Col span={24}>\n              {pageTitle && <h3 className=\"hp-mb-2 hp-mt-4\">{pageTitle}</h3>}\n            </Col>\n\n            <Col span={24}>\n              {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n            </Col>\n          </Row>\n        </Col>\n        <Col span={8} xs={8} md={12} xl={8}>\n          <div className=\"hp-float-right hp-d-inline-block\">\n            {addModelTile && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile}\n                </Button>\n              </div>\n            )}\n            {addModelTile2 && (\n              <div className=\"hp-pl-4 hp-d-inline-block\">\n                <Button\n                  className=\"hp-pr-12\"\n                  type=\"primary\"\n                  onClick={() => setIsModalVisible2(true)}\n                  // block\n                  icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n                >\n                  {!isMobile && addModelTile2}\n                </Button>\n              </div>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/empty-list.6fd5c5d1.svg\";","export default __webpack_public_path__ + \"static/media/broken_img.203310e1.png\";","export default __webpack_public_path__ + \"static/media/noimg.b2f3d4d2.png\";","import { Fragment, useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport {\n  Button,\n  Modal,\n  Row,\n  Col,\n  List,\n  Popconfirm,\n  Form,\n  Input,\n  Image,\n} from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport moment from \"moment\";\nimport noImage from \"../../../../assets/images/noimg.png\";\nimport {\n  isInsuranceViewModelVisible,\n  insuranceApprove,\n} from \"../../../../store/sideMenu/newInsurance/newInsuranceSlice\";\nimport brokenImg from \"../../../../assets/images/broken_img.png\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst insuranceViewModel = (props) => {\n  const { buttons } = props;\n  const [remarks, setRemarks] = useState({});\n  const [form] = Form.useForm();\n\n  const handleResetInputValues = () => {\n    form.resetFields();\n    props.isInsuranceViewModelVisible(false);\n  };\n\n  function InApprove(status) {\n    props.insuranceApprove({\n      approveObj: {\n        reviewer_description: remarks.target?.value,\n        insurancestatus: status,\n      },\n      id: props.insuranceData.id,\n    });\n    form.resetFields();\n  }\n\n  const newInsuranceList = [\n    {\n      title: \"CUSTOMER NAME\",\n      description:\n        props.insuranceData?.customername == null\n          ? \"none\"\n          : props.insuranceData.customername,\n    },\n    {\n      title: \"CUSTOMER MOBILE\",\n      description:\n        props.insuranceData.customermobile == null\n          ? \"none\"\n          : props.insuranceData.customermobile,\n    },\n    {\n      title: \"AADHAR NUMBER\",\n      description:\n        props.insuranceData.aadharno == null\n          ? \"none\"\n          : props.insuranceData.aadharno,\n    },\n    {\n      title: \"COUNTER NAME\",\n      description:\n        props.insuranceData.counter?.name == null\n          ? \"none\"\n          : props.insuranceData.counter?.name,\n    },\n    {\n      title: \"VEHICLE NUMBER\",\n      description:\n        props.insuranceData.vehicle?.vehicleno == null\n          ? \"none\"\n          : props.insuranceData.vehicle?.vehicleno,\n    },\n    {\n      title: \"CUSTOMER AMOUNT\",\n      description:\n        props.insuranceData.customeramount == null\n          ? \"none\"\n          : props.insuranceData.customeramount,\n    },\n    {\n      title: \"REQUESTED AMOUNT\",\n      description:\n        props.insuranceData.requestedamount == null\n          ? \"none\"\n          : props.insuranceData.requestedamount,\n    },\n    {\n      title: \"INSURANCE CATEGORY\",\n      description:\n        props.insuranceData.insurancecategory_name == null\n          ? \"none\"\n          : props.insuranceData.insurancecategory_name,\n    },\n    {\n      title: \"APPROVED BY\",\n      description:\n        props.insuranceData.reviewer?.fullname == null\n          ? \"none\"\n          : props.insuranceData.reviewer?.fullname,\n    },\n    {\n      title: \"APPROVED ON\",\n      description:\n        props.insuranceData.reviewedon == null\n          ? \"none\"\n          : moment(props.insuranceData.reviewedon).format(\"DD-MM-YYYY\"),\n    },\n    {\n      title: \"REQUESTED ON\",\n      description:\n        props.insuranceData.processedon == null\n          ? \"none\"\n          : moment(props.insuranceData.processedon).format(\"DD-MM-YYYY\"),\n    },\n    {\n      title: \"INSURANCE AGENT\",\n      description:\n        props.insuranceData.insurer?.fullname == null\n          ? \"none\"\n          : props.insuranceData.insurer?.fullname,\n    },\n    {\n      title: \"INSURANCE SUBMITTED DATE\",\n      description:\n        props.insuranceData.processedon == null\n          ? \"none\"\n          : moment(props.insuranceData.processedon).format(\"DD-MM-YYYY\"),\n    },\n    {\n      title: \"REMARKS\",\n      description:\n        props.insuranceData.reviewer_description == null\n          ? \"none\"\n          : props.insuranceData.reviewer_description,\n    },\n  ];\n\n  const insuranceImages = [\n    {\n      title: \"AADHAR FRONT IMAGE\",\n      imgFile:\n        props.insuranceData.aadharfront_image != null\n          ? props.insuranceData.aadharfront_image?.file\n          : null,\n      ImgFileThumbnail:\n        props.insuranceData.aadharfront_image != null\n          ? props.insuranceData.aadharfront_image?.file_thumbnail\n          : null,\n      createdon: props.insuranceData.aadharfront_image?.createdon,\n      alt: \"AADHAR FRONT IMAGE\",\n    },\n\n    {\n      title: \"AADHAR BACK IMAGE\",\n      imgFile:\n        props.insuranceData.aadharback_image != null\n          ? props.insuranceData.aadharback_image?.file\n          : null,\n      ImgFileThumbnail:\n        props.insuranceData.aadharback_image != null\n          ? props.insuranceData.aadharback_image?.file_thumbnail\n          : null,\n      createdon: props.insuranceData.aadharback_image?.createdon,\n      alt: \"AADHAR BACK IMAGE\",\n    },\n    {\n      title: \"C BOOK IMAGE\",\n      imgFile:\n        props.insuranceData.cbook_image != null\n          ? props.insuranceData.cbook_image?.file\n          : null,\n      ImgFileThumbnail:\n        props.insuranceData.cbook_image != null\n          ? props.insuranceData.cbook_image?.file_thumbnail\n          : null,\n      createdon: props.insuranceData.cbook_image?.createdon,\n      alt: \"C BOOK IMAGE\",\n    },\n    {\n      title: \"OLD POLICY IMAGE\",\n      imgFile:\n        props.insuranceData.oldpolicy_image != null\n          ? props.insuranceData.oldpolicy_image?.file\n          : null,\n      ImgFileThumbnail:\n        props.insuranceData.oldpolicy_image != null\n          ? props.insuranceData.oldpolicy_image?.file_thumbnail\n          : null,\n      createdon: props.insuranceData.oldpolicy_image?.createdon,\n      alt: \"OLD POLICY IMAGE\",\n    },\n  ];\n\n  const insuranceUpdateImages = [\n    {\n      title: \"INSURANCE UPDATE IMAGE\",\n      imgFile:\n        props.insuranceData.insuranceimage != null\n          ? props.insuranceData.insuranceimage?.file\n          : null,\n      ImgFileThumbnail:\n        props.insuranceData.insuranceimage != null\n          ? props.insuranceData.insuranceimage?.file_thumbnail\n          : null,\n      createdon: props.insuranceData.insuranceimage?.createdon,\n      alt: \"INSURANCE UPDATE IMAGE\",\n    },\n  ];\n\n  const insuranceAgentList = [\n    {\n      title: \"AMOUNT\",\n      description:\n        props.insuranceData.amount == null\n          ? \"none\"\n          : props.insuranceData.amount,\n    },\n    {\n      title: \"INSURANCE COMPANY NAME\",\n      description:\n        props.insuranceData.insurancecompany == null\n          ? \"none\"\n          : props.insuranceData.insurancecompany?.name,\n    },\n    {\n      title: \"INSURANCE NUMBER\",\n      description:\n        props.insuranceData.number == null\n          ? \"none\"\n          : props.insuranceData.number,\n    },\n\n    {\n      title: \"EXPIRE DATE\",\n      description:\n        props.insuranceData.expdate == null\n          ? \"none\"\n          : moment(props.insuranceData.expdate).format(\"DD-MM-YYYY\"),\n    },\n  ];\n\n  // const FooterAddOrUpdate = () => {\n  //   return (\n  //     <Fragment>\n  //       <Popconfirm\n  //         disabled={\n  //           props.insuranceData.in_time == null ? false : true\n  //         }\n  //         placement=\"topRight\"\n  //         title=\"Are you sure to Submit this Record?\"\n  //         onConfirm={() => stockInRepair()}\n  //         okText=\"Yes\"\n  //         cancelText=\"No\"\n  //         icon={\n  //           <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n  //         }\n  //       >\n  //         <Button block className=\"hp-px-12\" type=\"primary\" disabled={\n  //           props.insuranceData.in_time == null ? false : true\n  //         }>\n  //           Received\n  //         </Button>\n  //       </Popconfirm>\n  //     </Fragment>\n  //   );\n  // };\n\n  // const FooterCancel = () => {\n  //   return (\n  //     <Fragment>\n  //       <Popconfirm\n  //         placement=\"topRight\"\n  //         title=\"Are you sure to Reject this Record?\"\n  //         onConfirm={() => stockInApprove(3)}\n  //         okText=\"Yes\"\n  //         cancelText=\"No\"\n  //         className=\"hp-ml-8\"\n  //         icon={\n  //           <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n  //         }\n  //       >\n  //         <Button block className=\"hp-px-12 hp-reject-btn hp-font-weight-400\">\n  //           Received\n  //         </Button>\n  //       </Popconfirm>\n  //     </Fragment>\n  //   );\n  // };\n\n  const FooterAddOrUpdate = () => {\n    return (\n      <Fragment>\n        <Popconfirm\n          placement=\"topRight\"\n          title=\"Are you sure to Approve this Record?\"\n          onConfirm={() => InApprove(2)}\n          okText=\"Yes\"\n          cancelText=\"No\"\n          icon={\n            <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n          }\n        >\n          <Button block className=\"hp-px-12 hp-accept-btn hp-font-weight-400\">\n            Approve\n          </Button>\n        </Popconfirm>\n      </Fragment>\n    );\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Popconfirm\n          placement=\"topRight\"\n          title=\"Are you sure to Reject this Record?\"\n          onConfirm={() => form.submit()}\n          okText=\"Yes\"\n          cancelText=\"No\"\n          className=\"hp-ml-8\"\n          icon={\n            <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n          }\n        >\n          <Button block className=\"hp-px-12 hp-reject-btn hp-font-weight-400\">\n            Reject\n          </Button>\n        </Popconfirm>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = <h5 className=\"modal-title\">Insurance View</h5>;\n\n  return (\n    <Modal\n      visible={props.viewInsuranceModel}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        props.isInsuranceViewModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <>\n          {buttons && (\n            <>\n              {props.insuranceData.insurancestatus == 1 && (\n                <>\n                  {props.userAccessList?.indexOf(\n                    \"InsuranceRto.approve_insurance\"\n                  ) !== -1 && (\n                    <Row justify=\"center\">\n                      <Col span={12} className=\"hp-pl-4\">\n                        <FooterAddOrUpdate />\n                      </Col>\n\n                      <Col span={12} className=\"hp-pr-4\">\n                        <FooterCancel />\n                      </Col>\n                    </Row>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={816}\n    >\n      <Row gutter={[12, 12]}>\n        <Col span={24} md={24}>\n          <List\n            grid={{\n              gutter: 16,\n              xs: 1,\n              sm: 2,\n              md: 3,\n              lg: 3,\n              xl: 4,\n              xxl: 3,\n            }}\n            dataSource={newInsuranceList}\n            renderItem={(item) => (\n              <List.Item>\n                <List.Item.Meta\n                  title={<span>{item.title}</span>}\n                  description={<span>{item.description}</span>}\n                />\n              </List.Item>\n            )}\n          />\n          {props.insuranceData.insurancestatus == 3 && (\n            <>\n              <List\n                grid={{\n                  gutter: 16,\n                  xs: 1,\n                  sm: 2,\n                  md: 3,\n                  lg: 3,\n                  xl: 4,\n                  xxl: 3,\n                }}\n                dataSource={insuranceAgentList}\n                renderItem={(item) => (\n                  <List.Item>\n                    <List.Item.Meta\n                      title={<span>{item.title}</span>}\n                      description={<span>{item.description}</span>}\n                    />\n                  </List.Item>\n                )}\n              />\n            </>\n          )}\n\n          <Row gutter={[12, 12]}>\n            <Image.PreviewGroup>\n              {insuranceImages.map((insuranceImg) => {\n                return (\n                  <Col span={24} xs={12} md={6} xl={6}>\n                    <p className=\" hp-m-0 hp-text-color-primary-1 hp-font-weight-600 hp-font-size-12\">\n                      {insuranceImg.title}\n                    </p>\n                    {insuranceImg.imgFile != null ? (\n                      <Image\n                        className=\"ant-upload-select-picture-card hp-preview-img\"\n                        src={insuranceImg.imgFile}\n                        alt={insuranceImg.alt}\n                        onError={({ currentTarget }) => {\n                          currentTarget.onerror = null; // prevents looping\n                          currentTarget.src = brokenImg;\n                        }}\n                      />\n                    ) : (\n                      <Image\n                        preview={false}\n                        className=\"ant-upload-select-picture-card hp-preview-img\"\n                        src={noImage}\n                        alt={\"noImage\"}\n                      />\n                    )}\n                  </Col>\n                );\n              })}\n\n              {props.insuranceData.insurancestatus == 3 && (\n                <>\n                  {insuranceUpdateImages.map((insuranceUpdateImg) => {\n                    return (\n                      <Col span={24} xs={12} md={6} xl={6}>\n                        <p className=\" hp-m-0 hp-text-color-primary-1 hp-font-weight-600 hp-font-size-12\">\n                          {insuranceUpdateImg.title}\n                        </p>\n\n                        <Image\n                          className=\"ant-upload-select-picture-card hp-preview-img\"\n                          src={insuranceUpdateImg.imgFile}\n                          alt={insuranceUpdateImg.alt}\n                        />\n                      </Col>\n                    );\n                  })}\n                </>\n              )}\n            </Image.PreviewGroup>\n          </Row>\n          {buttons && (\n            <>\n              {props.insuranceData.insurancestatus == 1 && (\n                <>\n                  <Form\n                    className=\"hp-mt-10\"\n                    layout=\"vertical\"\n                    form={form}\n                    onFinish={() => {\n                      InApprove(4);\n                    }}\n                  >\n                    <Form.Item\n                      name=\"reviewer_description\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please Input  Remarks\",\n                        },\n                      ]}\n                      hasFeedback\n                    >\n                      <Input.TextArea\n                        id=\"reviewer_description\"\n                        name=\"reviewer_description\"\n                        style={{ width: \"100%\" }}\n                        placeholder=\"Write Remarks...\"\n                        // value={remarks.target.value}\n                        onChange={(e) => setRemarks(e)}\n                      />\n                    </Form.Item>\n                  </Form>\n                </>\n              )}\n            </>\n          )}\n        </Col>\n      </Row>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ newInsurance, system }) {\n  return {\n    viewInsuranceModel: newInsurance.viewInsuranceModel,\n    insuranceData: newInsurance.insuranceData,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  isInsuranceViewModelVisible,\n  insuranceApprove,\n})(insuranceViewModel);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Button,\n  Drawer,\n  Space,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport moment, { min } from \"moment\";\nimport {\n  getMiniCounters,\n  getMiniVehicles,\n} from \"../../../../../../store/mini/miniSlice\";\nimport {\n  isDrawerVisible,\n  FilterInputChangeValue,\n  getInsuranceList,\n  setInsuranceParams,\n} from \"../../../../../../store/sideMenu/newInsurance/newInsuranceSlice\";\nimport {\n  getVehicles,\n  SetVehiclesParams,\n} from \"../../../../../../store/Masters/Vehicles/vehiclesSlice\";\n\nvar date = new Date(),\n  y = date.getFullYear(),\n  m = date.getMonth();\n\nconst filter = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniCounters();\n    props.getMiniVehicles();\n  }, []);\n  const onFinish = () => {\n    props.setInsuranceParams({\n      ...props.insuranceparams,\n      start_date: props.insuranceparams.start_date,\n      end_date: props.insuranceparams.end_date,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n\n    props.getInsuranceList({\n      ...props.insuranceparams,\n      // start_date:\n      //   props.insuranceparams.start_date != null &&\n      //   props.insuranceparams.start_date != \"\"\n      //     ? moment(props.insuranceparams.start_date).format(\"YYYY-MM-DD\")\n      //     : \"\",\n      // end_date:\n      //   props.insuranceparams.end_date != null &&\n      //   props.insuranceparams.end_date != \" \"\n      //     ? moment(props.insuranceparams.end_date)\n      //         .add(1, \"days\")\n      //         .format(\"YYYY-MM-DD\")\n      //     : \"\",\n      start_date: props.insuranceparams.start_date,\n      end_date: props.insuranceparams.end_date,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.isDrawerVisible(false);\n  };\n\n  function clearFilter() {\n    props.setInsuranceParams({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getInsuranceList({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getMiniVehicles();\n    props.getMiniCounters();\n    props.getVehicles();\n  }\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n  const insuranceChoice = [\n    { id: 1, name: \"1st Party\" },\n    { id: 2, name: \"2nd Party\" },\n    { id: 3, name: \"3rd Party\" },\n  ];\n\n  const insuranceStatus = [\n    { id: 1, name: \"Requested\" },\n    { id: 2, name: \"Reviewed\" },\n    { id: 3, name: \"Processed\" },\n    { id: 4, name: \"Rejected\" },\n  ];\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.insuranceparams?.start_date,\n      end_date: props.insuranceparams?.end_date,\n      counter: props.insuranceparams?.counter,\n      insurancecategory: props.insuranceparams?.insurancecategory,\n      insurancestatus: props.insuranceparams?.insurancestatus,\n      vehicle: props.insuranceparams.vehicle\n    });\n  }, [props.insuranceparams]);\n\n  function onSearch(val) {\n    props.getInsuranceList({ page: 1, search: val, page_size: 10 });\n  }\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Drawer\n          title=\"Filters\"\n          width={420}\n          className=\"hp-drawer-mobile\"\n          onClose={() => {\n            props.isDrawerVisible(false);\n          }}\n          placement=\"right\"\n          visible={props.drawer}\n          bodyStyle={{\n            paddingBottom: 10,\n          }}\n        >\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              <Col span={12}>\n                <Form.Item label=\"From Date\" name=\"start_date\" className=\"hp-mb-10\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: new Date(),\n                    })}\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"start_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                      if (date == null) {\n                        props.FilterInputChangeValue({\n                          key: \"end_date\",\n                          value: \"\",\n                        });\n                      }\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"To Date\" name=\"end_date\" className=\"hp-mb-10\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment().format(\"YYYY-MM-DD\"),\n                      startDate: moment(\n                        props.insuranceparams?.start_date\n                      ).format(\"YYYY-MM-DD\"),\n                    })}\n                    disabled={\n                      props.insuranceparams.start_date == null ||\n                      props.insuranceparams.start_date == \"\"\n                        ? true\n                        : false\n                    }\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"end_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Counter\" name=\"counter\" className=\"hp-mb-10\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select a Counter\"\n                    optionFilterProp=\"Counter\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"counter\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.insuranceparams.counter_id == null\n                        ? \"\"\n                        : props.insuranceparams?.counter_id\n                    }\n                  >\n                    {props.miniCountersList.map((counter, index) => {\n                      return (\n                        <Option key={index} value={counter.id}>\n                          {counter.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Insurance Category\" name=\"insurancecategory\" className=\"hp-mb-10\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Insurance Category\"\n                    optionFilterProp=\"paid\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"insurancecategory\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.insuranceparams.insurancecategory == null\n                        ? \"\"\n                        : props.insuranceparams?.insurancecategory\n                    }\n                  >\n                    {insuranceChoice.map((insurance, index) => {\n                      return (\n                        <Option key={index} value={insurance.id}>\n                          {insurance.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Vehicle\" name=\"vehicle\" className=\"hp-mb-10\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Select Vehicle\"\n                    optionFilterProp=\"vehicle\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onSearch={(value) => {\n                      props.SetVehiclesParams({\n                        ...props.vehiclesParams,\n                        page: 1,\n                        search: value,\n                      });\n                      props.getVehicles({\n                        ...props.vehiclesParams,\n                        page: 1,\n                        search: value,\n                      });\n                    }}\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    // filterOption={false}\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"vehicle\",\n                        value: value,\n                      });\n                    }}\n                    onPopupScroll={() => {\n                      if (\n                        props.vehiclesParams.page <\n                        props.vehiclesParams.no_of_pages\n                      ) {\n                        props.SetVehiclesParams({\n                          ...props.vehiclesParams,\n                          page: props.vehiclesParams.page + 1,\n                        });\n                        props.getVehicles({\n                          ...props.vehiclesParams,\n                          page: props.vehiclesParams.page + 1,\n                        });\n                      }\n                    }}\n                    value={\n                      props.insuranceparams.vehicle_id == null\n                        ? \"\"\n                        : props.insuranceparams?.vehicle_id\n                    }\n                  >\n                    {props.miniVehiclesList.map((vehicle, index) => {\n                      return (\n                        <Option key={index} value={vehicle.id}>\n                          {vehicle.vehicleno}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Insurance Status\" name=\"insurancestatus\" className=\"hp-mb-10\">\n                  <Select\n                    showSearch\n                    allowClear\n                    placeholder=\"Insurance Status\"\n                    optionFilterProp=\"insurancestatus\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"insurancestatus\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.insuranceparams.insurancestatus == null\n                        ? \"\"\n                        : props.insuranceparams?.insurancestatus\n                    }\n                  >\n                    {insuranceStatus.map((insurancestatus, index) => {\n                      return (\n                        <Option key={index} value={insurancestatus.id}>\n                          {insurancestatus.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col md={12} xs={12}>\n                <Button\n                  block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    clearFilter();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n              </Col>\n              <Col md={12} xs={12}>\n                <Button\n                  block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Apply\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Drawer>\n      </Col>\n    </Row>\n  );\n};\n\nfunction mapStateToProps({ newInsurance, mini }) {\n  return {\n    drawer: newInsurance.drawer,\n    insuranceparams: newInsurance.insuranceparams,\n    miniCountersList: mini.miniCountersList,\n    miniVehiclesList: mini.miniVehiclesList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getInsuranceList,\n  isDrawerVisible,\n  setInsuranceParams,\n  FilterInputChangeValue,\n  getMiniCounters,\n  getMiniVehicles,\n  SetVehiclesParams,\n  getVehicles,\n})(filter);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  List,\n  Empty,\n  Button,\n  Input,\n  Card,\n  Pagination,\n  Spin,\n  Table,\n  Popconfirm,\n  Space,\n} from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport {\n  OrderedListOutlined,\n  AppstoreOutlined,\n  PlusOutlined,\n  FilterOutlined,\n} from \"@ant-design/icons\";\nimport PageTitle from \"../../../../../layout/components/content/page-title\";\nimport EmptyImage from \"../../../../../assets/images/app/empty-list.svg\";\nimport moment from \"moment\";\nimport {\n  getInsuranceList,\n  setInsuranceParams,\n  isModelVisible,\n  isDrawerVisible,\n  isInsuranceViewModelVisible,\n  getInsuranceById,\n  clearInsuranceList,\n  clearInsuranceParams\n} from \"../../../../../store/sideMenu/newInsurance/newInsuranceSlice\";\nimport { isMobile } from \"react-device-detect\";\nimport Filter from \"./Filters/Filter\";\nimport InsuranceViewModel from \"../InsuranceViewModel\";\n\nfunction approveInsurance(props) {\n  const { Search } = Input;\n\n  useEffect(() => {\n    props.getInsuranceList({\n      ...props.insuranceparams,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.clearInsuranceList();\n    props.clearInsuranceParams();\n  }, []);\n\n  function onPageChange(page, pageSize) {\n    props.clearInsuranceList();\n    props.clearInsuranceParams();\n    props.setInsuranceParams({\n      ...props.insuranceparams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getInsuranceList({\n      ...props.insuranceparams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.setInsuranceParams({ ...props.insuranceparams, search: val });\n    props.getInsuranceList({ ...props.insuranceparams, search: val });\n  }\n\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n\n  const data = props.newInsuranceList?.map((row, key) => ({\n    ...row,\n    index:\n      (props.insuranceparams.page - 1) * props.insuranceparams.page_size +\n      (key + 1),\n  }));\n\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-100 hp-text-color-dark-0 hp-font-weight-600 \";\n\n  const columns = [\n    {\n      title: \"S.No\",\n      width: 70,\n      fixed: isMobile ? null : \"left\",\n      dataIndex: \"index\",\n    },\n    {\n      title: \"Code\",\n      render: (row) => <span className={columnClass}>{row.code}</span>,\n      width: 100,\n      fixed: isMobile ? null : \"left\",\n    },\n    {\n      title: \"Date\",\n      width: \"15%\",\n      render: (row) => <span className={columnClass}>{row.date}</span>,\n    },\n    {\n      title: \"Customer Name\",\n      width: \"15%\",\n      render: (row) => <span className={columnClass}>{row.customername}</span>,\n    },\n    {\n      title: \"Customer Mobile\",\n      width: \"12%\",\n      render: (row) => (\n        <span className={columnClass}>{row.customermobile}</span>\n      ),\n    },\n    {\n      title: \"Aadhar Number\",\n      width: \"15%\",\n      render: (row) => <span className={columnClass}>{row.aadharno}</span>,\n    },\n    {\n      title: \"Counter Name\",\n      width: \"12%\",\n      render: (row) => <span className={columnClass}>{row.counter?.name}</span>,\n    },\n    {\n      title: \"Vehicle Number\",\n      width: \"13%\",\n      render: (row) => (\n        <span className={columnClass}>{row.vehicle?.vehicleno}</span>\n      ),\n    },\n    {\n      title: \"Customer Amount\",\n      width: \"11%\",\n      render: (row) => (\n        <span className={columnClass}>{row.customeramount}</span>\n      ),\n    },\n    {\n      title: \"Requested Amount\",\n      width: \"10%\",\n      render: (row) => (\n        <span className={columnClass}>{row.requestedamount}</span>\n      ),\n    },\n    {\n      title: \"Insurance Category\",\n      width: \"10%\",\n      render: (row) => (\n        <span className={columnClass}>{row.insurancecategory_name}</span>\n      ),\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: \"10%\",\n      fixed: isMobile ? null : \"right\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          <i\n            className=\"ri-eye-line hp-mr-2 \"\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n            onClick={() => {\n              props.getInsuranceById(row.id);\n              props.isInsuranceViewModelVisible(true);\n            }}\n          ></i>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <Row gutter={[12, 12]}>\n      <PageTitle pageTitle=\"Approve Insurance\" goBack={false} />\n      <Col span={24}>\n        <Row gutter={[12, 12]} className=\"hp-ecommerce-app-header \">\n          {/* <Col md={12} xs={24} className=\"hp-ecommerce-app-header-search \"> */}\n          <Col span={24} xs={18} sm={18} md={14}  className=\"hp-ecommerce-app-header-search \">\n            <Search\n              placeholder=\"Search for Code, Customer & Counter Name, Vehicle Number...\"\n              allowClear\n              onChange={(e) => {\n                if (e.target.value == \"\") {\n                  props.getInsuranceList({\n                    ...props.insuranceparams,\n                    page: 1,\n                    search: \"\",\n                  });\n                  props.setInsuranceParams({\n                    ...props.insuranceparams,\n                    page: 1,\n                    search: \"\",\n                  });\n                }\n              }}\n              onSearch={(value) => {\n                onSearch(value);\n              }}\n            />\n          </Col>\n          <Col span={24} xs={6} sm={6} md={3} >\n            <Button\n              onClick={() => {\n                props.isDrawerVisible(true);\n              }}\n              className=\"hp-w-100 hp-p-12\"\n              icon={<FilterOutlined className=\"hp-mr-10\" />}\n            >\n              {!isMobile && \"Filter\"}\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\">\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  rowClassName=\"hp-btn-bg-color-none\"\n                  dataSource={data}\n                  scroll={{ x: 1300 }}\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.insuranceparams?.page}\n                pageSize={props.insuranceparams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <InsuranceViewModel buttons={true} />\n      <Filter />\n    </Row>\n  );\n}\nfunction mapStateToProps({ newInsurance }) {\n  return {\n    newInsuranceList: newInsurance.newInsuranceList,\n    insuranceData: newInsurance.insuranceData,\n    insuranceparams: newInsurance.insuranceparams,\n    noofpages: newInsurance.noofpages,\n    listCount: newInsurance.listCount,\n    loading: newInsurance.loading,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getInsuranceList,\n  setInsuranceParams,\n  isModelVisible,\n  isDrawerVisible,\n  isInsuranceViewModelVisible,\n  getInsuranceById,\n  clearInsuranceList,\n  clearInsuranceParams\n})(approveInsurance);\n"],"sourceRoot":""}