{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/pages/MastersDashboard/country/addCountry.jsx","view/pages/MastersDashboard/country/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","country","selectedData","rowdata","model","countryAdd","isModelVisible","InputChangeValue","Form","useForm","form","handleResetInputValues","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","useEffect","setFieldsValue","name","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","handleAdd","countryToUpdate","handleUpdate","Item","label","rules","required","message","hasFeedback","style","placeholder","value","onChange","e","key","target","system","countryslist","noofpages","listCount","countryParams","loading","userAccessList","getCountrys","countryEdit","countryDelete","SetCountryParams","page","search","page_size","columns","dataIndex","filterSearch","filterMode","render","row","record","indexOf","cursor","color","placement","onConfirm","okText","cancelText","data","map","index","Search","Input","gutter","isModalVisible","xs","sm","md","allowClear","onSearch","val","tip","spinning","delay","dataSource","scroll","x","pagination","current","pageSize","total","showTotal","showSizeChanger"],"mappings":"0IAAA,sHAQe,SAASA,EAAgBC,GACtC,IAAIC,EAAUC,cACNC,EACNH,EADMG,UAAWC,EACjBJ,EADiBI,SAAUC,EAC3BL,EAD2BK,aAAcC,EACzCN,EADyCM,OAAQC,EACjDP,EADiDO,kBAGnD,OACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAD,CAAMC,UAAU,SAAhB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKD,KAAM,GAAX,UACGF,GACC,cAAC,IAAD,CACEI,GAAG,IACHC,QAAS,kBAAMV,EAAQK,QAAd,EACTG,UAAU,uDAHZ,SAKE,cAAC,IAAD,CAAuBA,UAAU,aAAaG,KAAM,OAGxD,eAAC,IAAD,CAAKH,UAAU,oBAAf,UACE,cAAC,IAAD,CAAKD,KAAM,GAAX,SACGL,GAAa,oBAAIM,UAAU,SAAd,SAAwBN,MAGxC,cAAC,IAAD,CAAKK,KAAM,GAAX,SACGJ,GAAY,mBAAGK,UAAU,qBAAb,SAAmCL,YAItD,cAAC,IAAD,CAAKI,KAAM,EAAX,SACGH,GACC,cAAC,IAAD,CACEI,UAAU,iBACVI,KAAK,UACLF,QAAS,kBAAMJ,GAAkB,EAAxB,EACTO,OAAK,EACLC,KAAM,cAAC,IAAD,CAAiBN,UAAU,aAAaG,KAAM,KALtD,UAOII,YAAYX,YAQ7B,C,mJC2HcY,iBAPf,YAAuC,IAAZC,EAAW,EAAXA,QACzB,MAAO,CACLC,aAAcD,EAAQE,QACtBC,MAAOH,EAAQG,MAElB,GAEuC,CACtCC,eACAC,mBACAC,sBAHaP,EAlKI,SAACjB,GAAW,IAAD,EAC5B,EAAeyB,IAAKC,UAAbC,EAAP,oBASA,IAmBMC,EAAyB,WAC7B5B,EAAMuB,gBAAe,EACtB,EAEKM,EAAoB,WACxB,OAA6B,MAAzB7B,EAAMmB,aAAaW,IAAuC,GAAzB9B,EAAMmB,aAAaW,GAEpD,cAAC,WAAD,UACE,cAAC,IAAD,CACEnB,QAAS,WACPgB,EAAKI,QACN,EACDlB,KAAK,UACLC,OAAK,EALP,mBAaF,cAAC,WAAD,UACE,cAAC,IAAD,CACED,KAAK,UACLF,QAAS,WACPgB,EAAKI,QACN,EACDjB,OAAK,EALP,qBAYP,EAEKkB,EAAe,WACnB,OACE,cAAC,WAAD,UACE,cAAC,IAAD,CACErB,QAAS,WACPiB,GACD,EACDf,KAAK,UACLC,OAAK,EACLmB,OAAK,EANP,qBAYL,EAEKC,EACJ,qBAAIzB,UAAU,cAAd,UAC4B,MAAzBT,EAAMmB,aAAaW,IAAuC,GAAzB9B,EAAMmB,aAAaW,GACjD,MACA,SAAU,IAHhB,aAcF,OANAK,qBAAU,WACRR,EAAKS,eAAe,CAClBC,KAAMrC,EAAMmB,aAAakB,MAE5B,GAAE,CAACrC,EAAMmB,eAGR,cAAC,IAAD,CACEmB,QAAStC,EAAMqB,MACfkB,MAAOL,EACPM,SAAU,WACRZ,IACAD,EAAKc,cACLzC,EAAMuB,gBAAe,EACtB,EACDd,UAAU,gBACViC,OACE,eAAC,IAAD,CAAKC,QAAQ,SAAb,UACE,cAAC,IAAD,CAAKnC,KAAM,GAAIC,UAAU,UAAzB,SACE,cAACuB,EAAD,MAGF,cAAC,IAAD,CAAKxB,KAAM,GAAIC,UAAU,UAAzB,SACE,cAACoB,EAAD,SAINe,UAAQ,EACRC,UACE,cAAC,IAAD,CAAapC,UAAU,kCAAkCG,KAAM,KAEjEkC,MAAO,IAxBT,SA0BE,cAAC,IAAD,CAAMC,OAAO,WACXpB,KAAMA,EACNqB,aAAa,MACbC,SAAU,WACqB,MAAzBjD,EAAMmB,aAAaW,GAtHb,WAAO,IAAD,EAChBoB,EAAM,CACVpB,GAAI,EACJO,KAAI,UAAErC,EAAMmB,oBAAR,aAAE,EAAoBkB,MAEZ,MAAZa,EAAIb,MAA4B,IAAZa,EAAIb,MAC1BrC,EAAMsB,WAAW4B,EAEpB,CA+GSC,GA7GW,WAAO,IAAD,EACnBC,EAAkB,CACtBtB,GAAI9B,EAAMmB,aAAaW,GACvBO,KAAI,UAAErC,EAAMmB,oBAAR,aAAE,EAAoBkB,MAE5BrC,EAAMsB,WAAW8B,EAClB,CA0GSC,EAEH,EAVH,SAWE,cAAC,IAAKC,KAAN,CAAWC,MAAM,iBACflB,KAAK,OACLmB,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,oCAE7BC,aAAW,EALb,SAME,cAAC,IAAD,CACE7B,GAAG,UACHO,KAAK,OACLuB,MAAO,CAAEd,MAAO,QAChBe,YAAY,eACZC,MAAK,UAAE9D,EAAMmB,oBAAR,aAAE,EAAoBkB,KAC3B0B,SAjJV,SAAwBC,GACtBhE,EAAMwB,iBAAiB,CACrByC,IAAKD,EAAEE,OAAO7B,KACdyB,MAAOE,EAAEE,OAAOJ,OAEnB,SAkJF,G,6LCwBc7C,uBAXf,YAA+C,IAApBC,EAAmB,EAAnBA,QAASiD,EAAU,EAAVA,OAClC,MAAO,CACLC,aAAclD,EAAQkD,aACtBC,UAAWnD,EAAQmD,UACnBC,UAAWpD,EAAQoD,UACnBC,cAAerD,EAAQqD,cACvBC,QAAStD,EAAQsD,QACjBC,eAAgBN,EAAOM,eAE1B,GAEuC,CACtCC,gBACAC,gBACAC,kBACArD,mBACAsD,sBALa5D,EA9Kf,SAAiBjB,GAAQ,IAAD,MACtBmC,qBAAU,WACRnC,EAAM0E,YAAY,CAAEI,KAAM,EAAGC,OAAQ,GAAIC,UAAW,IACrD,GAAE,IAEH,IAAMC,EAAU,CACd,CACE1C,MAAO,OACP2C,UAAW,QACXpC,MAAO,MAET,CACEP,MAAO,OACP2C,UAAW,OAEXC,cAAc,EACdrC,MAAO,OAET,CACEP,MAAO,eACP2C,UAAW,OAEXE,WAAY,OACZD,cAAc,EAEdrC,MAAO,OAET,CACEP,MAAO,UACP0B,IAAK,SACLnB,MAAO,MACPuC,OAAQ,SAACC,EAAKC,GAAN,eACN,eAAC,IAAD,CAAO3E,KAAK,SAAZ,WACgE,KAA7D,UAAAZ,EAAMyE,sBAAN,eAAsBe,QAAQ,4BAC7B,mBACE/E,UAAU,4BACVmD,MAAO,CAAE6B,OAAQ,UAAWC,MAAO,WACnC/E,QAAS,WACPX,EAAM2E,YAAYW,GAClBtF,EAAMuB,gBAAe,EACtB,KAE2D,KAA7D,UAAAvB,EAAMyE,sBAAN,eAAsBe,QAAQ,4BAC7B,cAAC,IAAD,CACEG,UAAU,WACVpD,MAAM,sCACNqD,UAAW,kBAAM5F,EAAM4E,cAAcW,EAAOzD,GAAjC,EACX+D,OAAO,MACPC,WAAW,KACXrF,UAAU,UACVM,KACE,cAAC,IAAD,CAAoBN,UAAU,uCARlC,SAWE,mBACEA,UAAU,wBACVmD,MAAO,CAAE6B,OAAQ,UAAWC,MAAO,iBAzBvC,IAkCNK,EAAO/F,EAAMoE,aAAa4B,KAAI,SAACV,EAAKrB,GAAN,mBAAC,eAChCqB,GAD+B,IAElCW,OACGjG,EAAMuE,cAAcO,KAAO,GAAK9E,EAAMuE,cAAcS,UAAYf,EAAM,GAHvC,IA0B5BiC,EAAWC,IAAXD,OACR,OACE,eAAC,IAAD,CAAKE,OAAQ,CAAC,GAAI,IAAK3F,UAAU,WAAjC,UACE,cAAC,IAAD,CACEN,UAAU,iBACVE,cAC4D,KAA1D,UAAAL,EAAMyE,sBAAN,eAAsBe,QAAQ,yBAC9B,cAEFlF,QAAQ,EACRC,kBAAmBP,EAAMuB,eACzB8E,eAAgBrG,EAAMqB,QAGxB,cAAC,IAAD,CAAKb,KAAM,GAAX,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKA,KAAM,GAAI8F,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI/F,UAAU,WAAjD,SACE,cAACyF,EAAD,CACErC,YAAY,YACZ4C,YAAU,EACV1C,SAAU,SAACC,GACa,IAAlBA,EAAEE,OAAOJ,QACX9D,EAAM0E,YAAN,2BACK1E,EAAMuE,eADX,IAEEO,KAAM,EACNC,OAAQ,MAEV/E,EAAM6E,iBAAN,2BACK7E,EAAMuE,eADX,IAEEO,KAAM,EACNC,OAAQ,MAGb,EACD2B,SAAU,SAAC5C,GA1CzB,IAAkB6C,IA2CO7C,EA1CvB9D,EAAM6E,iBAAN,2BAA4B7E,EAAMuE,eAAlC,IAAiDQ,OAAQ4B,KACzD3G,EAAM0E,YAAN,2BAAuB1E,EAAMuE,eAA7B,IAA4CQ,OAAQ4B,IA0CvC,MAIL,cAAC,IAAD,CAAKnG,KAAM,GAAX,SACE,cAAC,IAAD,CAAMoG,IAAI,aAAaC,SAAU7G,EAAMwE,QAASsC,MAAO,IAAvD,SACE,cAAC,IAAD,CACE7B,QAASA,EACT8B,WAAYhB,EACZiB,OAAQ,CAAEC,EAAG,KACbC,YAAY,EACZtG,KAAK,eAIX,cAAC,IAAD,CAAKJ,KAAM,GAAX,SACE,cAAC,IAAD,CACEI,KAAK,QACLuG,QAAO,UAAEnH,EAAMuE,qBAAR,aAAE,EAAqBO,KAC9BsC,SAAQ,UAAEpH,EAAMuE,qBAAR,aAAE,EAAqBS,UAC/BqC,MAAOrH,EAAMsE,UACbgD,UA7Dd,SAAmBD,GACjB,MAAO,SAAWA,EAAQ,QAC3B,EA4DaE,iBAAe,EACfxD,SAhFd,SAAsBe,EAAMsC,GAC1BpH,EAAM6E,iBAAN,2BACK7E,EAAMuE,eADX,IAEES,UAAWoC,EACXtC,KAAc,GAARA,EAAY,EAAIA,KAExB9E,EAAM0E,YAAN,2BACK1E,EAAMuE,eADX,IAEES,UAAWoC,EACXtC,KAAc,GAARA,EAAY,EAAIA,IAEzB,EAsEarE,UAAU,8CAMpB,cAAC,IAAD,MAGL,G","file":"static/js/110.7b9ad063.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport { RiCloseFill } from \"react-icons/ri\";\r\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\r\nimport {\r\n  countryAdd,\r\n  isModelVisible,\r\n  InputChangeValue,\r\n} from \"../../../../store/Masters/Country/countrySlice\";\r\n\r\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\r\n\r\nconst AddCountry = (props) => {\r\n  const [form] = Form.useForm();\r\n  function ChangeHandeler(e) {\r\n    props.InputChangeValue({\r\n      key: e.target.name,\r\n      value: e.target.value,\r\n    });\r\n  }\r\n\r\n  // Adds New Country\r\n  const handleAdd = () => {\r\n    const obj = {\r\n      id: 0,\r\n      name: props.selectedData?.name,\r\n    };\r\n    if (obj.name != null || obj.name == \"\") {\r\n      props.countryAdd(obj);\r\n    }\r\n  };\r\n  // Updates Country in Store\r\n  const handleUpdate = () => {\r\n    const countryToUpdate = {\r\n      id: props.selectedData.id,\r\n      name: props.selectedData?.name,\r\n    };\r\n    props.countryAdd(countryToUpdate);\r\n  };\r\n\r\n  // Reset Input Values on Close\r\n  const handleResetInputValues = () => {\r\n    props.isModelVisible(false);\r\n  };\r\n\r\n  const FooterAddOrUpdate = () => {\r\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            onClick={() => {\r\n              form.submit();\r\n            }}\r\n            type=\"primary\"\r\n            block\r\n          >\r\n            Add\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              form.submit();\r\n            }}\r\n            block\r\n          >\r\n            Update\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const FooterCancel = () => {\r\n    return (\r\n      <Fragment>\r\n        <Button\r\n          onClick={() => {\r\n            handleResetInputValues();\r\n          }}\r\n          type=\"primary\"\r\n          block\r\n          ghost\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const modalTitle = (\r\n    <h5 className=\"modal-title\">\r\n      {props.selectedData.id == null || props.selectedData.id == 0\r\n        ? \"Add\"\r\n        : \"Update\"}{\" \"}\r\n      Country\r\n    </h5>\r\n  );\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      name: props.selectedData.name\r\n    })\r\n  }, [props.selectedData]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={props.model}\r\n      title={modalTitle}\r\n      onCancel={() => {\r\n        handleResetInputValues();\r\n        form.resetFields();\r\n        props.isModelVisible(false);\r\n      }}\r\n      className=\"hp-modal-p-24\"\r\n      footer={\r\n        <Row justify=\"center\">\r\n          <Col span={12} className=\"hp-pr-4\">\r\n            <FooterCancel />\r\n          </Col>\r\n\r\n          <Col span={12} className=\"hp-pl-4\">\r\n            <FooterAddOrUpdate />\r\n          </Col>\r\n        </Row>\r\n      }\r\n      centered\r\n      closeIcon={\r\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n      }\r\n      width={416}\r\n    >\r\n      <Form layout=\"vertical\"\r\n        form={form}\r\n        autoComplete=\"off\"\r\n        onFinish={() => {\r\n          if (props.selectedData.id == null) {\r\n            handleAdd();\r\n          }\r\n          else {\r\n            handleUpdate();\r\n          }\r\n        }}>\r\n        <Form.Item label=\"Country Name :\"\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: \"Please input your Country Name!\" },\r\n          ]}\r\n          hasFeedback>\r\n          <Input\r\n            id=\"Country\"\r\n            name=\"name\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Country Name\"\r\n            value={props.selectedData?.name}\r\n            onChange={ChangeHandeler}\r\n            />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ country }) {\r\n  return {\r\n    selectedData: country.rowdata,\r\n    model: country.model,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  countryAdd,\r\n  isModelVisible,\r\n  InputChangeValue,\r\n})(AddCountry);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Col, Input, Card, Pagination, Spin, Popconfirm } from \"antd\";\r\nimport { Table, Space } from \"antd\";\r\nimport { RiErrorWarningLine } from \"react-icons/ri\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\r\nimport AddCountry from \"./addCountry\";\r\n\r\nimport {\r\n  getCountrys,\r\n  countryEdit,\r\n  countryDelete,\r\n  isModelVisible,\r\n  SetCountryParams,\r\n} from \"../../../../store/Masters/Country/countrySlice\";\r\n\r\nfunction Country(props) {\r\n  useEffect(() => {\r\n    props.getCountrys({ page: 1, search: \"\", page_size: 10 });\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"S.No\",\r\n      dataIndex: \"index\",\r\n      width: \"5%\",\r\n    },\r\n    {\r\n      title: \"Code\",\r\n      dataIndex: \"code\",\r\n      // sorter: (a, b) => a.name.length - b.name.length,\r\n      filterSearch: true,\r\n      width: \"35%\",\r\n    },\r\n    {\r\n      title: \"Country Name\",\r\n      dataIndex: \"name\",\r\n\r\n      filterMode: \"tree\",\r\n      filterSearch: true,\r\n      // sorter: (a, b) => a.name.length - b.name.length,\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"action\",\r\n      width: \"10%\",\r\n      render: (row, record) => (\r\n        <Space size=\"middle\">\r\n          {props.userAccessList?.indexOf(\"Masters.change_country\") !== -1 && (\r\n            <i\r\n              className=\"ri-edit-box-line hp-mr-2 \"\r\n              style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\r\n              onClick={() => {\r\n                props.countryEdit(row);\r\n                props.isModelVisible(true);\r\n              }}\r\n            ></i>)}\r\n            {props.userAccessList?.indexOf(\"Masters.delete_country\") !== -1 && (\r\n              <Popconfirm\r\n                placement=\"topRight\"\r\n                title=\"Are you sure to delete this Record?\"\r\n                onConfirm={() => props.countryDelete(record.id)}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n                className=\"hp-ml-8\"\r\n                icon={\r\n                  <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\r\n                }\r\n              >\r\n                <i\r\n                  className=\"ri-delete-bin-2-line \"\r\n                  style={{ cursor: \"pointer\", color: \"#ff0000\" }}\r\n                ></i>\r\n              </Popconfirm>\r\n            )}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const data = props.countryslist.map((row, key) => ({\r\n    ...row,\r\n    index:\r\n      (props.countryParams.page - 1) * props.countryParams.page_size + key + 1,\r\n  }));\r\n\r\n  function onPageChange(page, pageSize) {\r\n    props.SetCountryParams({\r\n      ...props.countryParams,\r\n      page_size: pageSize,\r\n      page: page == 0 ? 1 : page,\r\n    });\r\n    props.getCountrys({\r\n      ...props.countryParams,\r\n      page_size: pageSize,\r\n      page: page == 0 ? 1 : page,\r\n    });\r\n  }\r\n\r\n  function onSearch(val) {\r\n    props.SetCountryParams({ ...props.countryParams, search: val });\r\n    props.getCountrys({ ...props.countryParams, search: val });\r\n  }\r\n  function showTotal(total) {\r\n    return \"Total \" + total + \" items\";\r\n  }\r\n  const { Search } = Input;\r\n  return (\r\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\r\n      <MasterPageTitle\r\n        pageTitle=\"Country Master\"\r\n        addModelTile={\r\n          props.userAccessList?.indexOf(\"Masters.add_country\") !== -1 &&\r\n          \"Add Country\"\r\n        }\r\n        goBack={true}\r\n        setIsModalVisible={props.isModelVisible}\r\n        isModalVisible={props.model}\r\n      />\r\n\r\n      <Col span={24}>\r\n        <Card>\r\n          <Row>\r\n            <Col span={12} xs={24} sm={24} md={12} className=\"hp-mb-12\">\r\n              <Search\r\n                placeholder=\"Search...\"\r\n                allowClear\r\n                onChange={(e) => {\r\n                  if (e.target.value == \"\") {\r\n                    props.getCountrys({\r\n                      ...props.countryParams,\r\n                      page: 1,\r\n                      search: \"\",\r\n                    });\r\n                    props.SetCountryParams({\r\n                      ...props.countryParams,\r\n                      page: 1,\r\n                      search: \"\",\r\n                    });\r\n                  }\r\n                }}\r\n                onSearch={(value) => {\r\n                  onSearch(value);\r\n                }}\r\n              />\r\n            </Col>\r\n\r\n            <Col span={24}>\r\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={data}\r\n                  scroll={{ x: 500 }}\r\n                  pagination={false}\r\n                  size=\"middle\"\r\n                />\r\n              </Spin>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Pagination\r\n                size=\"small\"\r\n                current={props.countryParams?.page}\r\n                pageSize={props.countryParams?.page_size}\r\n                total={props.listCount}\r\n                showTotal={showTotal}\r\n                showSizeChanger\r\n                onChange={onPageChange}\r\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </Col>\r\n      <AddCountry />\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ country, system }) {\r\n  return {\r\n    countryslist: country.countryslist,\r\n    noofpages: country.noofpages,\r\n    listCount: country.listCount,\r\n    countryParams: country.countryParams,\r\n    loading: country.loading,\r\n    userAccessList: system.userAccessList,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCountrys,\r\n  countryEdit,\r\n  countryDelete,\r\n  isModelVisible,\r\n  SetCountryParams,\r\n})(Country);\r\n"],"sourceRoot":""}