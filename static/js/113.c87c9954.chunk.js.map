{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/pages/MastersDashboard/divisions/addDivisions.jsx","view/pages/MastersDashboard/divisions/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","connect","divisions","mini","rowdata","model","miniZonesList","divisionAdd","isModelVisible","InputChangeValue","getMiniZones","Form","useForm","form","useEffect","handleResetInputValues","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","setFieldsValue","name","zone_id","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","handleAdd","handleUpdate","Item","label","rules","required","message","hasFeedback","showSearch","placeholder","optionFilterProp","onSearch","value","console","log","filterOption","input","option","children","toLowerCase","includes","onChange","key","map","zone","index","Option","style","e","target","system","divisionslist","noofpages","listCount","divisionsParams","loading","userAccessList","getDivisions","divisionsEdit","divisionDelete","SetDivisionsParams","page","search","page_size","columns","dataIndex","filterSearch","filterMode","render","row","record","indexOf","cursor","color","placement","onConfirm","okText","cancelText","data","Search","Input","gutter","isModalVisible","xs","sm","md","allowClear","val","tip","spinning","delay","dataSource","scroll","x","pagination","current","pageSize","total","showTotal","showSizeChanger","on"],"mappings":"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","file":"static/js/113.c87c9954.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  divisionAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Divisions/divisionsSlice\";\nimport { getMiniZones } from \"../../../../store/mini/miniSlice\";\n\nconst AddDivisions = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniZones();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      zone_id: props.rowdata.zone_id,\n      // firm_id: props.rowdata.firm_id,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.divisionAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      zone_id: props.rowdata.zone_id,\n      // firm_id: props.rowdata.firm_id,\n    };\n    props.divisionAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Division\n    </h5>\n  );\n\n  const onSearch = (value) => {\n    console.log('search:', value);\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.rowdata.name,\n      zone_id: props.rowdata.zone_id\n    })\n  }, [props.rowdata]);\n\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Zone Name :\"\n          name=\"zone_id\"\n          rules={[\n            { required: true, message: \"Please select your Zone Name!\" },\n          ]}\n          hasFeedback>\n          <Select\n            showSearch\n            placeholder=\"Select  Zone\"\n            optionFilterProp=\"children\"\n            onSearch={onSearch}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().includes(input.toLowerCase())\n            }\n            onChange={(value) => {\n              props.InputChangeValue({\n                key: \"zone_id\",\n                value: value,\n              });\n            }}\n            value={\n              props.rowdata.zone_id == null ? \"\" : props.rowdata?.zone_id\n            }\n          >\n            {props.miniZonesList.map((zone, index) => {\n              return (\n                <Option key={index} value={zone.id}>\n                  {zone.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Division Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Division Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Zone\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Division Name\"\n            value={props.rowdata?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ divisions, mini }) {\n  return {\n    rowdata: divisions.rowdata,\n    model: divisions.model,\n    miniZonesList: mini.miniZonesList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  divisionAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniZones\n})(AddDivisions);\n","import React, { useEffect, useState } from \"react\";\n\nimport { Row, Col, Input, Card, Pagination, Spin, Popconfirm } from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport {\n  getDivisions,\n  divisionsEdit,\n  divisionDelete,\n  isModelVisible,\n  SetDivisionsParams,\n} from \"../../../../store/Masters/Divisions/divisionsSlice\";\n\nimport AddDivisions from \"./addDivisions\";\n\nfunction Divisions(props) {\n  useEffect(() => {\n    props.getDivisions({ page: 1, search: \"\", page_size: 10 });\n    // props.getMiniFirm();\n  }, []);\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"5%\",\n      // sorter: (a, b) => a.index - b.index,\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: \"35%\",\n    },\n    {\n      title: \"Division Name\",\n      dataIndex: \"name\",\n\n      filterMode: \"tree\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: \"40%\",\n    },\n    {\n      title: \"zone Name\",\n      filterMode: \"tree\",\n      // dataIndex: \"zone_id\",\n      filterSearch: true,\n      // sorter: (a, b) => a.name.length - b.name.length,\n      width: \"20%\",\n      render: (row) => <span className={columnClass}>{row.zone?.name}</span>,\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: \"10%\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n          {props.userAccessList?.indexOf(\"Masters.change_division\") !== -1 && (\n          <i\n            className=\"ri-edit-box-line hp-mr-2 \"\n            style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n            onClick={() => {\n              props.divisionsEdit(row);\n              props.isModelVisible(true);\n            }}\n          ></i>\n          )}\n\n        {props.userAccessList?.indexOf(\"Masters.delete_division\") !== -1 && (\n          <Popconfirm\n            placement=\"topRight\"\n            title=\"Are you sure to delete this Record?\"\n            onConfirm={() => props.divisionDelete(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            className=\"hp-ml-8\"\n            icon={\n              <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n            }\n          >\n            <i\n              className=\"ri-delete-bin-2-line \"\n              style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n            ></i>\n          </Popconfirm>\n        )}\n        </Space>\n      ),\n    },\n  ];\n\n  const data = props.divisionslist.map((row, key) => ({\n    ...row,\n    index:\n      (props.divisionsParams.page - 1) * props.divisionsParams.page_size +\n      key +\n      1,\n  }));\n\n  // function onShowSizeChange(current, pageSize) {\n  //   props.getCountrys({ page_size: pageSize, page: 1 });\n  // }\n  function onPageChange(page, pageSize) {\n    props.SetDivisionsParams({\n      ...props.divisionsParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getDivisions({\n      ...props.divisionsParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.SetDivisionsParams({ ...props.divisionsParams, search: val });\n    props.getDivisions({ ...props.divisionsParams, search: val });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  const { Search } = Input;\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Divisions Master\"\n        addModelTile={\n          props.userAccessList?.indexOf(\"Masters.add_division\") !== -1 &&\n          \"Add Divisions\"\n        }\n        goBack={true}\n        setIsModalVisible={props.isModelVisible}\n        isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\">\n            <Col span={12} xs={24} sm={24} md={14} className=\"hp-mb-16\">\n              <Search\n                placeholder=\"Search...\"\n                allowClear\n                onChange={(e) => {\n                  if (e.target.value == \"\") {\n                    props.getDivisions({\n                      ...props.divisionsParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                    props.SetDivisionsParams({\n                      ...props.divisionsParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                  }\n                }}\n                onSearch={(value) => {\n                  onSearch(value);\n                }}\n              />\n            </Col>\n\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 500 }}\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.divisionsParams?.page}\n                pageSize={props.divisionsParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                // onShowSizeChange={onShowSizeChange}\n                onChange={onPageChange}\n                on\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <AddDivisions />\n    </Row>\n  );\n}\n\nfunction mapStateToProps({ divisions, system }) {\n  return {\n    divisionslist: divisions.divisionslist,\n    noofpages: divisions.noofpages,\n    listCount: divisions.listCount,\n    divisionsParams: divisions.divisionsParams,\n    loading: divisions.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getDivisions,\n  divisionsEdit,\n  divisionDelete,\n  isModelVisible,\n  SetDivisionsParams,\n})(Divisions);\n"],"sourceRoot":""}