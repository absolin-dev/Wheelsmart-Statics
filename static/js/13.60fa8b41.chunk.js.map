{"version":3,"sources":["assets/images/app/empty-list.svg","view/pages/MastersDashboard/vehicles/addVehicles.jsx","view/pages/MastersDashboard/country/addCountry.jsx","view/pages/MastersDashboard/state/addState.jsx","view/pages/MastersDashboard/models/addModels.jsx","view/pages/MastersDashboard/Locations/addLocations.jsx","view/pages/MastersDashboard/district/addDistrict.jsx","view/pages/MastersDashboard/city/addCity.jsx","view/pages/MastersDashboard/area/addArea.jsx","view/pages/MastersDashboard/zones/addZones.jsx","view/pages/MastersDashboard/firm/addFirm.jsx","view/pages/MastersDashboard/brands/addBrand.jsx","view/pages/MastersDashboard/occupations/addoccupations.jsx","view/pages/MastersDashboard/emissionnorms/addEmissionnorms.jsx","view/pages/MastersDashboard/colors/addColors.jsx","view/pages/MastersDashboard/banks/addBanks.jsx","view/pages/MastersDashboard/priority/addPriority.jsx","view/pages/MastersDashboard/companybanks/addCompanybanks.jsx","view/pages/MastersDashboard/divisions/addDivisions.jsx","view/pages/MastersDashboard/clusters/addClusters.jsx","view/pages/MastersDashboard/mechanics/addMechanics.jsx","view/pages/MastersDashboard/brandfamily/addBrandfamily.jsx","view/pages/MastersDashboard/dealer/addDealer.jsx","view/pages/MastersDashboard/addressproof/addAddressproof.jsx","view/pages/MastersDashboard/emidates​/addEmidates​.jsx","view/pages/MastersDashboard/insurance/addInsurance.jsx","view/pages/MastersDashboard/leavereasons/addLeavereasons.jsx","view/pages/MastersDashboard/versionfeatures/addVersionfeatures​.jsx","view/pages/MastersDashboard/rejectreasons/addRejectreasons.jsx","view/pages/MastersDashboard/vehicletypes/addVehicletypes​.jsx","view/pages/MastersDashboard/showrooms/addShowrooms​.jsx","view/pages/MastersDashboard/percentageinterests/addPercentageinterests.jsx","view/pages/MastersDashboard/financiers/addFinanciers.jsx","view/pages/MastersDashboard/counters/addCounter.jsx","view/pages/MastersDashboard/versions/addVersions.jsx","view/pages/MastersDashboard/departments/addDepartment.jsx","view/pages/MastersDashboard/tenures/addTenures.jsx","view/pages/MastersDashboard/repairTypes/addRepairTypes.jsx","view/pages/MastersDashboard/index.jsx"],"names":["connect","vehicles","mini","rowdata","model","miniVersionList","miniEmissionnorms","miniBrandsList","miniBrandFamilyList","miniModelsList","vehiclesAdd","isModelVisible","InputChangeValue","getMiniVersion","getMiniEmissionnorms","getMiniBrands","getMiniBrandFamily","getMiniModels","vehicleNumberValidate","engineNumberValidate","chassisNumberValidate","props","Form","useForm","form","useEffect","handleResetInputValues","FooterAddOrUpdate","id","onClick","submit","type","block","FooterCancel","ghost","modalTitle","className","checkValidation","data","console","log","target","value","chassisno","key","Modal","error","icon","title","content","engineno","setFieldsValue","vehicleType","vehicleno","brand_id","brandfamily_id","model_id","vehicletrno","version_id","emission_id","year","visible","onCancel","resetFields","footer","justify","span","centered","closeIcon","size","width","layout","autoComplete","onFinish","obj","moment","format","handleAdd","brand","brandfamily","emission","version","typeId","handleUpdate","gutter","xs","xl","md","Item","label","name","rules","required","message","Group","onChange","e","Button","pattern","RegExp","hasFeedback","style","placeholder","minLength","maxLength","toUpperCase","transform","onBlur","showSearch","filterOption","input","option","children","toLowerCase","includes","optionFilterProp","map","index","Option","picker","disabledDate","range","startDate","endDate","current","startCheck","endCheck","disableDateRanges","Date","date","min","getValueProps","country","selectedData","countryAdd","countryToUpdate","states","miniCountryList","stateAdd","getMinicountry","Select","country_id","stateToUpdate","models","miniColorsList","modelAdd","getMiniColors","onSearch","color_ids","mode","maxTagCount","options","color","Input","TextArea","AddLocation","handleCancel","isModalVisible","setIsModalVisible","showModal","handleSubmit","errors","useState","setDesc","setTitle","setEndPicker","setStartPicker","setValue","handleAddEvent","FooterCancelOrDelete","onSubmit","district","miniStatesList","districtAdd","getMiniStates","state_id","districtToUpdate","state","city","miniDistrictList","cityAdd","getMiniDistrict","district_id","cityToUpdate","area","miniCityList","areaAdd","getMiniCity","city_id","pincode","zones","miniFirmList","zoneAdd","getMiniFirm","firm_id","firm","firmAdd","brands","brandAdd","occupations","occupationAdd","emissionnorms","emissionnormsAdd","colors","colorsAdd","banks","banksAdd","priority","priorityAdd","companybanks","companybanksAdd","values","divisions","miniZonesList","divisionAdd","getMiniZones","zone_id","zone","clusters","miniDivisionsList","clusterAdd","getMiniClusters","getMiniDivisions","division_id","division","mechanics","miniBanksList","mechanicAdd","getMiniBanks","ChangeHandeler","bank_id","mobile","aadharno","accono","ifsccode","address","bank","brandfamilyAdd","dealers","dealerUserData","userdata","miniAreaList","dealerAdd","getMiniArea","userEmailValidation","userMobileValidation","first_name","last_name","email","phone","gstno","area_id","username","password","user","group_ids","deviceaccess","addressproof","addressproofAdd","emidates","emidateAdd","sequence","insurance","insuranceAdd","InsuranceName","leavereasons","leavereasonsAdd","versionfeatures","versionfeaturesAdd","rejectreasons","rejectreasonsAdd","editable","reasonType","checkedChildren","unCheckedChildren","checked","vehicletypes","vehicletypesAdd","wheels","showrooms","showroomsAdd","contact_number","location","code","percentageinterests","percentageinterestsAdd","financiers","financierAdd","companyname","companyaddress","counters","miniClustersList","counterAdd","cluster_id","latitude","longitude","is_active","cluster","versions","miniPriority","miniVehicletypesList","versionfeaturesParams","versionfeatureslist","versionsAdd","getMiniPriority","getMiniVehicletypes","getVersionfeatures","SetVersionfeaturesParams","vehicletype_id","versionfeature_ids","priority_id","fueltype","enginedisplacement","firstparty","secondparty","thirdparty","defaulter","vehicletype","versionfeature","page","search","defaultActiveFirstOption","showArrow","onPopupScroll","no_of_pages","departments","departmentAdd","departmentToUpdate","tenures","miniPercentageInterestsList","tenuresAdd","getMiniPercentageInterests","interestfixed_id","interestchoice_ids","interestfixed","interestchoice","repairTypes","repairTypesAdd","withRouter","system","masterMenuItemsList","loading","filterData","getMasterMenuItems","menuItemSearch","Country","State","Models","District","City","Area","Zone","Firm","Brand","Emissionnorms","Occupations","Person","Colors","Banks","Priority","Companybanks","Divisions","Clusters","Mechanics","Brandfamily","Dealer","Addressproof","Emidates","Insurance","Leavereasons","Versionfeatures","Rejectreasons","Vehicletypes","Showrooms","Percentageinterests","Financiers","Counter","Versions","Vehicles","Departments","Tenures","RepairTypes","Search","reportData","setReportData","setWordEntered","pageTitle","allowClear","searchWord","newFilter","menuitems","filter","menu","handleSearch","length","report","Fragment","xxl","to","link","image","EmptyImage","imageStyle","height","description","tip","spinning","delay"],"mappings":"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","file":"static/js/13.60fa8b41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/empty-list.6fd5c5d1.svg\";","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport {\n  Button,\n  Input,\n  Form,\n  Modal,\n  Radio,\n  Row,\n  Col,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport {\n  vehiclesAdd,\n  isModelVisible,\n  InputChangeValue,\n  vehicleNumberValidate,\n  engineNumberValidate,\n  chassisNumberValidate,\n} from \"../../../../store/Masters/Vehicles/vehiclesSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  getMiniVersion,\n  getMiniEmissionnorms,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniModels,\n} from \"../../../../store/mini/miniSlice\";\nimport {\n  RiCheckboxCircleLine,\n  RiAlertLine,\n  RiInformationLine,\n} from \"react-icons/ri\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddVehicles = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    // props.getMiniVersion();\n    props.getMiniEmissionnorms();\n    props.getMiniBrands();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      vehicleno:\n        props.rowdata?.vehicleType === \"new\"\n          ? props.rowdata.vehicletrno\n          : props.rowdata?.vehicleno,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletrno: props.rowdata.vehicletrno,\n      year: moment(props.rowdata?.year).format(\"YYYY\"),\n      engineno: props.rowdata.engineno,\n      emission_id: props.rowdata.emission_id,\n      version_id: props.rowdata.version_id,\n      chassisno: props.rowdata.chassisno,\n    };\n    props.vehiclesAdd({obj});\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      vehicleno:\n        props.rowdata?.vehicleType === \"new\"\n          ? props.rowdata.vehicletrno\n          : props.rowdata?.vehicleno,\n      brand_id:\n        props.rowdata?.brand_id == null\n          ? props.rowdata.brand.id\n          : props.rowdata?.brand_id,\n      brandfamily_id:\n        props.rowdata?.brandfamily_id == null\n          ? props.rowdata.brandfamily.id\n          : props.rowdata?.brandfamily_id,\n      model_id:\n        props.rowdata?.model_id == null\n          ? props.rowdata.model.id\n          : props.rowdata?.model_id,\n      vehicletrno: props.rowdata?.vehicletrno,\n      year: moment(props.rowdata?.year).format(\"YYYY\"),\n      engineno: props.rowdata?.engineno,\n      emission_id:\n        props.rowdata?.emission_id == null\n          ? props.rowdata.emission.id\n          : props.rowdata?.emission_id,\n      version_id:\n        props.rowdata?.version_id == null\n          ? props.rowdata.version.id\n          : props.rowdata?.version_id,\n      chassisno: props.rowdata?.chassisno,\n    };\n    props.vehiclesAdd({obj, type: props.type, typeId: props.typeId}, );\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Vehicle\n    </h5>\n  );\n\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck = current && current < moment(startDate, \"YYYY\");\n      }\n      if (endDate) {\n        endCheck = current && current > moment(endDate, \"YYYY\");\n      }\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n  // props.rowdata?.engineno ==\n  function checkValidation(type, data) {\n    console.log(\"type\", type, data.target.value);\n    if (type == \"engineno\") {\n      if (data.target.value == props.rowdata?.chassisno) {\n        props.InputChangeValue({\n          key: type,\n          value: \"\",\n        });\n        Modal.error({\n          icon: (\n            <span className=\"remix-icon\">\n              <RiInformationLine />\n            </span>\n          ),\n          title: (\n            <h5 className=\"hp-mb-0 hp-font-weight-500\">Engine Number Error</h5>\n          ),\n          content: (\n            <div>\n              <p className=\"hp-p1-body hp-text-color-black-80\">\n                Engine & Chassis Number should not be same{\" \"}\n              </p>\n            </div>\n          ),\n        });\n      }\n    } else {\n      if (data.target.value == props.rowdata?.engineno) {\n        props.InputChangeValue({\n          key: type,\n          value: \"\",\n        });\n        Modal.error({\n          icon: (\n            <span className=\"remix-icon\">\n              <RiInformationLine />\n            </span>\n          ),\n          title: (\n            <h5 className=\"hp-mb-0 hp-font-weight-500\">Chassis Number Error</h5>\n          ),\n          content: (\n            <div>\n              <p className=\"hp-p1-body hp-text-color-black-80\">\n                Engine & Chassis Number should not be same{\" \"}\n              </p>\n            </div>\n          ),\n        });\n      }\n    }\n  }\n\n  useEffect(() => {\n    form.setFieldsValue({\n      vehicleType: props.rowdata.vehicleType,\n      vehicleno: props.rowdata.vehicleno,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletrno: props.rowdata.vehicletrno,\n      version_id: props.rowdata.version_id,\n      emission_id: props.rowdata.emission_id,\n      year: props.rowdata.year,\n      engineno: props.rowdata.engineno,\n      chassisno: props.rowdata.chassisno,\n    });\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={616}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row gutter={[12, 0]}>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Vehicle Type\"\n              name=\"vehicleType\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select Your Vehicle Type!\",\n                },\n              ]}\n            >\n              <Radio.Group\n                name=\"vehicleType\"\n                onChange={ChangeHandeler}\n                value={props.rowdata?.vehicleType}\n              >\n                <Radio.Button value=\"new\">New Vehicle</Radio.Button>\n                <Radio.Button value=\"old\">Old Vehicle</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n          {props.rowdata?.vehicleType === \"new\" ? (\n            <>\n              <Col span={24} xs={24} xl={12} md={12}>\n                <Form.Item\n                  label=\"Vehicle TR Number:\"\n                  name=\"vehicletrno\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter Your Vehicle TR Number!\",\n                    },\n                    {\n                      pattern: new RegExp(\n                        /[A-Z][A-Z][0-9][0-9][A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9]$/i\n                      ),\n                      message: \"field does not accept numbers\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Input\n                    id=\"Version\"\n                    name=\"vehicletrno\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"EX:AP00ABCD1234\"\n                    minLength={10}\n                    maxLength={15}\n                    value={props.rowdata?.vehicletrno}\n                    onChange={(e) => {\n                      props.InputChangeValue({\n                        key: e.target.name,\n                        value: e.target.value.toUpperCase(),\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n            </>\n          ) : (\n            <>\n              <Col span={24} xs={24} xl={12} md={12}>\n                <Form.Item\n                  label=\"Vehicle Number\"\n                  name=\"vehicleno\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter Your Vehicle Number!\",\n                    },\n\n                    // {\n                    //   pattern: new RegExp(\n                    //     \"^[A-Z]{2}[0-9]{1,2}[A-Z]{1,2}[0-9]{1,4}$\"\n                    //   ),\n                    //   message: \"Please accept valid vehicle number\",\n                    // },\n                    {\n                      pattern: new RegExp(\n                        \"^[A-Z]{2}[0-9]{1,2}[A-Z]{1,2}[0-9]{4}$\"\n                      ),\n                      message: \"Please accept valid vehicle number\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Input\n                    id=\"vehicleno-input\"\n                    name=\"vehicleno\"\n                    label=\"Vehicle Number:\"\n                    maxLength={11}\n                    style={{ width: \"100%\", transform: \"uppercase\" }}\n                    placeholder=\"EX: AP00QQ0000\"\n                    onBlur={(data) => {\n                      console.log(\"data\", data);\n                      props.vehicleNumberValidate({\n                        vehicleno: data.target.value,\n                      });\n                    }}\n                    value={props.rowdata?.vehicleno}\n                    onChange={(e) => {\n                      props.InputChangeValue({\n                        key: e.target.name,\n                        value: e.target.value.toUpperCase(),\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n            </>\n          )}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Brand :\"\n              name=\"brand_id\"\n              rules={[{ required: true, message: \"Please select your Brand!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select  Brand\"\n                optionFilterProp=\"Brand\"\n                onChange={(value) => {\n                  props.getMiniBrandFamily({ brand: value });\n                  props.InputChangeValue({\n                    key: \"brand_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brand_id == null ? \"\" : props.rowdata?.brand_id\n                }\n              >\n                {props.miniBrandsList.map((brand, index) => {\n                  return (\n                    <Option key={index} value={brand.id}>\n                      {brand.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Brand Family :\"\n              name=\"brandfamily_id\"\n              rules={[\n                { required: true, message: \"Please select your Brand Family!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Brand Family\"\n                optionFilterProp=\"brand Family\"\n                onChange={(value) => {\n                  props.getMiniModels({ brandfamily: value });\n                  props.InputChangeValue({\n                    key: \"brandfamily_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brandfamily_id == null\n                    ? \"\"\n                    : props.rowdata?.brandfamily_id\n                }\n              >\n                {props.miniBrandFamilyList.map((brandfamily, index) => {\n                  return (\n                    <Option key={index} value={brandfamily.id}>\n                      {brandfamily.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Model :\"\n              name=\"model_id\"\n              rules={[{ required: true, message: \"Please select your Model!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Model\"\n                optionFilterProp=\"Model\"\n                onChange={(value) => {\n                  props.getMiniVersion({ model: value });\n                  props.InputChangeValue({\n                    key: \"model_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.model_id == null ? \"\" : props.rowdata?.model_id\n                }\n              >\n                {props.miniModelsList.map((model, index) => {\n                  return (\n                    <Option key={index} value={model.id}>\n                      {model.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Version :\"\n              name=\"version_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Version!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Version\"\n                optionFilterProp=\"version\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"version_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.version_id == null\n                    ? \"\"\n                    : props.rowdata?.version_id\n                }\n              >\n                {props.miniVersionList.map((version, index) => {\n                  return (\n                    <Option key={index} value={version.id}>\n                      {version.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Emission :\"\n              name=\"emission_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Emission!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select a Emission\"\n                optionFilterProp=\"emission\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"emission_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.emission_id == null\n                    ? \"\"\n                    : props.rowdata?.emission_id\n                }\n              >\n                {props.miniEmissionnorms.map((emission, index) => {\n                  return (\n                    <Option key={index} value={emission.id}>\n                      {emission.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Year\"\n              name=\"year\"\n              rules={[{ required: true, message: \"Select Year\" }]}\n              hasFeedback\n            >\n              <DatePicker\n                id=\"year\"\n                name=\"year\"\n                style={{ width: \"100%\" }}\n                picker=\"year\"\n                // format=\"YYYY\"\n                disabledDate={disableDateRanges({\n                  endDate: new Date(),\n                  startDate: 1990,\n                })}\n                placeholder=\"Select Year\"\n                value={props.rowdata?.year}\n                onChange={(date) => {\n                  console.log(\"Year\", date, typeof date);\n                  props.InputChangeValue({\n                    key: \"year\",\n                    value: date,\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Engine Number:\"\n              name=\"engineno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Engine Number!\",\n                },\n                {\n                  min: 10,\n                  message: \"Engine Number must be 10 digits!\",\n                }\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"engineno\"\n                name=\"engineno\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                minLength={10}\n                maxLength={20}\n                placeholder=\"Engine Number\"\n                value={props.rowdata?.engineno}\n                onBlur={(e) => {\n                  props.engineNumberValidate({ engineno: e.target.value });\n                  if (e.target.value != \"\") {\n                    checkValidation(\"engineno\", e);\n                  }\n                }}\n                // onChange={ChangeHandeler}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>{\" \"}\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Chassis Number :\"\n              name=\"chassisno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Chassis Number!\",\n                },\n                {\n                  min: 10,\n                  message: \"Chassis Number must be 10 digits!\",\n                }\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <Input\n                id=\"Chassis Number\"\n                name=\"chassisno\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                placeholder=\"Chassis Number\"\n                minLength={10}\n                maxLength={20}\n                onBlur={(e) => {\n                  props.chassisNumberValidate({ chassisno: e.target.value });\n                  if (e.target.value != \"\") {\n                    checkValidation(\"chassisno\", e);\n                  }\n                }}\n                value={props.rowdata?.chassisno}\n                // onChange={ChangeHandeler}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ vehicles, mini }) {\n  return {\n    rowdata: vehicles.rowdata,\n    model: vehicles.model,\n    miniVersionList: mini.miniVersionList,\n    miniEmissionnorms: mini.miniEmissionnorms,\n    miniBrandsList: mini.miniBrandsList,\n    miniBrandFamilyList: mini.miniBrandFamilyList,\n    miniModelsList: mini.miniModelsList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  vehiclesAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniVersion,\n  getMiniEmissionnorms,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniModels,\n  vehicleNumberValidate,\n  engineNumberValidate,\n  chassisNumberValidate,\n})(AddVehicles);\n","import { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport { RiCloseFill } from \"react-icons/ri\";\r\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\r\nimport {\r\n  countryAdd,\r\n  isModelVisible,\r\n  InputChangeValue,\r\n} from \"../../../../store/Masters/Country/countrySlice\";\r\n\r\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\r\n\r\nconst AddCountry = (props) => {\r\n  const [form] = Form.useForm();\r\n  function ChangeHandeler(e) {\r\n    props.InputChangeValue({\r\n      key: e.target.name,\r\n      value: e.target.value,\r\n    });\r\n  }\r\n\r\n  // Adds New Country\r\n  const handleAdd = () => {\r\n    const obj = {\r\n      id: 0,\r\n      name: props.selectedData?.name,\r\n    };\r\n    if (obj.name != null || obj.name == \"\") {\r\n      props.countryAdd(obj);\r\n    }\r\n  };\r\n  // Updates Country in Store\r\n  const handleUpdate = () => {\r\n    const countryToUpdate = {\r\n      id: props.selectedData.id,\r\n      name: props.selectedData?.name,\r\n    };\r\n    props.countryAdd(countryToUpdate);\r\n  };\r\n\r\n  // Reset Input Values on Close\r\n  const handleResetInputValues = () => {\r\n    props.isModelVisible(false);\r\n  };\r\n\r\n  const FooterAddOrUpdate = () => {\r\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            onClick={() => {\r\n              form.submit();\r\n            }}\r\n            type=\"primary\"\r\n            block\r\n          >\r\n            Add\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              form.submit();\r\n            }}\r\n            block\r\n          >\r\n            Update\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const FooterCancel = () => {\r\n    return (\r\n      <Fragment>\r\n        <Button\r\n          onClick={() => {\r\n            handleResetInputValues();\r\n          }}\r\n          type=\"primary\"\r\n          block\r\n          ghost\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const modalTitle = (\r\n    <h5 className=\"modal-title\">\r\n      {props.selectedData.id == null || props.selectedData.id == 0\r\n        ? \"Add\"\r\n        : \"Update\"}{\" \"}\r\n      Country\r\n    </h5>\r\n  );\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      name: props.selectedData.name\r\n    })\r\n  }, [props.selectedData]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={props.model}\r\n      title={modalTitle}\r\n      onCancel={() => {\r\n        handleResetInputValues();\r\n        form.resetFields();\r\n        props.isModelVisible(false);\r\n      }}\r\n      className=\"hp-modal-p-24\"\r\n      footer={\r\n        <Row justify=\"center\">\r\n          <Col span={12} className=\"hp-pr-4\">\r\n            <FooterCancel />\r\n          </Col>\r\n\r\n          <Col span={12} className=\"hp-pl-4\">\r\n            <FooterAddOrUpdate />\r\n          </Col>\r\n        </Row>\r\n      }\r\n      centered\r\n      closeIcon={\r\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n      }\r\n      width={416}\r\n    >\r\n      <Form layout=\"vertical\"\r\n        form={form}\r\n        autoComplete=\"off\"\r\n        onFinish={() => {\r\n          if (props.selectedData.id == null) {\r\n            handleAdd();\r\n          }\r\n          else {\r\n            handleUpdate();\r\n          }\r\n        }}>\r\n        <Form.Item label=\"Country Name :\"\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: \"Please input your Country Name!\" },\r\n          ]}\r\n          hasFeedback>\r\n          <Input\r\n            id=\"Country\"\r\n            name=\"name\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Country Name\"\r\n            value={props.selectedData?.name}\r\n            onChange={ChangeHandeler}\r\n            />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ country }) {\r\n  return {\r\n    selectedData: country.rowdata,\r\n    model: country.model,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  countryAdd,\r\n  isModelVisible,\r\n  InputChangeValue,\r\n})(AddCountry);\r\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  stateAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/State/stateSlice\";\nimport { getMinicountry } from \"../../../../store/mini/miniSlice\";\n\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddState = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  useEffect(() => {\n    props.getMinicountry()\n  }, []);\n\n\n  console.log('miniCountryList', props.miniCountryList);\n  const { Option } = Select;\n  const onChange = (value) => {\n    props.InputChangeValue({\n      key: \"country_id\",\n      value: value,\n    })\n  };\n  // Adds New State\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      country_id: props.selectedData?.country_id,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.stateAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const stateToUpdate = {\n      id: props.selectedData.id,\n      country_id: props.selectedData?.country_id == null ? props.selectedData.country.id : props.selectedData?.country_id,\n      name: props.selectedData?.name,\n    };\n    props.stateAdd(stateToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      State\n    </h5>\n  );\n\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      country_id: props.selectedData.country_id,\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Country Name:\"\n          name=\"country_id\"\n          rules={[\n            { required: true, message: \"Please select your Country Name!\" },\n          ]}\n          hasFeedback>\n          <Select\n            showSearch\n            placeholder=\"Select Country\"\n            optionFilterProp=\"children\"\n            // filterOption={(input, option) =>\n            //   option.children.toLowerCase().includes(input.toLowerCase())\n            // }\n            onChange={onChange}\n            value={\n              props.selectedData.country_id == null ? \"\" : props.selectedData?.country_id\n            }\n          >\n            {props.miniCountryList.map((country, index) => {\n\n              return (\n                <Option key={index} value={country.id}>\n                  {country.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"State Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your State Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"State\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"State Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ states, mini }) {\n  return {\n    selectedData: states.rowdata,\n    model: states.model,\n    miniCountryList: mini.miniCountryList\n  };\n}\n\nexport default connect(mapStateToProps, {\n  stateAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMinicountry\n})(AddState);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  modelAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Models/modelsSlice\";\nimport { getMiniBrands, getMiniBrandFamily, getMiniColors } from \"../../../../store/mini/miniSlice\";\n\nconst AddModels = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniBrands(),\n      props.getMiniColors();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      color_ids: props.rowdata.color_ids,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.modelAdd(obj);\n    }\n  };\n\n\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      color_ids: props.rowdata.color_ids,\n    };\n    props.modelAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Models\n    </h5>\n  );\n\n  const onSearch = (value) => {\n    console.log('search:', value);\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      color_ids: props.rowdata.color_ids,\n      name: props.rowdata.name,\n    })\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Brand Name:\"\n          name=\"brand_id\"\n          rules={[\n            { required: true, message: \"Please select your Brand Name!\" },\n          ]}\n          hasFeedback>\n          <Select\n            showSearch\n            placeholder=\"Select  Brand\"\n            optionFilterProp=\"children\"\n            onSearch={onSearch}\n            filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\n            onChange={(value) => {\n              props.getMiniBrandFamily({ brand: value });\n              props.InputChangeValue({\n                key: \"brand_id\",\n                value: value,\n              });\n            }}\n            value={props.rowdata.brand_id == null ? \"\" : props.rowdata?.brand_id}\n          >\n            {props.miniBrandsList.map((brand, index) => {\n              return (\n                <Option key={index} value={brand.id}>\n                  {brand.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Brand Family :\"\n          name=\"brandfamily_id\"\n          rules={[\n            { required: true, message: \"Please select your Brand Family!\" },\n          ]}\n          hasFeedback>\n          <Select\n            showSearch\n            placeholder=\"Select Brand Family\"\n            optionFilterProp=\"children\"\n            onSearch={onSearch}\n            filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\n            onChange={(value) => {\n              props.InputChangeValue({\n                key: \"brandfamily_id\",\n                value: value,\n              });\n            }}\n            value={\n              props.rowdata.brandfamily_id == null ? \"\" : props.rowdata?.brandfamily_id\n            }\n          >\n            {props.miniBrandFamilyList.map((brandfamily, index) => {\n              return (\n                <Option key={index} value={brandfamily.id}>\n                  {brandfamily.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Color Name:\"\n          name=\"color_ids\"\n          rules={[\n            { required: true, message: \"Please input your Color Name!\" },\n          ]}\n          hasFeedback>\n          <Select\n            mode=\"multiple\"\n            showSearch\n            placeholder=\"Select Colors\"\n            optionFilterProp=\"color\"\n            maxTagCount=\"responsive\"\n            onChange={(value) => {\n              props.InputChangeValue({\n                key: \"color_ids\",\n                value: value,\n              });\n            }}\n            value={props.rowdata?.color_ids}\n            options={props.miniColorsList.map((color, index) => {\n              return { label: color.name, value: color.id };\n            })}\n          />\n\n        </Form.Item>\n\n        <Form.Item label=\"Model Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Model Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Zone\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Model Name\"\n            value={props.rowdata?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ models, mini }) {\n  return {\n    rowdata: models.rowdata,\n    model: models.model,\n    miniBrandsList: mini.miniBrandsList,\n    miniBrandFamilyList: mini.miniBrandFamilyList,\n    miniColorsList: mini.miniColorsList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  modelAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniColors\n})(AddModels);\n","import { Fragment, useState } from \"react\";\r\n\r\nimport Select, { components } from \"react-select\";\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RiCloseFill } from \"react-icons/ri\";\r\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\r\n\r\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst AddLocation = (props) => {\r\n  const {\r\n    // store,\r\n    // dispatch,\r\n    // addEvent,\r\n    // selectEvent,\r\n    // updateEvent,\r\n    // removeEvent,\r\n    // calendarApi,\r\n    // refetchEvents,\r\n    handleCancel,\r\n    isModalVisible,\r\n    setIsModalVisible,\r\n    showModal,\r\n  } = props;\r\n\r\n  // const selectedEvent = store.selectedEvent;\r\n  const { errors, handleSubmit } = useForm();\r\n\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [allDay, setAllDay] = useState(false);\r\n  const [endPicker, setEndPicker] = useState(new Date());\r\n  const [startPicker, setStartPicker] = useState(new Date());\r\n  const [value, setValue] = useState([{ value: \"Travel\", label: \"Travel\" }]);\r\n\r\n  const options = [\r\n    { value: \"Travel\", label: \"Travel\", badge: \"#C903FF\" },\r\n    { value: \"Social\", label: \"Social\", badge: \"#00F7BF\" },\r\n    { value: \"Work\", label: \"Work\", badge: \"#FFC700\" },\r\n    { value: \"Important\", label: \"Important\", badge: \"#FF0022\" },\r\n  ];\r\n\r\n  const OptionComponent = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <Badge color={data.badge} />\r\n        {data.label}\r\n      </components.Option>\r\n    );\r\n  };\r\n\r\n  // Adds New Event\r\n  // const handleAddEvent = () => {\r\n  //   const obj = {\r\n  //     title,\r\n  //     start: startPicker,\r\n  //     end: endPicker,\r\n  //     allDay,\r\n  //     display: \"block\",\r\n  //     extendedProps: {\r\n  //       calendar: value[0].label,\r\n  //       desc: desc.length ? desc : undefined,\r\n  //     },\r\n  //   };\r\n  //   dispatch(addEvent(obj));\r\n  //   refetchEvents();\r\n  //   handleCancel();\r\n  // };\r\n\r\n  // Reset Input Values on Close\r\n  const handleResetInputValues = () => {\r\n    // dispatch(selectEvent({}));\r\n    setTitle(\"\");\r\n    setDesc(\"\");\r\n    setValue([{ value: \"Travel\", label: \"Travel\" }]);\r\n    setStartPicker(new Date());\r\n    setEndPicker(new Date());\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  // // (UI) updateEventInCalendar\r\n  // const updateEventInCalendar = (\r\n  //   updatedEventData,\r\n  //   propsToUpdate,\r\n  //   extendedPropsToUpdate\r\n  // ) => {\r\n  //   const existingEvent = calendarApi.getEventById(updatedEventData.id);\r\n\r\n  //   // Set event properties except date related\r\n  //   for (let index = 0; index < propsToUpdate.length; index++) {\r\n  //     const propName = propsToUpdate[index];\r\n  //     existingEvent.setProp(propName, updatedEventData[propName]);\r\n  //   }\r\n\r\n  //   // Set date related props\r\n  //   existingEvent.setDates(updatedEventData.start, updatedEventData.end, {\r\n  //     allDay: updatedEventData.allDay,\r\n  //   });\r\n\r\n  //   // Set event's extendedProps\r\n  //   // eslint-disable-next-line no-plusplus\r\n  //   for (let index = 0; index < extendedPropsToUpdate.length; index++) {\r\n  //     const propName = extendedPropsToUpdate[index];\r\n  //     existingEvent.setExtendedProp(\r\n  //       propName,\r\n  //       updatedEventData.extendedProps[propName]\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  // // Updates Event in Store\r\n  // const handleUpdateEvent = () => {\r\n  //   const eventToUpdate = {\r\n  //     id: selectedEvent.id,\r\n  //     title,\r\n  //     allDay,\r\n  //     start: startPicker,\r\n  //     end: endPicker,\r\n  //     extendedProps: {\r\n  //       description: desc,\r\n  //       calendar: value[0].label,\r\n  //     },\r\n  //   };\r\n\r\n  //   const propsToUpdate = [\"id\", \"title\"];\r\n  //   const extendedPropsToUpdate = [\"calendar\", \"description\"];\r\n\r\n  //   dispatch(updateEvent(eventToUpdate));\r\n  //   updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate);\r\n  //   setIsModalVisible(false);\r\n  // };\r\n\r\n  // // (UI) removeEventInCalendar\r\n  // const removeEventInCalendar = (eventId) => {\r\n  //   calendarApi.getEventById(eventId).remove();\r\n  // };\r\n\r\n  // const handleDeleteEvent = () => {\r\n  //   dispatch(removeEvent(selectedEvent.id));\r\n  //   removeEventInCalendar(selectedEvent.id);\r\n  //   setIsModalVisible(false);\r\n  // };\r\n\r\n  const FooterAddOrUpdate = () => {\r\n    // if (\r\n    //   isObjEmpty(selectedEvent) ||\r\n    //   (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)\r\n    // ) {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            onClick={() => {\r\n              handleAddEvent();\r\n              handleResetInputValues();\r\n            }}\r\n            type=\"primary\"\r\n            block\r\n          >\r\n            Add\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    // } else {\r\n    //   return (\r\n    //     <Fragment>\r\n    //       <Button\r\n    //         type=\"primary\"\r\n    //         onClick={() => {\r\n    //           setIsModalVisible(true);\r\n    //           handleResetInputValues();\r\n    //           handleUpdateEvent();\r\n    //         }}\r\n    //         block\r\n    //       >\r\n    //         Update\r\n    //       </Button>\r\n    //     </Fragment>\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  const FooterCancelOrDelete = () => {\r\n    // if (\r\n    //   isObjEmpty(selectedEvent) ||\r\n    //   (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)\r\n    // ) {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            onClick={() => {\r\n              handleResetInputValues();\r\n            }}\r\n            type=\"primary\"\r\n            block\r\n            ghost\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    // } else {\r\n    //   return (\r\n    //     <Fragment>\r\n    //       <Button\r\n    //         type=\"danger\"\r\n    //         onClick={() => {\r\n    //           setIsModalVisible(true);\r\n    //           handleResetInputValues();\r\n    //           handleDeleteEvent();\r\n    //         }}\r\n    //         block\r\n    //         ghost\r\n    //       >\r\n    //         Delete\r\n    //       </Button>\r\n    //     </Fragment>\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  const modalTitle = (\r\n    <h5 className=\"modal-title\">\r\n      \r\n      {/* {selectedEvent && selectedEvent.title && selectedEvent.title.length\r\n        ? \"Update\"\r\n        : \"Add\"} */}\r\n     Add Location\r\n    </h5>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      visible={isModalVisible}\r\n      title={modalTitle}\r\n      onCancel={() => {\r\n        handleResetInputValues();\r\n        handleCancel();\r\n      }}\r\n      className=\"hp-modal-p-24\"\r\n      footer={\r\n        <Row justify=\"center\">\r\n          <Col span={12} className=\"hp-pr-4\">\r\n            <FooterCancelOrDelete />\r\n          </Col>\r\n\r\n          <Col span={12} className=\"hp-pl-4\">\r\n            <FooterAddOrUpdate />\r\n          </Col>\r\n        </Row>\r\n      }\r\n      centered\r\n      closeIcon={\r\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n      }\r\n      width={416}\r\n    >\r\n      <Form\r\n        layout=\"vertical\"\r\n        onSubmit={handleSubmit(() => {\r\n          // if (\r\n          //   isObjEmpty(selectedEvent) ||\r\n          //   (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)\r\n          // ) {\r\n          //   handleAddEvent();\r\n          // } else {\r\n          //   handleUpdateEvent();\r\n          // }\r\n        })}\r\n      >\r\n        <Form.Item label=\"Location Name :\">\r\n          <Input\r\n            id=\"Location\"\r\n            name=\"Location\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Location Name\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n\r\n\r\n        {/* <Form.Item label=\"Event :\">\r\n          <Select\r\n            id=\"label\"\r\n            value={value}\r\n            options={options}\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            onChange={(data) => setValue([data])}\r\n            components={{\r\n              Option: OptionComponent,\r\n            }}\r\n          />\r\n        </Form.Item> */}\r\n\r\n        {/* <Form.Item label=\"Description :\">\r\n          <TextArea\r\n            style={{ width: \"100%\" }}\r\n            type=\"textarea\"\r\n            name=\"text\"\r\n            id=\"description\"\r\n            rows={4}\r\n            value={desc}\r\n            onChange={(e) => setDesc(e.target.value)}\r\n            placeholder=\"Description\"\r\n          />\r\n        </Form.Item> */}\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddLocation;\r\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  districtAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/District/districtSlice\";\nimport { getMiniStates } from \"../../../../store/mini/miniSlice\";\n\n\nconst AddDistrict = (props) => {\n  useEffect(() => {\n    props.getMiniStates()\n  }, []);\n\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const { Option } = Select;\n  const onChange = (value) => {\n    props.InputChangeValue({\n      key: \"state_id\",\n      value: value,\n    })\n  };\n  // Adds New District\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      state_id: props.selectedData?.state_id,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.districtAdd(obj);\n    }\n  };\n  // Updates Districts in Store\n  const handleUpdate = () => {\n    const districtToUpdate = {\n      id: props.selectedData.id,\n      state_id: props.selectedData?.state_id == null ? props.selectedData.state.id : props.selectedData?.state_id,\n      name: props.selectedData?.name,\n    };\n    props.districtAdd(districtToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      District\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      state_id: props.selectedData.state_id\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"State Name:\"\n          name=\"state_id\"\n          rules={[\n            { required: true, message: \"Please select your State Name!\" },\n          ]} >\n          <Select\n            showSearch\n            placeholder=\"Select State\"\n            optionFilterProp=\"children\"\n            onChange={onChange}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().includes(input.toLowerCase())\n            }\n            value={\n              props.selectedData.state_id == null\n                ? \"\"\n                : props.selectedData?.state_id\n            }>\n            {props.miniStatesList.map((state, index) => {\n\n              return (\n                <Option key={index} value={state.id}>\n                  {state.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n\n        <Form.Item label=\"District Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your District Name!\" },\n          ]}\n        >\n          <Input\n            id=\"District\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"District Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ district, mini }) {\n  return {\n    selectedData: district.rowdata,\n    model: district.model,\n    miniStatesList: mini.miniStatesList\n  };\n}\n\nexport default connect(mapStateToProps, {\n  districtAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniStates\n})(AddDistrict);\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  cityAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/City/citySlice\";\nimport { getMiniDistrict } from \"../../../../store/mini/miniSlice\";\n\n\nconst AddCity = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniDistrict()\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const { Option } = Select;\n  const onChange = (value) => {\n    props.InputChangeValue({\n      key: \"district_id\",\n      value: value,\n    })\n  };\n  // Adds New District\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      district_id: props.selectedData?.district_id,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.cityAdd(obj);\n    }\n  };\n  // Updates Districts in Store\n  const handleUpdate = () => {\n    const cityToUpdate = {\n      id: props.selectedData.id,\n      district_id: props.selectedData?.district_id == null ? props.selectedData.district.id : props.selectedData?.district_id,\n      name: props.selectedData?.name,\n    };\n    props.cityAdd(cityToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      City\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      district_id: props.selectedData.district_id\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"District Name:\"\n          name=\"district_id\"\n          rules={[\n            { required: true, message: \"Please select your District Name!\" },\n          ]}>\n          <Select\n            showSearch\n            filterOption={(input, option) =>\n              option.children.toLowerCase().includes(input.toLowerCase())\n            }\n            placeholder=\"Select  District\"\n            optionFilterProp=\"children\"\n            onChange={onChange}\n            value={\n              props.selectedData.district_id == null\n                ? \"\"\n                : props.selectedData?.district_id\n            }\n          >\n            {props.miniDistrictList.map((district, index) => {\n\n              return (\n                <Option key={index} value={district.id}>\n                  {district.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n\n        <Form.Item label=\"City Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your City Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"City\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"City Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ city, mini }) {\n  return {\n    selectedData: city.rowdata,\n    model: city.model,\n    miniDistrictList: mini.miniDistrictList\n  };\n}\n\nexport default connect(mapStateToProps, {\n  cityAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniDistrict,\n})(AddCity);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\n\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  getMinicountry,\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n} from \"../../../../store/mini/miniSlice\";\n\nimport {\n  areaAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Area/areaSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddArea = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      state_id: props.rowdata.state_id,\n      country_id: props.rowdata.country_id,\n      district_id: props.rowdata.district_id,\n      city_id: props.rowdata.city_id,\n      pincode: props.rowdata.pincode,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.areaAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      pincode: props.rowdata?.pincode,\n      state_id:\n        props.rowdata?.state_id == null\n          ? props.rowdata.state.id\n          : props.rowdata?.state_id,\n      country_id:\n        props.rowdata?.country_id == null\n          ? props.rowdata.country.id\n          : props.rowdata?.country_id,\n      district_id:\n        props.rowdata?.district_id == null\n          ? props.rowdata.district.id\n          : props.rowdata?.district_id,\n      city_id:\n        props.rowdata?.city_id == null\n          ? props.rowdata.city.id\n          : props.rowdata?.city_id,\n    };\n    props.areaAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  useEffect(() => {\n    props.getMinicountry();\n  }, []);\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Area\n    </h5>\n  );\n\n  const onSearch = (value) => {\n    console.log(\"search:\", value);\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      country_id: props.rowdata.country_id,\n      state_id: props.rowdata.state_id,\n      district_id: props.rowdata.district_id,\n      city_id: props.rowdata.city_id,\n      name: props.rowdata.name,\n      pincode: props.rowdata.pincode,\n    });\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={616}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"userForm\"\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row gutter={[12, 0]}>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Country :\"\n              name=\"country_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Country Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select Country\"\n                optionFilterProp=\"children\"\n                // filterOption={(input, option) =>\n                //   option.children.toLowerCase().includes(input.toLowerCase())\n                // }\n                onChange={(value) => {\n                  props.getMiniStates({ country: value });\n                  props.InputChangeValue({\n                    key: \"country_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.country_id == null\n                    ? \"\"\n                    : props.rowdata?.country_id\n                }\n              >\n                {props.miniCountryList.map((country, index) => {\n                  return (\n                    <Option key={index} value={country.id}>\n                      {country.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"State :\"\n              name=\"state_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your State Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select  State\"\n                optionFilterProp=\"children\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.getMiniDistrict({ state: value });\n                  props.InputChangeValue({\n                    key: \"state_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.state_id == null ? \"\" : props.rowdata?.state_id\n                }\n              >\n                {props.miniStatesList.map((state, index) => {\n                  return (\n                    <Option key={index} value={state.id}>\n                      {state.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"District :\"\n              name=\"district_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your District Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select District\"\n                optionFilterProp=\"children\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onSearch={onSearch}\n                onChange={(value) => {\n                  props.getMiniCity({ district: value });\n                  props.InputChangeValue({\n                    key: \"district_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.district_id == null\n                    ? \"\"\n                    : props.rowdata?.district_id\n                }\n              >\n                {props.miniDistrictList.map((district, index) => {\n                  return (\n                    <Option key={index} value={district.id}>\n                      {district.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"City Name:\"\n              name=\"city_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your City Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select City\"\n                optionFilterProp=\"city\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"city_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.city_id == null ? \"\" : props.rowdata?.city_id\n                }\n              >\n                {props.miniCityList.map((city, index) => {\n                  return (\n                    <Option key={index} value={city.id}>\n                      {city.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Area Name :\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Area Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Area\"\n                name=\"name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Area Name\"\n                value={props.rowdata?.name}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Pincode :\"\n              name=\"pincode\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Pincode!\",\n                },\n                {\n                  pattern: new RegExp(\n                    /^\\d{6}$/g\n                  ),\n                  message: \"please type correct pincode\",\n                },\n              ]}\n              getValueProps={() => { }}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Pincode\"\n                name=\"pincode\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Pincode\"\n                minLength={6}\n                maxLength={6}\n                value={\n                  props.rowdata?.pincode == null ? \"\" : props.rowdata?.pincode\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ area, mini }) {\n  return {\n    rowdata: area.rowdata,\n    model: area.model,\n    miniCountryList: mini.miniCountryList,\n    miniStatesList: mini.miniStatesList,\n    miniDistrictList: mini.miniDistrictList,\n    miniCityList: mini.miniCityList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  areaAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMinicountry,\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n})(AddArea);\n","import { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport { RiCloseFill } from \"react-icons/ri\";\r\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\r\nimport {\r\n  zoneAdd,\r\n  isModelVisible,\r\n  InputChangeValue,\r\n} from \"../../../../store/Masters/Zones/zonesSlice\";\r\n\r\nimport { getMiniFirm, getMiniStates } from \"../../../../store/mini/miniSlice\";\r\n\r\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\r\n\r\nconst AddZones = (props) => {\r\n  const [form] = Form.useForm();\r\n  function ChangeHandeler(e) {\r\n    props.InputChangeValue({\r\n      key: e.target.name,\r\n      value: e.target.value,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.getMiniFirm();\r\n    props.getMiniStates();\r\n  }, []);\r\n\r\n  console.log(\"props.rowdata\", props.rowdata);\r\n  // Adds New Country\r\n  const handleAdd = () => {\r\n    const obj = {\r\n      id: 0,\r\n      name: props.rowdata?.name,\r\n      state_id: props.rowdata.state_id,\r\n      firm_id: props.rowdata.firm_id,\r\n    };\r\n    if (obj.name != null || obj.name == \"\") {\r\n      props.zoneAdd(obj);\r\n    }\r\n  };\r\n  // Updates Country in Store\r\n  const handleUpdate = () => {\r\n    const obj = {\r\n      id: props.rowdata?.id,\r\n      name: props.rowdata?.name,\r\n      state_id: props.rowdata.state_id,\r\n      firm_id: props.rowdata.firm_id,\r\n    };\r\n    props.zoneAdd(obj);\r\n  };\r\n\r\n  // Reset Input Values on Close\r\n  const handleResetInputValues = () => {\r\n    props.isModelVisible(false);\r\n  };\r\n\r\n  const FooterAddOrUpdate = () => {\r\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            onClick={() => {\r\n              form.submit();\r\n            }}\r\n            type=\"primary\"\r\n            block\r\n          >\r\n            Add\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              form.submit();\r\n            }}\r\n            block\r\n          >\r\n            Update\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const FooterCancel = () => {\r\n    return (\r\n      <Fragment>\r\n        <Button\r\n          onClick={() => {\r\n            handleResetInputValues();\r\n          }}\r\n          type=\"primary\"\r\n          block\r\n          ghost\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const modalTitle = (\r\n    <h5 className=\"modal-title\">\r\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\r\n      Zone\r\n    </h5>\r\n  );\r\n\r\n  const onSearch = (value) => {\r\n    console.log('search:', value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      name: props.rowdata.name,\r\n      firm_id: props.rowdata.firm_id,\r\n      state_id: props.rowdata.state_id,\r\n    })\r\n  }, [props.rowdata]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={props.model}\r\n      title={modalTitle}\r\n      onCancel={() => {\r\n        handleResetInputValues();\r\n        form.resetFields();\r\n        props.isModelVisible(false);\r\n      }}\r\n      className=\"hp-modal-p-24\"\r\n      footer={\r\n        <Row justify=\"center\">\r\n          <Col span={12} className=\"hp-pr-4\">\r\n            <FooterCancel />\r\n          </Col>\r\n\r\n          <Col span={12} className=\"hp-pl-4\">\r\n            <FooterAddOrUpdate />\r\n          </Col>\r\n        </Row>\r\n      }\r\n      centered\r\n      closeIcon={\r\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n      }\r\n      width={416}\r\n    >\r\n      <Form layout=\"vertical\"\r\n        form={form}\r\n        autoComplete=\"off\"\r\n        onFinish={() => {\r\n          if (props.rowdata.id == null) {\r\n            handleAdd();\r\n          }\r\n          else {\r\n            handleUpdate();\r\n          }\r\n        }}>\r\n        <Form.Item label=\"Firm Name:\"\r\n          name=\"firm_id\"\r\n          rules={[\r\n            { required: true, message: \"Please select your Firm Name!\" },\r\n          ]}\r\n          hasFeedback>\r\n          <Select\r\n            showSearch\r\n            placeholder=\"Select Firm\"\r\n            optionFilterProp=\"children\"\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\r\n            onChange={(value) => {\r\n              props.InputChangeValue({\r\n                key: \"firm_id\",\r\n                value: value,\r\n              });\r\n            }}\r\n            value={props.rowdata.firm_id == null ? \"\" : props.rowdata?.firm_id}\r\n          >\r\n            {props.miniFirmList.map((firm, index) => {\r\n              return (\r\n                <Option key={index} value={firm.id}>\r\n                  {firm.name}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"State :\"\r\n          name=\"state_id\"\r\n          rules={[\r\n            { required: true, message: \"Please select your State Name!\" },\r\n          ]}\r\n          hasFeedback>\r\n          <Select\r\n            showSearch\r\n            placeholder=\"Select state\"\r\n            optionFilterProp=\"children\"\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\r\n            onChange={(value) => {\r\n              props.InputChangeValue({\r\n                key: \"state_id\",\r\n                value: value,\r\n              });\r\n            }}\r\n            value={\r\n              props.rowdata.state_id == null ? \"\" : props.rowdata?.state_id\r\n            }\r\n          >\r\n            {props.miniStatesList.map((firm, index) => {\r\n              return (\r\n                <Option key={index} value={firm.id}>\r\n                  {firm.name}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Zone Name :\"\r\n          name=\"name\"\r\n          rules={[\r\n            { required: true, message: \"Please input your Zone Name!\" },\r\n          ]}\r\n          hasFeedback>\r\n          <Input\r\n            id=\"Zone\"\r\n            name=\"name\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Zone Name\"\r\n            value={props.rowdata?.name}\r\n            onChange={ChangeHandeler}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ zones, mini }) {\r\n  return {\r\n    rowdata: zones.rowdata,\r\n    model: zones.model,\r\n    miniStatesList: mini.miniStatesList,\r\n    miniFirmList: mini.miniFirmList,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  zoneAdd,\r\n  isModelVisible,\r\n  InputChangeValue,\r\n  getMiniFirm,\r\n  getMiniStates,\r\n})(AddZones);\r\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  firmAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Firm/firmSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddFirm = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.firmAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.firmAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Firm\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Firm Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Firm Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Firm Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ firm }) {\n  return {\n    selectedData: firm.rowdata,\n    model: firm.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  firmAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddFirm);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  brandAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Brand/brandSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddBrand = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.brandAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.brandAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Brand\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Brand Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Brand Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Brand Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n           />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ brands }) {\n  return {\n    selectedData: brands.rowdata,\n    model: brands.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  brandAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddBrand);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  occupationAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Occupations/occupationsSlice\";\n\n\nconst AddOccupation = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.occupationAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.occupationAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Occupation\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Occupation  Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Occupation  Name!\" },\n            {\n              pattern: new RegExp(\n                /^[a-zA-Z][a-zA-Z\\s]+$/i\n              ),\n              message: \"field does not accept numbers\",\n            }\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Occupation  Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ occupations }) {\n  return {\n    selectedData: occupations.rowdata,\n    model: occupations.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  occupationAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddOccupation);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  emissionnormsAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Emissionnorms/emissionnormsSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddEmissionnorms = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.emissionnormsAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.emissionnormsAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Emission Norms\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Emission Norms Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Emission Norms Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Emission Norms Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n           />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ emissionnorms }) {\n  return {\n    selectedData: emissionnorms.rowdata,\n    model: emissionnorms.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  emissionnormsAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddEmissionnorms);\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  colorsAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Colors/colorsSlice\";\n\nconst AddColors = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.colorsAdd(obj);\n    }\n  };\n\n\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.colorsAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Color\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData])\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Color Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Color Name!\" },\n            {\n              pattern: new RegExp(\n                /^[a-zA-Z][a-zA-Z\\s]+$/i\n              ),\n              message: \"field does not accept numbers\",\n            }\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            maxLength={50}\n            style={{ width: \"100%\" }}\n            placeholder=\"Color Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ colors }) {\n  return {\n    selectedData: colors.rowdata,\n    model: colors.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  colorsAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddColors);\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  banksAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Banks/banksSlice\";\n\nconst AddBanks = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.banksAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.banksAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Bank\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Bank Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Bank Name!\" },\n            {\n              pattern: new RegExp(\n                /^[a-zA-Z][a-zA-Z\\s]+$/i\n              ),\n              message: \"field does not accept numbers\",\n            }\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Bank Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ banks }) {\n  return {\n    selectedData: banks.rowdata,\n    model: banks.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  banksAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddBanks);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  priorityAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Priority/prioritySlice\";\n\n\nconst AddPriority = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.priorityAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.priorityAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Priority\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        form.resetFields();\n        handleResetInputValues();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Priority  :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Priority !\" },\n            {\n              pattern: new RegExp(\n                /^[a-zA-Z][a-zA-Z\\s]+$/i\n              ),\n              message: \"field does not accept numbers\",\n            }\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            maxLength={50}\n            style={{ width: \"100%\" }}\n            placeholder=\"Priority \"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ priority }) {\n  return {\n    selectedData: priority.rowdata,\n    model: priority.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  priorityAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddPriority);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  companybanksAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Companybanks/companybanksSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddCompanybanks = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = (values) => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.companybanksAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.companybanksAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Company Bank\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Company Bank Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please Enter Company Bank Name!\" },\n            {\n              pattern: new RegExp(\n                /^[a-zA-Z][a-zA-Z\\s]+$/i\n              ),\n              message: \"field does not accept numbers\",\n            }\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Company Bank Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ companybanks }) {\n  return {\n    selectedData: companybanks.rowdata,\n    model: companybanks.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  companybanksAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddCompanybanks);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  divisionAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Divisions/divisionsSlice\";\nimport { getMiniZones } from \"../../../../store/mini/miniSlice\";\n\nconst AddDivisions = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniZones();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      zone_id: props.rowdata.zone_id,\n      // firm_id: props.rowdata.firm_id,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.divisionAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      zone_id: props.rowdata.zone_id,\n      // firm_id: props.rowdata.firm_id,\n    };\n    props.divisionAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Division\n    </h5>\n  );\n\n  const onSearch = (value) => {\n    console.log('search:', value);\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.rowdata.name,\n      zone_id: props.rowdata.zone_id\n    })\n  }, [props.rowdata]);\n\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Zone Name :\"\n          name=\"zone_id\"\n          rules={[\n            { required: true, message: \"Please select your Zone Name!\" },\n          ]}\n          hasFeedback>\n          <Select\n            showSearch\n            placeholder=\"Select  Zone\"\n            optionFilterProp=\"children\"\n            onSearch={onSearch}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().includes(input.toLowerCase())\n            }\n            onChange={(value) => {\n              props.InputChangeValue({\n                key: \"zone_id\",\n                value: value,\n              });\n            }}\n            value={\n              props.rowdata.zone_id == null ? \"\" : props.rowdata?.zone_id\n            }\n          >\n            {props.miniZonesList.map((zone, index) => {\n              return (\n                <Option key={index} value={zone.id}>\n                  {zone.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Division Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Division Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Zone\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Division Name\"\n            value={props.rowdata?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ divisions, mini }) {\n  return {\n    rowdata: divisions.rowdata,\n    model: divisions.model,\n    miniZonesList: mini.miniZonesList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  divisionAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniZones\n})(AddDivisions);\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  clusterAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Clusters/clustersSlice\";\nimport { getMiniClusters, getMiniDivisions } from \"../../../../store/mini/miniSlice\";\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddClusters = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniClusters();\n    props.getMiniDivisions();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      division_id: props.rowdata.division_id,\n      // firm_id: props.rowdata.firm_id,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.clusterAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      division_id: props.rowdata.division_id,\n      // firm_id: props.rowdata.firm_id,\n    };\n    props.clusterAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Cluster\n    </h5>\n  );\n\n  const onSearch = (value) => {\n    console.log('search:', value);\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.rowdata.name,\n      division_id: props.rowdata.division_id\n    })\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Division Name:\"\n          name=\"division_id\"\n          rules={[\n            { required: true, message: \"Please select your Division Name!\" },\n          ]}\n          hasFeedback>\n          <Select\n            showSearch\n            placeholder=\"Select  Division\"\n            optionFilterProp=\"children\"\n            onSearch={onSearch}\n            filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\n            onChange={(value) => {\n              props.InputChangeValue({\n                key: \"division_id\",\n                value: value,\n              });\n            }}\n            value={\n              props.rowdata.division_id == null ? \"\" : props.rowdata?.division_id\n            }\n          >\n            {props.miniDivisionsList.map((division, index) => {\n              return (\n                <Option key={index} value={division.id}>\n                  {division.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Cluster Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Cluster Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Zone\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Cluster Name\"\n            value={props.rowdata?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ clusters, mini }) {\n  return {\n    rowdata: clusters.rowdata,\n    model: clusters.model,\n    miniDivisionsList: mini.miniDivisionsList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  clusterAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniClusters,\n  getMiniDivisions,\n})(AddClusters);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  mechanicAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Mechanics/mechanicsSlice\";\nimport { getMiniBanks } from \"../../../../store/mini/miniSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddMechanics = (props) => {\n  useEffect(() => {\n    props.getMiniBanks();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  console.log(\"props.rowdata\", props.rowdata);\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      bank_id: props.rowdata.bank_id,\n      mobile: props.rowdata.mobile,\n      aadharno: props.rowdata.aadharno,\n      accono: props.rowdata.accono,\n      ifsccode: props.rowdata.ifsccode,\n      address: props.rowdata.address,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.mechanicAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      bank_id: props.rowdata.bank_id,\n      mobile: props.rowdata.mobile,\n      aadharno: props.rowdata.aadharno,\n      accono: props.rowdata.accono,\n      ifsccode: props.rowdata.ifsccode,\n      address: props.rowdata.address,\n    };\n    props.mechanicAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              handleAdd();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              handleUpdate();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      mechanics\n    </h5>\n  );\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={716}\n    >\n      <Form layout=\"vertical\">\n        <Row>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item label=\"Bank :\">\n              <Select\n                showSearch\n                placeholder=\"Select a Bank\"\n                optionFilterProp=\"Firm\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"bank_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.bank_id == null ? \"\" : props.rowdata?.bank_id\n                }\n              >\n                {props.miniBanksList.map((bank, index) => {\n                  return (\n                    <Option key={index} value={bank.id}>\n                      {bank.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item label=\"Mobile :\" getValueProps={() => {}}>\n              <NumericInput\n                id=\"Mobile\"\n                name=\"mobile\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Mobile Number\"\n                maxLength={10}\n                value={props.rowdata?.mobile}\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item label=\"Aadhar Number :\" getValueProps={() => {}}>\n              <NumericInput\n                id=\"Aadharno\"\n                name=\"aadharno\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Aadharno Number\"\n                maxLength={12}\n                value={props.rowdata?.aadharno}\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item label=\"Account Number :\" getValueProps={() => {}}>\n              <NumericInput\n                id=\"accono\"\n                name=\"accono\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Account Number\"\n                maxLength={12}\n                value={props.rowdata?.accono}\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item label=\"IFSC Code :\">\n              <Input\n                id=\"IFSC-Code\"\n                name=\"ifsccode\"\n                style={{ width: \"100%\" }}\n                placeholder=\"IFSC Code\"\n                value={props.rowdata?.ifsccode}\n                onChange={ChangeHandeler}\n                rules={[\n                  { required: true, message: \"Please input your IFSC Code!\" },\n                ]}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item label=\"Address :\">\n              <Input\n                id=\"Address\"\n                name=\"address\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Address\"\n                value={props.rowdata?.address}\n                onChange={ChangeHandeler}\n                rules={[\n                  { required: true, message: \"Please input your Address !\" },\n                ]}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item label=\"Mechanics Name :\">\n              <Input\n                id=\"Zone\"\n                name=\"name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Mechanics Name\"\n                value={props.rowdata?.name}\n                onChange={ChangeHandeler}\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your Mechanics Name!\",\n                  },\n                ]}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ mechanics, mini }) {\n  return {\n    rowdata: mechanics.rowdata,\n    model: mechanics.model,\n    miniBanksList: mini.miniBanksList,\n    // miniFirmList: mini.miniFirmList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  mechanicAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniBanks,\n})(AddMechanics);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  brandfamilyAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Brandfamily/brandfamilySlice\";\nimport { getMiniBrands } from \"../../../../store/mini/miniSlice\";\n\nconst AddBrandfamily = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniBrands();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      brand_id: props.rowdata.brand_id,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.brandfamilyAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      brand_id: props.rowdata.brand_id,\n    };\n    props.brandfamilyAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Brand Family\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.rowdata.name,\n      brand_id: props.rowdata.brand_id\n    })\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Brands :\"\n          name=\"brand_id\"\n          rules={[\n            {\n              required: true,\n              message: \"Please select Your Brand Name!\",\n            },\n          ]}\n          hasFeedback>\n          <Select\n            showSearch\n            placeholder=\"Select Brand\"\n            filterOption={(input, option) =>\n              option.children.toLowerCase().includes(input.toLowerCase())\n            }\n            optionFilterProp=\"brand\"\n            onChange={(value) => {\n              props.InputChangeValue({\n                key: \"brand_id\",\n                value: value,\n              });\n            }}\n            value={\n              props.rowdata.brand_id == null ? \"\" : props.rowdata?.brand_id\n            }\n          >\n            {props.miniBrandsList.map((brand, index) => {\n              return (\n                <Option key={index} value={brand.id}>\n                  {brand.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n\n        <Form.Item label=\"Brand Family Name :\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input Your Brand Family Name!\",\n            },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"name\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Brand Family Name\"\n            value={props.rowdata?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ brandfamily, mini }) {\n  return {\n    rowdata: brandfamily.rowdata,\n    model: brandfamily.model,\n    miniBrandsList: mini.miniBrandsList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  brandfamilyAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniBrands,\n})(AddBrandfamily);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport {\n  Button,\n  Input,\n  Form,\n  Modal,\n  Badge,\n  Row,\n  Col,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  isModelVisible,\n  InputChangeValue,\n  dealerAdd,\n  userEmailValidation,\n  userMobileValidation,\n} from \"../../../../store/Masters/Dealers/dealersSlice\";\nimport {\n  RiCheckboxCircleLine,\n  RiAlertLine,\n  RiInformationLine,\n} from \"react-icons/ri\";\nimport {\n  getMinicountry,\n  getMiniStates,\n  getMiniCity,\n  getMiniDistrict,\n  getMiniBanks,\n  getMiniArea,\n} from \"../../../../store/mini/miniSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\nconst AddDealer = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n  const { Option } = Select;\n\n  useEffect(() => {\n    props.getMiniStates();\n    props.getMiniBanks();\n  }, []);\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      user: {\n        username: props.dealerUserData?.phone,\n        email: props.dealerUserData?.email,\n        phone: props.dealerUserData?.phone,\n        group_ids: props.dealerUserData?.group_ids,\n        first_name: props.dealerUserData?.first_name,\n        last_name: props.dealerUserData?.last_name,\n        state_id: props.dealerUserData?.state_id,\n        district_id: props.dealerUserData?.district_id,\n        city_id: props.dealerUserData?.city_id,\n        area_id: props.dealerUserData?.area_id,\n        address: props.dealerUserData?.address,\n        pincode: props.dealerUserData?.pincode,\n        // password: props.dealerUserData?.password,\n        deviceaccess: 1,\n      },\n      bank_id: props.dealerUserData?.bank_id,\n      aadharno: props.dealerUserData?.aadharno,\n      gstno: props.dealerUserData?.gstno,\n      accono: props.dealerUserData?.accono,\n      ifsccode: props.dealerUserData?.ifsccode,\n    };\n    props.dealerAdd(obj);\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.dealerUserData?.id,\n      user: {\n        username: props.dealerUserData?.phone,\n        email: props.dealerUserData?.email,\n        phone: props.dealerUserData?.phone,\n        // group_ids: props.dealerUserData?.group_ids,\n        first_name: props.dealerUserData?.first_name,\n        last_name: props.dealerUserData?.last_name,\n        state_id: props.dealerUserData?.state_id,\n        district_id: props.dealerUserData?.district_id,\n        city_id: props.dealerUserData?.city_id,\n        area_id: props.dealerUserData?.area_id,\n        address: props.dealerUserData?.address,\n        pincode: props.dealerUserData?.pincode,\n        password: props.dealerUserData?.password,\n        deviceaccess: 1,\n      },\n      bank_id: props.dealerUserData?.bank_id,\n      aadharno: props.dealerUserData?.aadharno,\n      gstno: props.dealerUserData?.gstno,\n      accono: props.dealerUserData?.accono,\n      ifsccode: props.dealerUserData?.ifsccode,\n    };\n    props.dealerAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  // function checkUserName(data) {\n  //   Modal.info({\n  //     icon: (\n  //       <span className=\"remix-icon\">\n  //         <RiInformationLine />\n  //       </span>\n  //     ),\n  //     title: <h5 className=\"hp-mb-0 hp-font-weight-500\">User Name Error</h5>,\n  //     content: (\n  //       <div>\n  //         <p className=\"hp-p1-body hp-text-color-black-80\">\n  //           This user name already exit {props.username}\n  //         </p>\n  //       </div>\n  //     ),\n  //   });\n  // }\n\n  const FooterAddOrUpdate = () => {\n    if (props.dealerUserData.id == null || props.dealerUserData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.dealerUserData.id == null || props.dealerUserData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Dealer\n    </h5>\n  );\n\n  const onSearch = (value) => {\n    console.log(\"search:\", value);\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      first_name: props.dealerUserData.first_name,\n      last_name: props.dealerUserData.last_name,\n      email: props.dealerUserData.email,\n      phone: props.dealerUserData.phone,\n      aadharno: props.dealerUserData.aadharno,\n      bank_id: props.dealerUserData.bank_id,\n      accono: props.dealerUserData.accono,\n      ifsccode: props.dealerUserData.ifsccode,\n      gstno: props.dealerUserData.gstno,\n      state_id: props.dealerUserData.state_id,\n      district_id: props.dealerUserData.district_id,\n      city_id: props.dealerUserData.city_id,\n      area_id: props.dealerUserData.area_id,\n      pincode: props.dealerUserData.pincode,\n      username: props.dealerUserData.username,\n      password: props.dealerUserData.password,\n      username: props.dealerUserData.username,\n      address: props.dealerUserData.address,\n    });\n  }, [props.dealerUserData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={816}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={() => {\n          if (props.dealerUserData.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"First Name :\"\n              name=\"first_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your First name!\",\n                },\n                {\n                  pattern: new RegExp(/[a-z][A-Z]$/i),\n                  message: \"field does not accept numbers\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"first_name\"\n                name=\"first_name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"First name\"\n                value={\n                  props.dealerUserData.first_name == null\n                    ? \"\"\n                    : props.dealerUserData?.first_name\n                }\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Last Name :\"\n              name=\"last_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Last Name!\",\n                },\n                {\n                  pattern: new RegExp(/[a-z][A-Z]$/i),\n                  message: \"field does not accept numbers\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"last_name\"\n                name=\"last_name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"last name\"\n                value={\n                  props.dealerUserData?.last_name == null\n                    ? \"\"\n                    : props.dealerUserData.last_name\n                }\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Email :\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Email!\",\n                },\n                {\n                  pattern: new RegExp(\n                    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                  ),\n                  message: \"field does not accept Email\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"email\"\n                name=\"email\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Email\"\n                onBlur={(e) => {\n                  props.userEmailValidation({\n                    email: e.target.value,\n                  });\n                }}\n                value={\n                  props.dealerUserData?.email == null\n                    ? \"\"\n                    : props.dealerUserData.email\n                }\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Phone :\"\n              name=\"phone\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Phone!\",\n                },\n                {\n                  min: 10,\n                  message: \"Phone Number Must be 10 number\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"phone\"\n                name=\"phone\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Phone\"\n                maxLength={10}\n                minLength={10}\n                onBlur={(e) => {\n                  props.userMobileValidation({ phone: e.value });\n                }}\n                value={\n                  props.dealerUserData.phone == null\n                    ? \"\"\n                    : props.dealerUserData?.phone\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Aadhar Number:\"\n              name=\"aadharno\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Aadhar Number!\",\n                },\n                {\n                  pattern: new RegExp(/^\\d{12}$/g),\n                  message: \"field does not accept aadhar number\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"aadharno\"\n                name=\"aadharno\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Aadhar Number\"\n                maxLength={12}\n                value={\n                  props.dealerUserData?.aadharno == null\n                    ? \"\"\n                    : props.dealerUserData?.aadharno\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Bank :\"\n              name=\"bank_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Bank!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select a Bank\"\n                optionFilterProp=\"children\"\n                onSearch={onSearch}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"bank_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.dealerUserData.bank_id == null\n                    ? \"\"\n                    : props.dealerUserData?.bank_id\n                }\n              >\n                {props.miniBanksList.map((bank, index) => {\n                  return (\n                    <Option key={index} value={bank.id}>\n                      {bank.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Account Number :\"\n              name=\"accono\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Account Number !\",\n                },\n                {\n                  min: 9,\n                  message: \"Account Number Must be minimum 9 characters\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"accono\"\n                name=\"accono\"\n                style={{ width: \"100%\" }}\n                maxLength={18}\n                placeholder=\"Account Number\"\n                value={\n                  props.dealerUserData.accono == null\n                    ? \"\"\n                    : props.dealerUserData?.accono\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"IFSC Code :\"\n              name=\"ifsccode\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your IFSC Code!\",\n                },\n                {\n                  pattern: new RegExp(/[A-Z]{4}[0][a-zA-Z0-9]{6}$/i),\n                  message: \"field does not accept IFSC code\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Ifsccode\"\n                name=\"ifsccode\"\n                maxLength={11}\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                placeholder=\"IFSC Code\"\n                value={props.dealerUserData?.ifsccode}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"GST Number\"\n              name=\"gstno\"\n              rules={[\n                // {\n                //   required: true,\n                //   message: \"Please input your GST Number!\",\n                // },\n                {\n                  min: 15,\n                  message: \"GST Number must be minimum 15 characters.\",\n                },\n                // {\n                //   pattern: new RegExp(\n                //     /^[0-9]{2}([A-Z]{3}[P,C,H,A,B,G,J,L,F,T][A-Z][0-9]{4}[A-Z])[0-9][Z][0-9]$/i\n                //   ),\n                //   message: \"Please input your GST number!\",\n                // }\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"gstno\"\n                name=\"gstno\"\n                style={{ width: \"100%\", transform: \"uppercase\" }}\n                maxLength={15}\n                placeholder=\"GST Number\"\n                value={props.dealerUserData?.gstno}\n                onChange={ChangeHandeler}\n                // normalize={value => (value || '').toUpperCase()}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"State :\"\n              name=\"state_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your State!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select State\"\n                optionFilterProp=\"state\"\n                onChange={(value) => {\n                  props.getMiniDistrict({ state: value });\n                  props.InputChangeValue({\n                    key: \"state_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.dealerUserData.state_id == null\n                    ? \"\"\n                    : props.dealerUserData?.state_id\n                }\n              >\n                {props.miniStatesList.map((state, index) => {\n                  return (\n                    <Option key={index} value={state.id}>\n                      {state.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"District :\"\n              name=\"district_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your District!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select District\"\n                optionFilterProp=\"district\"\n                onChange={(value) => {\n                  props.getMiniCity({ district: value });\n                  props.InputChangeValue({\n                    key: \"district_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.dealerUserData.district_id == null\n                    ? \"\"\n                    : props.dealerUserData?.district_id\n                }\n              >\n                {props.miniDistrictList.map((district, index) => {\n                  return (\n                    <Option key={index} value={district.id}>\n                      {district.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"City :\"\n              name=\"city_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your City!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select City\"\n                optionFilterProp=\"city\"\n                onChange={(value) => {\n                  props.getMiniArea({ city: value });\n                  props.InputChangeValue({\n                    key: \"city_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.dealerUserData.city_id == null\n                    ? \"\"\n                    : props.dealerUserData?.city_id\n                }\n              >\n                {props.miniCityList.map((city, index) => {\n                  return (\n                    <Option key={index} value={city.id}>\n                      {city.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Area :\"\n              name=\"area_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select your Area!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Area\"\n                optionFilterProp=\"area\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"area_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.dealerUserData.area_id == null\n                    ? \"\"\n                    : props.dealerUserData?.area_id\n                }\n              >\n                {props.miniAreaList.map((area, index) => {\n                  return (\n                    <Option key={index} value={area.id}>\n                      {area.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Pincode :\"\n              name=\"pincode\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Pincode!\",\n                },\n                {\n                  pattern: new RegExp(/^\\d{6}$/g),\n                  message: \"field does not accept pincode\",\n                },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"pincode\"\n                name=\"pincode\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Pincode\"\n                maxLength={6}\n                value={\n                  props.dealerUserData.pincode == null\n                    ? \"\"\n                    : props.dealerUserData?.pincode\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          {/* <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"User Name :\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your User Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"username\"\n                name=\"username\"\n                style={{ width: \"100%\" }}\n                placeholder=\"User Name\"\n                // onBlur={(value) => {\n                //   checkUserName(value);\n                // }}\n                value={\n                  props.dealerUserData.username == null\n                    ? \"\"\n                    : props.dealerUserData?.username\n                }\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          {props.dealerUserData.id == null && (\n            <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n              <Form.Item\n                label=\"Password :\"\n                name=\"password\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your password!\",\n                  },\n                ]}\n                hasFeedback\n              >\n                <Input.Password\n                  id=\"password\"\n                  name=\"password\"\n                  style={{ width: \"100%\" }}\n                  placeholder=\"Password\"\n                  value={\n                    props.dealerUserData?.password == null\n                      ? \"\"\n                      : props.dealerUserData?.password\n                  }\n                  onChange={ChangeHandeler}\n                />\n              </Form.Item>\n            </Col>\n          )} */}\n\n          <Col md={24} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Address :\"\n              name=\"address\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Address!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input.TextArea\n                id=\"address\"\n                name=\"address\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Address\"\n                value={props.dealerUserData?.address}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ dealers, mini }) {\n  return {\n    dealerUserData: dealers.userdata,\n    model: dealers.model,\n    miniStatesList: mini.miniStatesList,\n    miniDistrictList: mini.miniDistrictList,\n    miniCityList: mini.miniCityList,\n    miniAreaList: mini.miniAreaList,\n    miniBanksList: mini.miniBanksList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  dealerAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMinicountry,\n  getMiniStates,\n  getMiniCity,\n  getMiniDistrict,\n  getMiniBanks,\n  getMiniArea,\n  userEmailValidation,\n  userMobileValidation,\n})(AddDealer);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  addressproofAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Addressproof/addressproofSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddAddressproof = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.addressproofAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.addressproofAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Address Proof\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Address Proof Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input Your Address Proof Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Address Proof Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ addressproof }) {\n  return {\n    selectedData: addressproof.rowdata,\n    model: addressproof.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  addressproofAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddAddressproof);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, DatePicker } from \"antd\";\nimport {\n  emidateAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Emidates​/emidates​Slice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddEmidates = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n      // name: moment( props.selectedData?.name).format(\"YYYY-MM-DD\"),\n      sequence: props.selectedData?.sequence,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.emidateAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n      sequence: props.selectedData?.sequence,\n    };\n    props.emidateAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Emi Date\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      sequence: props.selectedData.sequence,\n    });\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Form.Item\n          label=\"Emi Date :\"\n          name=\"name\"\n          rules={[{ required: true, message: \"Please input your Emi Date!\" }]}\n          getValueProps={() => { }}\n          hasFeedback\n        >\n          <NumericInput\n            id=\"name\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Emi Date\"\n            maxLength={30}\n            value={\n              props.selectedData.name == null ? \"\" : props.selectedData?.name\n            }\n            onChange={(value) => {\n              props.InputChangeValue(value);\n            }}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Sequence :\"\n          name=\"sequence\"\n          rules={[{ required: true, message: \"Please input your Sequence!\" }]}\n          hasFeedback\n        >\n          <Input\n            id=\"Sequence\"\n            name=\"sequence\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Sequence\"\n            value={props.selectedData?.sequence}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ emidates }) {\n  return {\n    selectedData: emidates.rowdata,\n    model: emidates.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  emidateAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddEmidates);\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Alert, } from \"antd\";\nimport {\n  insuranceAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Insurance/insuranceSlice\";\n\n\nconst AddInsurance = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n\n  // Adds New Insurance\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.insuranceAdd(obj);\n    }\n  };\n\n\n  // Updates Insurance in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.insuranceAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    form.resetFields();\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Insurance\n    </h5>\n  );\n\n\n\n  useEffect(() => {\n    form.setFieldsValue({\n      InsuranceName: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Insurance :\"\n          name=\"InsuranceName\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Insurance!\"\n            },\n            {\n              pattern: new RegExp(\n                /^[a-zA-Z][a-zA-Z\\s]+$/i\n              ),\n              message: \"field does not accept numbers\",\n            }\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Insurance\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            maxLength={50}\n            placeholder=\"Insurance\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ insurance }) {\n  return {\n    selectedData: insurance.rowdata,\n    model: insurance.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  insuranceAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddInsurance);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  leavereasonsAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Leavereasons/leavereasonsSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddLeavereasons = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.leavereasonsAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.leavereasonsAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Leave Reason\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData])\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Leave Reason  :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Leave Reason!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            maxLength={50}\n            style={{ width: \"100%\" }}\n            placeholder=\"Leave Reason\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ leavereasons }) {\n  return {\n    selectedData: leavereasons.rowdata,\n    model: leavereasons.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  leavereasonsAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddLeavereasons);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  versionfeaturesAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Versionfeatures​/versionfeatures​Slice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddVersionfeatures = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.versionfeaturesAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.versionfeaturesAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Version Feature\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Version Feature:\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Version Feature!\" },\n            {\n              pattern: new RegExp(\n                /^[a-zA-Z][a-zA-Z\\s]+$/i\n              ),\n              message: \"field does not accept numbers\",\n            }\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Version Feature\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ versionfeatures }) {\n  return {\n    selectedData: versionfeatures.rowdata,\n    model: versionfeatures.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  versionfeaturesAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddVersionfeatures);\n","import { Fragment, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Select, Row, Col, Switch } from \"antd\";\nimport {\n  rejectreasonsAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Rejectreasons/rejectreasonsSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddRejectreasons = (props) => {\n  const [form] = Form.useForm();\n  const rejectReasonType = [\n    { id: 1, name: \"Purchase\" },\n    { id: 2, name: \"Sale\" },\n    { id: 3, name: \"Both\" },\n  ];\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n      type: props.selectedData?.type,\n      editable: props.selectedData?.editable\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.rejectreasonsAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n      type: props.selectedData?.type,\n      editable: props.selectedData?.editable\n    };\n    props.rejectreasonsAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Reject Reason\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      type: props.selectedData.type,\n      editable: props.selectedData.editable\n    });\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      {\" \"}\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        {\" \"}\n        <Row gutter={[12, 12]}>\n          <Col span={24} xs={24} xl={24} md={24}>\n            <Form.Item\n              label=\"Reason Type\"\n              name=\"type\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select Reason Type\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select Reason Type\"\n                optionFilterProp=\"type\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"type\",\n                    value: value,\n                  });\n                }}\n                value={props.selectedData?.type}\n              >\n                {rejectReasonType.map((reasonType, index) => {\n                  return (\n                    <Option key={index} value={reasonType.id}>\n                      {reasonType.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={24} md={24}>\n            <Form.Item\n              label=\"Reject Reason Name :\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Reject Reason Name!\",\n                },\n                {\n                  pattern: new RegExp(\n                    /^[a-zA-Z][a-zA-Z\\s]+$/i\n                  ),\n                  message: \"field does not accept numbers\",\n                }\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Country\"\n                name=\"name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Reject Reason Name\"\n                value={props.selectedData?.name}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={24} md={24}>\n            <Form.Item\n              label=\"Editable\"\n              name=\"editable\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select Editable\",\n                },\n              ]}\n              hasFeedback\n            >\n              {\" \"}\n              <Switch\n                checkedChildren=\"On\"\n                unCheckedChildren=\"Off\"\n                // defaultChecked finalapproval\n                checked={props.selectedData.editable}\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"editable\",\n                    value: value,\n                  });\n                }}\n              />\n              </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ rejectreasons }) {\n  return {\n    selectedData: rejectreasons.rowdata,\n    model: rejectreasons.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  rejectreasonsAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddRejectreasons);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  vehicletypesAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Vehicletypes/vehicletypesSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddVehicletypes = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    console.log(\"change Handeler \", e);\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  const wheeltypeList = [\n    { id: 1, name: \"2 Wheeler\" },\n    { id: 2, name: \"3 Wheeler\" },\n    { id: 3, name: \"4 Wheeler\" },\n  ];\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n      wheels: props.selectedData?.wheels,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.vehicletypesAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n      wheels: props.selectedData?.wheels,\n    };\n    props.vehicletypesAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Vehicle Type\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      wheels: props.selectedData.wheels\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Vehicle Type:\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Vehicle Type!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Vehicle Types\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Vehicle Type\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n\n        <Form.Item label=\"Wheels :\"\n          name=\"wheels\"\n          rules={[\n            { required: true, message: \"Please select your Wheels!\" },\n          ]}\n          hasFeedback>\n          <Select\n            showSearch\n            filterOption={(input, option) =>\n              option.children.toLowerCase().includes(input.toLowerCase())\n            }\n            placeholder=\"Select  Wheels\"\n            optionFilterProp=\"Wheels\"\n            onChange={(value) => {\n              props.InputChangeValue({\n                key: \"wheels\",\n                value: value,\n              });\n            }}\n            value={\n              props.selectedData?.wheels == null\n                ? \"\"\n                : props.selectedData?.wheels\n            }\n          >\n            {wheeltypeList.map((wheels, index) => {\n              return (\n                <Option key={index} value={wheels.id}>\n                  {wheels.name}\n                </Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ vehicletypes }) {\n  return {\n    selectedData: vehicletypes.rowdata,\n    model: vehicletypes.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  vehicletypesAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddVehicletypes);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  showroomsAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Showrooms/showroomsSlice\";\nimport { getMiniBanks } from \"../../../../store/mini/miniSlice\";\n\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddShowrooms = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniBanks();\n  }, []);\n\n  function ChangeHandeler(e) {\n    console.log(\"change Handeler \", e);\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      code: props.selectedData?.code,\n      name: props.selectedData?.name,\n      contact_number: props.selectedData?.contact_number,\n      location: props.selectedData?.location,\n      address: props.selectedData?.address,\n      bank_id: props.selectedData.bank_id,\n      accono: props.selectedData?.accono,\n      ifsccode: props.selectedData?.ifsccode,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.showroomsAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      code: props.selectedData?.code,\n      name: props.selectedData?.name,\n      contact_number: props.selectedData?.contact_number,\n      location: props.selectedData?.location,\n      address: props.selectedData?.address,\n      bank_id: props.selectedData.bank_id,\n      accono: props.selectedData?.accono,\n      ifsccode: props.selectedData?.ifsccode,\n    };\n    props.showroomsAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Show Room\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      contact_number: props.selectedData.contact_number,\n      location: props.selectedData.location,\n      bank_id: props.selectedData.bank_id,\n      accono: props.selectedData.accono,\n      ifsccode: props.selectedData.ifsccode,\n      address: props.selectedData.address,\n    });\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={616}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row>\n          <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Show Room Name:\"\n              name=\"name\"\n              rules={[\n                { required: true, message: \"Please input your Show Room Name!\" },\n                {\n                  pattern: new RegExp(\n                    /^[a-zA-Z][a-zA-Z\\s]+$/i\n                  ),\n                  message: \"field does not accept numbers\",\n                }\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Show Rooms\"\n                name=\"name\"\n                maxLength={50}\n                style={{ width: \"100%\" }}\n                placeholder=\"Show Room Name\"\n                value={props.selectedData?.name}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Contact Number :\"\n              name=\"contact_number\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Contact Number!\",\n                },\n              ]}\n              getValueProps={() => { }}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"contact_number\"\n                name=\"contact_number\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Contact Number\"\n                maxLength={10}\n                value={\n                  props.selectedData?.contact_number == null\n                    ? \"\"\n                    : props.selectedData?.contact_number\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Location:\"\n              name=\"location\"\n              rules={[\n                { required: true, message: \"Please input your Location!\" },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Location\"\n                name=\"location\"\n                maxLength={50}\n                style={{ width: \"100%\" }}\n                placeholder=\"Location\"\n                value={props.selectedData?.location}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item label=\"Bank :\"\n              name=\"bank_id\"\n              rules={[{ required: true, message: \"Please select your Bank!\" }]}\n              hasFeedback>\n              <Select\n                showSearch\n                placeholder=\"Select Bank\"\n                optionFilterProp=\"Bank\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"bank_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.selectedData.bank_id == null\n                    ? \"\"\n                    : props.selectedData?.bank_id\n                }\n              >\n                {props.miniBanksList.map((bank, index) => {\n                  return (\n                    <Option key={index} value={bank.id}>\n                      {bank.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Account Number:\"\n              name=\"accono\"\n              rules={[\n                { required: true, message: \"Please input your Account Number!\" },\n                {\n                  min: 9,\n                  message: \"Account Number Must be minimum 9 characters\"\n                }\n              ]}\n              getValueProps={() => { }}\n              hasFeedback>\n              <NumericInput\n                id=\"Account\"\n                name=\"accono\"\n                style={{ width: \"100%\" }}\n                maxLength={18}\n                placeholder=\"Account Number\"\n                value={\n                  props.selectedData?.accono == null\n                    ? \"\"\n                    : props.selectedData?.accono\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"IFSC Code:\"\n              name=\"ifsccode\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Enter Your IFSC Code!\",\n                },\n                {\n                  pattern: new RegExp(\n                    /[A-Z|a-z]{4}[0][a-zA-Z0-9]{6}$/i\n                  ),\n                  message: \"field does not accept IFSC code\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"ifsccode\"\n                name=\"ifsccode\"\n                maxLength={11}\n                style={{ width: \"100%\" }}\n                placeholder=\"IFSC Code\"\n                value={props.selectedData?.ifsccode}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={24} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Address:\"\n              name=\"address\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Address !\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input.TextArea\n                id=\"Address \"\n                name=\"address\"\n                maxLength={150}\n                style={{ width: \"100%\" }}\n                placeholder=\"Address\"\n                value={props.selectedData?.address}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ showrooms, mini }) {\n  return {\n    selectedData: showrooms.rowdata,\n    model: showrooms.model,\n    miniBanksList: mini.miniBanksList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  showroomsAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniBanks,\n})(AddShowrooms);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  percentageinterestsAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Percentageinterests/percentageinterestsSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddPercentageinterests = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n      sequence: props.selectedData?.sequence,\n      value: props.selectedData?.value,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.percentageinterestsAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n      sequence: props.selectedData?.sequence,\n      value: props.selectedData?.value,\n    };\n    props.percentageinterestsAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Percentage Interest\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      sequence: props.selectedData.sequence,\n      value: props.selectedData.value,\n    });\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Form.Item\n          label=\"Interest :\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Interest!\",\n            },\n          ]}\n          hasFeedback\n        >\n          <Input\n            id=\"Country\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Percentage Interest\"\n            value={props.selectedData?.name}\n            maxLength={50}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Sequence :\"\n          name=\"sequence\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Sequence Number!\",\n            },\n          ]}\n          getValueProps={() => { }}\n          hasFeedback\n        >\n          <NumericInput\n            id=\"sequence\"\n            name=\"sequence\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Sequence\"\n            maxLength={10}\n            value={props.selectedData?.sequence}\n            onChange={props.InputChangeValue}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Value:\"\n          name=\"value\"\n          onChange={ChangeHandeler}\n          rules={[{ required: true, message: \"Please input your Value!\" },\n          {\n            pattern: new RegExp(/^\\d+$/),\n            message: \"Please input only numbers!\",\n          },]}\n          hasFeedback\n        >\n          <Input\n            id=\"Value\"\n            name=\"value\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Value\"\n            value={props.selectedData?.value}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ percentageinterests }) {\n  return {\n    selectedData: percentageinterests.rowdata,\n    model: percentageinterests.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  percentageinterestsAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddPercentageinterests);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  financierAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Financiers/financiersSlice\";\nimport { getMiniBanks } from \"../../../../store/mini/miniSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddFinanciers = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniBanks();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // const financiersTypeList = [\n  //   { id: 1, name: \"Internal\" },\n  //   { id: 2, name: \"External\" },\n  // ];\n\n  console.log(\"props.rowdata\", props.rowdata);\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      mobile: props.rowdata.mobile,\n      aadharno: props.rowdata.aadharno,\n      companyname: props.rowdata.companyname,\n      gstno: props.rowdata.gstno,\n      bank_id: props.rowdata.bank_id,\n      accono: props.rowdata.accono,\n      ifsccode: props.rowdata.ifsccode,\n      companyaddress: props.rowdata.companyaddress,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.financierAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      mobile: props.rowdata.mobile,\n      aadharno: props.rowdata.aadharno,\n      companyname: props.rowdata.companyname,\n      gstno: props.rowdata.gstno,\n      bank_id: props.rowdata.bank_id,\n      accono: props.rowdata.accono,\n      ifsccode: props.rowdata.ifsccode,\n      companyaddress: props.rowdata.companyaddress,\n    };\n    props.financierAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Financier\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.rowdata.name,\n      mobile: props.rowdata.mobile,\n      aadharno: props.rowdata.aadharno,\n      companyname: props.rowdata.companyname,\n      gstno: props.rowdata.gstno,\n      bank_id: props.rowdata.bank_id,\n      accono: props.rowdata.accono,\n      ifsccode: props.rowdata.ifsccode,\n      companyaddress: props.rowdata.companyaddress,\n    });\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={716}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row>\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Financier  :\"\n              name=\"name\"\n              rules={[\n                { required: true, message: \"Please input your Financier!\" },\n                {\n                  pattern: new RegExp(\n                    /^[a-zA-Z][a-zA-Z\\s]+$/i\n                  ),\n                  message: \"field does not accept numbers\",\n                }\n              ]}\n              hasFeedback>\n              <Input\n                id=\"Financiers\"\n                name=\"name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Financier \"\n                value={props.rowdata?.name}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Mobile :\"\n              name=\"mobile\"\n              rules={[\n                { required: true, message: \"Please input your Mobile!\" },\n                {\n                  pattern: new RegExp(/^\\d{10}$/g),\n                  message: \"field does not accept mobile number\",\n                },\n              ]}\n              getValueProps={() => { }}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Mobile\"\n                name=\"mobile\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Mobile Number\"\n                maxLength={10}\n                value={\n                  props.rowdata.mobile == null ? \"\" : props.rowdata?.mobile\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Aadhar Number :\"\n              name=\"aadharno\"\n              rules={[\n                { required: true, message: \"Please input your Aadhar Number!\" },\n                {\n                  pattern: new RegExp(/^\\d{12}$/g),\n                  message: \"field does not accept aadhar number\",\n                },\n              ]}\n              getValueProps={() => { }}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Aadharno\"\n                name=\"aadharno\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Aadharno Number\"\n                maxLength={12}\n                value={\n                  props.rowdata.aadharno == null ? \"\" : props.rowdata?.aadharno\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Company Name :\"\n              name=\"companyname\"\n              rules={[\n                { required: true, message: \"Please input your Company Name!\" },\n                {\n                  pattern: new RegExp(\n                    /^[a-zA-Z][a-zA-Z\\s]+$/i\n                  ),\n                  message: \"field does not accept numbers\",\n                }\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Company Name\"\n                name=\"companyname\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Company Name\"\n                value={props.rowdata?.companyname}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"GST Number :\"\n              name=\"gstno\"\n              rules={[\n                { required: true, message: \"Please input your GST Number!\" },\n                {\n                  min: 15,\n                  message: \"GST Number must be minimum 15 characters.\",\n                },\n              ]}\n              getValueProps={() => { }}\n              hasFeedback>\n              <Input\n                id=\"GST\"\n                name=\"gstno\"\n                style={{ width: \"100%\" }}\n                placeholder=\"GST Number\"\n                maxLength={16}\n                value={props.rowdata?.gstno}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Bank :\"\n              name=\"bank_id\"\n              rules={[{ required: true, message: \"Please select your Bank!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select  Bank\"\n                optionFilterProp=\"bank\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"bank_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.bank_id == null ? \"\" : props.rowdata?.bank_id\n                }\n              >\n                {props.miniBanksList.map((bank, index) => {\n                  return (\n                    <Option key={index} value={bank.id}>\n                      {bank.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Account Number :\"\n              name=\"accono\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Account Number!\",\n                },\n                {\n                  min: 9,\n                  message: \"Account Number Must be minimum 9 characters\"\n                }\n              ]}\n              getValueProps={() => { }}\n              hasFeedback>\n              <NumericInput\n                id=\"accono\"\n                name=\"accono\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Account Number\"\n                maxLength={18}\n                value={\n                  props.rowdata.accono == null ? \"\" : props.rowdata?.accono\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"IFSC Code :\"\n              name=\"ifsccode\"\n              rules={[\n                { required: true, message: \"Please input your IFSC Code!\" },\n                {\n                  pattern: new RegExp(/[A-Z]{4}[0][a-zA-Z0-9]{6}$/i),\n                  message: \"field does not accept IFSC code\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"IFSC-Code\"\n                name=\"ifsccode\"\n                style={{ width: \"100%\" }}\n                placeholder=\"IFSC Code\"\n                value={props.rowdata?.ifsccode}\n                onChange={(e) => {\n                  props.InputChangeValue({\n                    key: e.target.name,\n                    value: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={24} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Company Address :\"\n              name=\"companyaddress\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Company Address !\",\n                },\n              ]}\n              hasFeedback>\n              <Input.TextArea\n                id=\"Address\"\n                name=\"companyaddress\"\n                style={{ width: \"100%\" }}\n                maxLength={150}\n                placeholder=\"Company Address\"\n                value={props.rowdata?.companyaddress}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ financiers, mini }) {\n  return {\n    rowdata: financiers.rowdata,\n    model: financiers.model,\n    miniBanksList: mini.miniBanksList,\n    // miniFirmList: mini.miniFirmList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  financierAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniBanks,\n})(AddFinanciers);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport {\n  Button,\n  Input,\n  Form,\n  Modal,\n  Badge,\n  Row,\n  Col,\n  Select,\n  DatePicker,\n  Switch,\n} from \"antd\";\n// import NumericInput from \"../../../components/data-entry/inputs/numberInput\";\n\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\n\nimport {\n  counterAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Counters/counterSlice\";\n\nimport {\n  getMiniClusters,\n  getMiniStates,\n  getMiniDistrict,\n  getMiniDivisions,\n  getMiniZones,\n  getMiniArea,\n  getMiniCity,\n} from \"../../../../store/mini/miniSlice\";\n\nconst AddCounter = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniStates();\n    props.getMiniZones();\n  }, []);\n\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  const countertypeList = [\n    { id: 1, name: \"Physical\" },\n    { id: 2, name: \"Virtual\" },\n  ];\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      type: props.rowdata?.type,\n      latitude: props.rowdata?.latitude,\n      longitude: props.rowdata?.longitude,\n      state_id: props.rowdata.state_id,\n      district_id: props.rowdata.district_id,\n      zone_id: props.rowdata.zone_id,\n      division_id: props.rowdata.division_id,\n      cluster_id: props.rowdata.cluster_id,\n      city_id: props.rowdata.city_id,\n      area_id: props.rowdata.area_id,\n      address: props.rowdata.address,\n      pincode: props.rowdata.pincode,\n      is_active: props.rowdata.is_active,\n      mobile: props.rowdata.mobile,\n    };\n    props.counterAdd(obj);\n    if (obj.name != null || obj.name == \"\") {\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      type: props.rowdata?.type,\n      latitude: props.rowdata?.latitude,\n      longitude: props.rowdata?.longitude,\n      state_id: props.rowdata.state_id,\n      district_id: props.rowdata.district_id,\n      zone_id: props.rowdata.zone_id,\n      division_id: props.rowdata.division_id,\n      cluster_id: props.rowdata.cluster_id,\n      city_id: props.rowdata.city_id,\n      area_id: props.rowdata.area_id,\n      address: props.rowdata.address,\n      pincode: props.rowdata.pincode,\n      is_active: props.rowdata.is_active,\n      mobile: props.rowdata.mobile,\n    };\n    props.counterAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Counter\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.rowdata.name,\n      type: props.rowdata.type,\n      zone_id: props.rowdata.zone_id,\n      division_id: props.rowdata.division_id,\n      cluster_id: props.rowdata.cluster_id,\n      latitude: props.rowdata.latitude,\n      longitude: props.rowdata.longitude,\n      state_id: props.rowdata.state_id,\n      district_id: props.rowdata.district_id,\n      city_id: props.rowdata.city_id,\n      area_id: props.rowdata.area_id,\n      pincode: props.rowdata.pincode,\n      address: props.rowdata.address,\n      mobile: props.rowdata.mobile,\n    });\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={916}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"userForm\"\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row>\n          <Col md={6} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Counter Name :\"\n              name=\"name\"\n              rules={[\n                { required: true, message: \"Please input your Counter Name!\" },\n                // {\n                //   pattern: new RegExp(/^[a-zA-Z][a-zA-Z\\s]+$/i),\n                //   message: \"field does not accept numbers\",\n                // },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Countername\"\n                name=\"name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Countername\"\n                value={props.rowdata?.name}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={6} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Counter Type\"\n              name=\"type\"\n              rules={[\n                { required: true, message: \"Please select your Counter Type!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Counter Type\"\n                optionFilterProp=\"type\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"type\",\n                    value: value,\n                  });\n                }}\n                value={props.rowdata.type == null ? \"\" : props.rowdata?.type}\n              >\n                {countertypeList.map((type, index) => {\n                  return (\n                    <Option key={index} value={type.id}>\n                      {type.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={6} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Zone Name:\"\n              name=\"zone_id\"\n              rules={[\n                { required: true, message: \"Please input your Zone Name!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select  Zone\"\n                optionFilterProp=\"zone\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.getMiniDivisions({ zone: value });\n                  props.InputChangeValue({\n                    key: \"zone_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.zone_id == null ? \"\" : props.rowdata?.zone_id\n                }\n              >\n                {props.miniZonesList.map((zone, index) => {\n                  return (\n                    <Option key={index} value={zone.id}>\n                      {zone.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={6} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Mobile Number :\"\n              name=\"mobile\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Mobile Number!\",\n                },\n                {\n                  min: 10,\n                  message: \"Not a valid Mobile Number!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"mobile\"\n                name=\"mobile\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Mobile Number\"\n                value={props.rowdata.mobile}\n                maxLength={10}\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n          \n\n          <Col md={6} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Division Name:\"\n              name=\"division_id\"\n              rules={[\n                { required: true, message: \"Please input your Division Name!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select  Division\"\n                optionFilterProp=\"division\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.getMiniClusters({ division: value });\n                  props.InputChangeValue({\n                    key: \"division_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.division_id == null\n                    ? \"\"\n                    : props.rowdata?.division_id\n                }\n              >\n                {props.miniDivisionsList.map((division, index) => {\n                  return (\n                    <Option key={index} value={division.id}>\n                      {division.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={6} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Cluster Name:\"\n              name=\"cluster_id\"\n              rules={[\n                { required: true, message: \"Please input your Cluster Name!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select Cluster\"\n                optionFilterProp=\"cluster\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"cluster_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.cluster_id == null\n                    ? \"\"\n                    : props.rowdata?.cluster_id\n                }\n              >\n                {props.miniClustersList.map((cluster, index) => {\n                  return (\n                    <Option key={index} value={cluster.id}>\n                      {cluster.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={6} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Longitude :\"\n              name=\"longitude\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Longitude Number!\",\n                },\n                {\n                  pattern: new RegExp(\n                    /^-?([1]?[1-7][1-9]|[1]?[1-8][0]|[1-9]?[0-9])\\.{1}\\d{1,6}$/\n                  ),\n                  message: \"Please enter your Longitude Number!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Longitude\"\n                name=\"longitude\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Longitude\"\n                value={props.rowdata.longitude}\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={6} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Latitude :\"\n              name=\"latitude\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Latitude Number!\",\n                },\n                {\n                  pattern: new RegExp(/^-?([1-8]?[1-9]|[1-9]0)\\.{1}\\d{1,6}$/),\n                  message: \"Please input your Latitude Number!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Latitude\"\n                name=\"latitude\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Latitude\"\n                value={props.rowdata.latitude}\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col md={10} xs={24}>\n            <Row>\n              <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n                <Form.Item\n                  label=\"State :\"\n                  name=\"state_id\"\n                  rules={[\n                    { required: true, message: \"Please select your State!\" },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Select State\"\n                    optionFilterProp=\"state\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniDistrict({ state: value });\n                      props.InputChangeValue({\n                        key: \"state_id\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.rowdata.state_id == null\n                        ? \"\"\n                        : props.rowdata?.state_id\n                    }\n                  >\n                    {props.miniStatesList.map((state, index) => {\n                      return (\n                        <Option key={index} value={state.id}>\n                          {state.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col md={12} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n                <Form.Item\n                  label=\"District :\"\n                  name=\"district_id\"\n                  rules={[\n                    { required: true, message: \"Please select your District!\" },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Select  District\"\n                    optionFilterProp=\"district\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniCity({ district: value });\n                      props.InputChangeValue({\n                        key: \"district_id\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.rowdata.district_id == null\n                        ? \"\"\n                        : props.rowdata?.district_id\n                    }\n                  >\n                    {props.miniDistrictList.map((district, index) => {\n                      return (\n                        <Option key={index} value={district.id}>\n                          {district.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col md={14} xs={24}>\n            <Row>\n              <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n                <Form.Item\n                  label=\"City :\"\n                  name=\"city_id\"\n                  rules={[\n                    { required: true, message: \"Please select your City!\" },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Select  City\"\n                    optionFilterProp=\"city\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.getMiniArea({ city: value });\n                      props.InputChangeValue({\n                        key: \"city_id\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.rowdata.city_id == null\n                        ? \"\"\n                        : props.rowdata?.city_id\n                    }\n                  >\n                    {props.miniCityList.map((city, index) => {\n                      return (\n                        <Option key={index} value={city.id}>\n                          {city.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n                <Form.Item\n                  label=\"Area :\"\n                  name=\"area_id\"\n                  rules={[\n                    { required: true, message: \"Please select your Area!\" },\n                  ]}\n                  hasFeedback\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"Select  Area\"\n                    optionFilterProp=\"area\"\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onChange={(value) => {\n                      props.InputChangeValue({\n                        key: \"area_id\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.rowdata.area_id == null\n                        ? \"\"\n                        : props.rowdata?.area_id\n                    }\n                  >\n                    {props.miniAreaList.map((area, index) => {\n                      return (\n                        <Option key={index} value={area.id}>\n                          {area.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col md={8} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n                <Form.Item\n                  label=\"Pincode :\"\n                  name=\"pincode\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your pincode!\",\n                    },\n                    {\n                      pattern: new RegExp(/^\\d{6}$/g),\n                      message: \"Please type correct pincode\",\n                    },\n                  ]}\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"Pincode\"\n                    name=\"pincode\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Pincode\"\n                    maxLength={6}\n                    value={\n                      props.rowdata.pincode == null\n                        ? \"\"\n                        : props.rowdata?.pincode\n                    }\n                    onChange={props.InputChangeValue}\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col md={24} xs={24} className=\"hp-pr-sm-0 hp-pr-12\">\n            <Form.Item\n              label=\"Address \"\n              name=\"address\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Address \",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input.TextArea\n                id=\"Address\"\n                name=\"address\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Address\"\n                value={props.rowdata?.address}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n          <Col md={24} xs={24}>\n            <Form.Item\n              label=\"Counter Status\"\n              name=\"is_active\"\n              className=\"hp-m-0\"\n            >\n              <Switch\n                id=\"is_active\"\n                size=\"default\"\n                checkedChildren=\"Active\"\n                unCheckedChildren=\"Inactive\"\n                checked={props.rowdata.is_active}\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"is_active\",\n                    value: value,\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ counters, mini }) {\n  return {\n    rowdata: counters.rowdata,\n    model: counters.model,\n    miniZonesList: mini.miniZonesList,\n    miniStatesList: mini.miniStatesList,\n    miniDistrictList: mini.miniDistrictList,\n    miniDivisionsList: mini.miniDivisionsList,\n    miniClustersList: mini.miniClustersList,\n    miniAreaList: mini.miniAreaList,\n    miniCityList: mini.miniCityList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  counterAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniDistrict,\n  getMiniZones,\n  getMiniDivisions,\n  getMiniClusters,\n  getMiniStates,\n  getMiniCity,\n  getMiniArea,\n})(AddCounter);\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select, Switch } from \"antd\";\nimport {\n  versionsAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Versions/versionsSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniPriority,\n  getMiniModels,\n  getMiniVehicletypes,\n} from \"../../../../store/mini/miniSlice\";\nimport {\n  getVersionfeatures,\n  SetVersionfeaturesParams,\n} from \"../../../../store/Masters/Versionfeatures​/versionfeatures​Slice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddVersions = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMiniBrands();\n    props.getMiniVehicletypes();\n    props.getVersionfeatures({ ...props.versionfeaturesParams });\n    props.getMiniPriority();\n  }, []);\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  const fuelTypeList = [\n    { id: 1, name: \"Petrol\" },\n    { id: 2, name: \"Diesel\" },\n    { id: 3, name: \"Electric\" },\n  ];\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletype_id: props.rowdata.vehicletype_id,\n      versionfeature_ids: props.rowdata.versionfeature_ids,\n      priority_id: props.rowdata.priority_id,\n      fueltype: props.rowdata.fueltype,\n      enginedisplacement: props.rowdata.enginedisplacement,\n      firstparty: props.rowdata.firstparty,\n      secondparty: props.rowdata.secondparty,\n      thirdparty: props.rowdata.thirdparty,\n      defaulter: props.rowdata?.defaulter,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.versionsAdd(obj);\n    }\n  };\n\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      brand_id:\n        props.rowdata?.brand_id == null\n          ? props.rowdata.brand.id\n          : props.rowdata?.brand_id,\n      brandfamily_id:\n        props.rowdata?.brandfamily_id == null\n          ? props.rowdata.brandfamily.id\n          : props.rowdata?.brandfamily_id,\n      model_id:\n        props.rowdata?.model_id == null\n          ? props.rowdata.model.id\n          : props.rowdata?.model_id,\n      vehicletype_id:\n        props.rowdata?.vehicletype_id == null\n          ? props.rowdata.vehicletype.id\n          : props.rowdata?.vehicletype_id,\n\n      versionfeature_ids:\n        props.rowdata?.versionfeature_ids == null\n          ? props.rowdata.versionfeature.id\n          : props.rowdata?.versionfeature_ids,\n\n      priority_id:\n        props.rowdata?.priority_id == null\n          ? props.rowdata.priority.id\n          : props.rowdata?.priority_id,\n      fueltype: props.rowdata?.fueltype,\n      enginedisplacement: props.rowdata?.enginedisplacement,\n      firstparty: props.rowdata?.firstparty,\n      secondparty: props.rowdata?.secondparty,\n      thirdparty: props.rowdata?.thirdparty,\n      defaulter: props.rowdata?.defaulter,\n    };\n    props.versionsAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Version\n    </h5>\n  );\n\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.rowdata.name,\n      brand_id: props.rowdata.brand_id,\n      brandfamily_id: props.rowdata.brandfamily_id,\n      model_id: props.rowdata.model_id,\n      vehicletype_id: props.rowdata.vehicletype_id,\n      versionfeature_ids: props.rowdata.versionfeature_ids,\n      priority_id: props.rowdata.priority_id,\n      fueltype: props.rowdata.fueltype,\n      enginedisplacement: props.rowdata.enginedisplacement,\n      firstparty: props.rowdata.firstparty,\n      secondparty: props.rowdata.secondparty,\n      thirdparty: props.rowdata.thirdparty,\n      defaulter: props.rowdata.defaulter,\n    });\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={716}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"userForm\"\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row gutter={[12, 0]}>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Version Name:\"\n              name=\"name\"\n              rules={[\n                { required: true, message: \"Please input your Version Name!\" },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Version\"\n                name=\"name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Ex: Activa 5G 125cc\"\n                value={props.rowdata?.name}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Brand :\"\n              name=\"brand_id\"\n              rules={[{ required: true, message: \"Please select your Brand!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select  Brand\"\n                optionFilterProp=\"Brand\"\n                onChange={(value) => {\n                  props.getMiniBrandFamily({ brand: value });\n                  props.InputChangeValue({\n                    key: \"brand_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brand_id == null ? \"\" : props.rowdata?.brand_id\n                }\n              >\n                {props.miniBrandsList.map((brand, index) => {\n                  return (\n                    <Option key={index} value={brand.id}>\n                      {brand.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Brand Family :\"\n              name=\"brandfamily_id\"\n              rules={[\n                { required: true, message: \"Please select your Brand Family!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Brand Family\"\n                optionFilterProp=\"brand Family\"\n                onChange={(value) => {\n                  props.getMiniModels({ brandfamily: value });\n                  props.InputChangeValue({\n                    key: \"brandfamily_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.brandfamily_id == null\n                    ? \"\"\n                    : props.rowdata?.brandfamily_id\n                }\n              >\n                {props.miniBrandFamilyList.map((brandfamily, index) => {\n                  return (\n                    <Option key={index} value={brandfamily.id}>\n                      {brandfamily.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Model :\"\n              name=\"model_id\"\n              rules={[{ required: true, message: \"Please select your Model!\" }]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Model\"\n                optionFilterProp=\"Model\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"model_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.model_id == null ? \"\" : props.rowdata?.model_id\n                }\n              >\n                {props.miniModelsList.map((model, index) => {\n                  return (\n                    <Option key={index} value={model.id}>\n                      {model.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Vehicle Type :\"\n              name=\"vehicletype_id\"\n              rules={[\n                { required: true, message: \"Please select your Vehicle Type!\" },\n              ]}\n              hasFeedback>\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Vehicle Type\"\n                optionFilterProp=\"vehicletype\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"vehicletype_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.vehicletype_id == null\n                    ? \"\"\n                    : props.rowdata?.vehicletype_id\n                }\n              >\n                {props.miniVehicletypesList.map((vehicletype, index) => {\n                  return (\n                    <Option key={index} value={vehicletype.id}>\n                      {vehicletype.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Version Features\"\n              name=\"versionfeature_ids\"\n              // rules={[\n              //   {\n              //     required: true,\n              //     message: \"Please select your Version Features\",\n              //   },\n              // ]}\n              hasFeedback\n            >\n              <Select\n                mode=\"multiple\"\n                showSearch\n                placeholder=\"Select Version Features\"\n                maxTagCount=\"responsive\"\n                optionFilterProp=\"versionfeature_ids\"\n                onSearch={(value) => {\n                  props.SetVersionfeaturesParams({\n                    ...props.versionfeaturesParams,\n                    page: 1,\n                    search: value,\n                  });\n                  props.getVersionfeatures({\n                    ...props.versionfeaturesParams,\n                    page: 1,\n                    search: value,\n                  });\n                }}\n                defaultActiveFirstOption={false}\n                showArrow={true}\n                filterOption={false}\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"versionfeature_ids\",\n                    value: value,\n                  });\n                }}\n                onPopupScroll={() => {\n                  if (\n                    props.versionfeaturesParams.page <\n                    props.versionfeaturesParams.no_of_pages\n                  ) {\n                    props.SetVersionfeaturesParams({\n                      ...props.versionfeaturesParams,\n                      page: props.versionfeaturesParams.page + 1,\n                    });\n                    props.getVersionfeatures({\n                      ...props.versionfeaturesParams,\n                      page: props.versionfeaturesParams.page + 1,\n                    });\n                  }\n                }}\n                value={\n                  props.rowdata.versionfeature_ids == null\n                    ? \"\"\n                    : props.rowdata?.versionfeature_ids\n                }\n              >\n                {props.versionfeatureslist.map((versionfeature, index) => {\n                  return (\n                    <Option value={versionfeature.id}>\n                      {versionfeature.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Priority :\"\n              name=\"priority_id\"\n              rules={[\n                { required: true, message: \"Please select your Priority!\" },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Priority\"\n                optionFilterProp=\"priority\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"priority_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.priority_id == null\n                    ? \"\"\n                    : props.rowdata?.priority_id\n                }\n              >\n                {props.miniPriority.map((priority, index) => {\n                  return (\n                    <Option key={index} value={priority.id}>\n                      {priority.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Fuel Type\"\n              name=\"fueltype\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Fuel Type!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select Fuel Type\"\n                optionFilterProp=\"fueltype\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"fueltype\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.fueltype == null ? \"\" : props.rowdata?.fueltype\n                }\n              >\n                {fuelTypeList.map((fueltype, index) => {\n                  return (\n                    <Option key={index} value={fueltype.id}>\n                      {fueltype.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Engine Displacement :\"\n              name=\"enginedisplacement\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Engine Displacement!\",\n                },\n              ]}\n              getValueProps={() => { }}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"enginedisplacement\"\n                name=\"enginedisplacement\"\n                maxLength={4}\n                style={{ width: \"100%\" }}\n                placeholder=\"Engine Displacement\"\n                value={\n                  props.rowdata?.enginedisplacement == null\n                    ? \"\"\n                    : props.rowdata?.enginedisplacement\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"First Party :\"\n              name=\"firstparty\"\n              // rules={[\n              //   {\n              //     required: true,\n              //     message: \"Please input your First Party!\",\n              //   },\n              // ]}\n              getValueProps={() => { }}\n              hasFeedback>\n              <NumericInput\n                id=\"firstparty\"\n                name=\"firstparty\"\n                maxLength={6}\n                style={{ width: \"100%\" }}\n                placeholder=\"First Party\"\n                value={\n                  props.rowdata?.firstparty == null\n                    ? \"\"\n                    : props.rowdata?.firstparty\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Second Party :\"\n              name=\"secondparty\"\n              // rules={[\n              //   {\n              //     required: true,\n              //     message: \"Please input your Second Party!\",\n              //   },\n              // ]}\n              getValueProps={() => { }}\n              hasFeedback>\n              <NumericInput\n                id=\"secondparty\"\n                maxLength={6}\n                name=\"secondparty\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Second Party\"\n                value={\n                  props.rowdata?.secondparty == null\n                    ? \"\"\n                    : props.rowdata?.secondparty\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item label=\"Third Party :\"\n              name=\"thirdparty\"\n              // rules={[\n              //   {\n              //     required: true,\n              //     message: \"Please input your Third Party!\",\n              //   },\n              // ]}\n              getValueProps={() => { }}\n              hasFeedback>\n              <NumericInput\n                id=\"thirdparty\"\n                maxLength={6}\n                name=\"thirdparty\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Third Party\"\n                value={\n                  props.rowdata?.thirdparty == null\n                    ? \"\"\n                    : props.rowdata?.thirdparty\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Default\"\n              name=\"defaulter\">\n              {\" \"}\n              <Switch\n                checkedChildren=\"On\"\n                unCheckedChildren=\"Off\"\n                // defaultChecked finalapproval\n                className=\"hp-mb-16\"\n                value={props.rowdata.defaulter}\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"defaulter\",\n                    value: value,\n                  });\n                }}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ versions, mini, versionfeatures }) {\n  return {\n    rowdata: versions.rowdata,\n    model: versions.model,\n    miniBrandsList: mini.miniBrandsList,\n    miniBrandFamilyList: mini.miniBrandFamilyList,\n    miniPriority: mini.miniPriority,\n    miniModelsList: mini.miniModelsList,\n    miniVehicletypesList: mini.miniVehicletypesList,\n\n    versionfeaturesParams: versionfeatures.versionfeaturesParams,\n    versionfeatureslist: versionfeatures.versionfeatureslist,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  versionsAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniBrands,\n  getMiniBrandFamily,\n  getMiniPriority,\n  getMiniModels,\n  getMiniVehicletypes,\n  getVersionfeatures,\n  SetVersionfeaturesParams,\n})(AddVersions);\n","import { Fragment, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  departmentAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Departments/departmentSlice\";\n\n\nconst AddDepartment = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n\n\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.departmentAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const departmentToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.departmentAdd(departmentToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Department\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Department Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Department Name!\" },\n            {\n              pattern: new RegExp(\n                /^[a-zA-Z][a-zA-Z\\s]+$/i\n              ),\n              message: \"field does not accept numbers\",\n            }\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Departments\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Department Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n          />\n        </Form.Item>\n\n\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ departments }) {\n  return {\n    selectedData: departments.rowdata,\n    model: departments.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  departmentAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddDepartment);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\nimport {\n  tenuresAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Tenures/tenuresSlice\";\nimport { getMiniPercentageInterests } from \"../../../../store/mini/miniSlice\";\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\n\nconst AddTenures = (props) => {\n  const [form] = Form.useForm();\n\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  useEffect(() => {\n    props.getMiniPercentageInterests();\n  }, []);\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n      sequence: props.selectedData?.sequence,\n      interestfixed_id: props.selectedData?.interestfixed_id,\n      interestchoice_ids: props.selectedData?.interestchoice_ids\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.tenuresAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n      sequence: props.selectedData?.sequence,\n      interestfixed_id: props.selectedData?.interestfixed_id,\n      interestchoice_ids: props.selectedData?.interestchoice_ids\n    };\n    props.tenuresAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Tenure\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name,\n      sequence: props.selectedData.sequence,\n      interestfixed_id: props.selectedData.interestfixed_id,\n      interestchoice_ids: props.selectedData.interestchoice_ids\n    });\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={616}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row gutter={[12, 0]}>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Tenure:\"\n              name=\"name\"\n              rules={[{ required: true, message: \"Please input your Tenure!\" }]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"name\"\n                name=\"name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Tenure\"\n                value={\n                  props.selectedData?.name == null\n                    ? \"\"\n                    : props.selectedData?.name\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Sequence :\"\n              name=\"sequence\"\n              rules={[\n                { required: true, message: \"Please input your Sequence!\" },\n              ]}\n              getValueProps={() => {}}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"sequence\"\n                name=\"sequence\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Sequence\"\n                value={\n                  props.selectedData?.sequence == null\n                    ? \"\"\n                    : props.selectedData?.sequence\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Fixed Interest :\"\n              name=\"interestfixed_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Fixed Interest!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Fixed Interest\"\n                optionFilterProp=\"Interest\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"interestfixed_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.selectedData.interestfixed_id == null\n                    ? \"\"\n                    : props.selectedData?.interestfixed_id\n                }\n              >\n                {props.miniPercentageInterestsList.map(\n                  (interestfixed, index) => {\n                    return (\n                      <Option key={index} value={interestfixed.id}>\n                        {interestfixed.name}\n                      </Option>\n                    );\n                  }\n                )}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Interest Choice :\"\n              name=\"interestchoice_ids\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Interest Choice!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                mode=\"multiple\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                placeholder=\"Select Interest Choice\"\n                optionFilterProp=\"Interest\"\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"interestchoice_ids\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.selectedData.interestchoice_ids == null\n                    ? \"\"\n                    : props.selectedData?.interestchoice_ids\n                }\n              >\n                {props.miniPercentageInterestsList.map(\n                  (interestchoice, index) => {\n                    return (\n                      <Option key={index} value={interestchoice.id}>\n                        {interestchoice.name}\n                      </Option>\n                    );\n                  }\n                )}\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ tenures, mini }) {\n  return {\n    selectedData: tenures.rowdata,\n    model: tenures.model,\n    miniPercentageInterestsList: mini.miniPercentageInterestsList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  tenuresAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMiniPercentageInterests,\n})(AddTenures);\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\nimport {\n  repairTypesAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/RepairTypes/repairTypesSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddRepairTypes = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.selectedData?.name,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.repairTypesAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const countryToUpdate = {\n      id: props.selectedData.id,\n      name: props.selectedData?.name,\n    };\n    props.repairTypesAdd(countryToUpdate);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (props.selectedData.id == null || props.selectedData.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.selectedData.id == null || props.selectedData.id == 0\n        ? \"Add\"\n        : \"Update\"}{\" \"}\n      Repair Types\n    </h5>\n  );\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: props.selectedData.name\n    })\n  }, [props.selectedData]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.selectedData.id == null) {\n            handleAdd();\n          }\n          else {\n            handleUpdate();\n          }\n        }}>\n        <Form.Item label=\"Repair Type Name :\"\n          name=\"name\"\n          rules={[\n            { required: true, message: \"Please input your Repair Type Name!\" },\n          ]}\n          hasFeedback>\n          <Input\n            id=\"Repair\"\n            name=\"name\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Repair Type Name\"\n            value={props.selectedData?.name}\n            onChange={ChangeHandeler}\n            />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ repairTypes }) {\n  return {\n    selectedData: repairTypes.rowdata,\n    model: repairTypes.model,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  repairTypesAdd,\n  isModelVisible,\n  InputChangeValue,\n})(AddRepairTypes);\n","import React, { useState, useEffect } from \"react\";\n// import { Route, Switch } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport EmptyImage from \"../../../assets/images/app/empty-list.svg\";\nimport { Row, Col, Card, Drawer, Button, Dropdown, Menu, Spin, Input, Empty } from \"antd\";\nimport PageTitle from \"../../../layout/components/content/page-title\";\nimport \"./Masters.less\";\n\nimport { Link } from \"react-router-dom\";\nimport { getMasterMenuItems, menuItemSearch } from \"../../../store/system/systemSlice\";\nimport AddCountry from \"./country/addCountry\";\nimport AddState from \"./state/addState\";\nimport AddModels from \"./models/addModels\";\nimport AddLocation from \"./Locations/addLocations\";\nimport AddDistrict from \"./district/addDistrict\";\nimport AddCity from \"./city/addCity\";\nimport AddArea from \"./area/addArea\";\nimport AddZones from \"./zones/addZones\";\nimport AddFirm from \"./firm/addFirm\";\nimport AddBrand from \"./brands/addBrand\";\nimport Addoccupations from \"./occupations/addoccupations\";\nimport AddEmissionnorms from \"./emissionnorms/addEmissionnorms\";\nimport AddPerson from \"./person/addPerson\";\nimport AddColors from \"./colors/addColors\";\nimport AddBanks from \"./banks/addBanks\";\nimport AddPriority from \"./priority/addPriority\";\nimport AddCompanybanks from \"./companybanks/addCompanybanks\";\nimport AddDivisions from \"./divisions/addDivisions\";\nimport AddClusters from \"./clusters/addClusters\";\nimport AddMechanics from \"./mechanics/addMechanics\";\nimport AddBrandfamily from \"./brandfamily/addBrandfamily\";\nimport AddDealer from \"./dealer/addDealer\";\nimport AddAddressproof from \"./addressproof/addAddressproof\";\nimport AddEmidates from \"./emidates​/addEmidates​\";\nimport AddInsurance from \"./insurance/addInsurance\";\nimport AddLeavereasons from \"./leavereasons/addLeavereasons\";\nimport AddVersionfeatures from \"./versionfeatures/addVersionfeatures​\";\nimport AddRejectreasons from \"./rejectreasons/addRejectreasons\";\nimport AddVehicletypes from \"./vehicletypes/addVehicletypes​\";\nimport AddShowrooms from \"./showrooms/addShowrooms​\";\nimport AddPercentageinterests from \"./percentageinterests/addPercentageinterests\";\nimport AddFinanciers from \"./financiers/addFinanciers\";\nimport AddCounter from \"./counters/addCounter\";\nimport AddVersions from \"./versions/addVersions\";\nimport AddVehicles from \"./vehicles/addVehicles\";\nimport AddDepartment from \"./departments/addDepartment\";\nimport AddTenures from \"./tenures/addTenures\";\nimport AddRepairTypes from \"./repairTypes/addRepairTypes\";\n\nimport * as Country from \"../../../store/Masters/Country/countrySlice\";\nimport * as State from \"../../../store/Masters/State/stateSlice\";\nimport * as Models from \"../../../store/Masters/Models/modelsSlice\";\n// import * as Locations from \"../../../store/Masters/Locations/locationsSlice\";\nimport * as District from \"../../../store/Masters/District/districtSlice\";\nimport * as City from \"../../../store/Masters/City/citySlice\";\nimport * as Area from \"../../../store/Masters/Area/areaSlice\";\nimport * as Zone from \"../../../store/Masters/Zones/zonesSlice\";\nimport * as Firm from \"../../../store/Masters/Firm/firmSlice\";\nimport * as Brand from \"../../../store/Masters/Brand/brandSlice\";\nimport * as Emissionnorms from \"../../../store/Masters/Emissionnorms/emissionnormsSlice\";\nimport * as Occupations from \"../../../store/Masters/Occupations/occupationsSlice\";\nimport * as Person from \"../../../store/Masters/Person/personSlice\";\nimport * as Colors from \"../../../store/Masters/Colors/colorsSlice\";\nimport * as Banks from \"../../../store/Masters/Banks/banksSlice\";\nimport * as Priority from \"../../../store/Masters/Priority/prioritySlice\";\nimport * as Companybanks from \"../../../store/Masters/Companybanks/companybanksSlice\";\nimport * as Divisions from \"../../../store/Masters/Divisions/divisionsSlice\";\nimport * as Clusters from \"../../../store/Masters/Clusters/clustersSlice\";\nimport * as Mechanics from \"../../../store/Masters/Mechanics/mechanicsSlice\";\nimport * as Brandfamily from \"../../../store/Masters/Brandfamily/brandfamilySlice\";\nimport * as Dealer from \"../../../store/Masters/Dealers/dealersSlice\";\nimport * as Addressproof from \"../../../store/Masters/Addressproof/addressproofSlice\";\nimport * as Emidates from \"../../../store/Masters/Emidates​/emidates​Slice\";\nimport * as Insurance from \"../../../store/Masters/Insurance/insuranceSlice\";\nimport * as Leavereasons from \"../../../store/Masters/Leavereasons/leavereasonsSlice\";\nimport * as Versionfeatures from \"../../../store/Masters/Versionfeatures​/versionfeatures​Slice\";\nimport * as Rejectreasons from \"../../../store/Masters/Rejectreasons/rejectreasonsSlice\";\nimport * as Counter from \"../../../store/Masters/Counters/counterSlice\";\nimport * as Departments from \"../../../store/Masters/Departments/departmentSlice\";\nimport * as Vehicletypes from \"../../../store/Masters/Vehicletypes/vehicletypesSlice\";\nimport * as Showrooms from \"../../../store/Masters/Showrooms/showroomsSlice\";\nimport * as Percentageinterests from \"../../../store/Masters/Percentageinterests/percentageinterestsSlice\";\nimport * as Financiers from \"../../../store/Masters/Financiers/financiersSlice\";\nimport * as Versions from \"../../../store/Masters/Versions/versionsSlice\";\nimport * as Vehicles from \"../../../store/Masters/Vehicles/vehiclesSlice\";\nimport * as Tenures from \"../../../store/Masters/Tenures/tenuresSlice\";\nimport * as RepairTypes from \"../../../store/Masters/RepairTypes/repairTypesSlice\";\n\n\n\nfunction Masters(props) {\n  const { Search } = Input;\n  useEffect(() => {\n    props.getMasterMenuItems();\n  }, []);\n  const [reportData, setReportData] = useState({});\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  \n\n  const handleSearch = (searchWord) => {\n    setWordEntered(searchWord);\n    const newFilter = props.masterMenuItemsList?.menuitems.filter((menu) => {\n      return menu.title.toLowerCase().includes(searchWord.toLowerCase());\n    });\n    if (searchWord === \"\") {\n      props.menuItemSearch(props.masterMenuItemsList?.menuitems);\n    } else {\n      props.menuItemSearch(newFilter);\n    }\n   \n  };\n\n  return (\n    <Row gutter={[24, 24]} className=\"hp-mt-32\">\n      <PageTitle pageTitle=\"Masters Dashboard\" />\n      <Col span={24}>\n        <div className=\"Master-dashboard\">\n          <div className=\"Master-dashboard-menu\">\n            <Col span={24} md={12}>\n              <Search\n                className=\"hp-mb-12\"\n                placeholder=\"Search...\"\n                allowClear\n                onChange={(e) => {\n                  handleSearch(e.target.value);\n                }}\n              />\n            </Col>\n            <Row>\n              {props.filterData.length != 0 ? (\n                <>\n                  {props.filterData\n                    // .sort((a, b) => (a.sequence > b.sequence ? 1 : -1))\n                    // .sort((a, b) => (a.sequence > b.sequence ? 1 : -1))\n                    .map((report, index) => (\n                      <React.Fragment key={index}>\n                        <Col xl={8} xxl={6} md={12} span={24}>\n                          <div className=\"Master-dashboard-item hp-m-12 \">\n                            <div className=\"title-box hp-d-inline-block \">\n                              <span className=\"mt-4\">{report.title}</span>\n                            </div>\n\n                            <div className=\"view-box hp-d-inline-block hp-float-right\">\n                              <Link\n                                to=\"#\"\n                                onClick={() => {\n                                  setReportData(report);\n                                  props[report.link](true);\n                                }}\n                                className=\"waves-effect hp-ml-24 hp-pt-12\"\n                              >\n                                <i className=\"ri-add-fill\"></i>\n                              </Link>\n                              <Link\n                                to={report.link}\n                                className=\"waves-effect ml-2 hp-pt-12\"\n                              >\n                                <i className=\"ri-menu-fill\"></i>\n                              </Link>\n                            </div>\n                          </div>\n                        </Col>\n                      </React.Fragment>\n                    ))}\n                </>\n              ) : (\n                <>\n                  <Col span={24}>\n                    <Empty\n                      className=\"hp-mb-32\"\n                      image={EmptyImage}\n                      imageStyle={{\n                        height: 130,\n                      }}\n                      description={<h5>No Data Found</h5>}\n                    ></Empty>\n                  </Col>\n                </>\n              )}\n            </Row>\n          </div>\n          <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n            {reportData.link == \"/Masters/country\" && <AddCountry />}\n            {reportData.link == \"/Masters/state\" && <AddState />}\n            {reportData.link == \"/Masters/models\" && <AddModels />}\n            <AddLocation />\n            {reportData.link == \"/Masters/District\" && <AddDistrict />}\n            {reportData.link == \"/Masters/City\" && <AddCity />}\n            {reportData.link == \"/Masters/Area\" && <AddArea />}\n            {reportData.link == \"/Masters/zone\" && <AddZones />}\n            {reportData.link == \"/Masters/firm\" && <AddFirm />}\n            {reportData.link == \"/Masters/brand\" && <AddBrand />}\n            {reportData.link == \"/Masters/emissionnorms\" && (\n              <AddEmissionnorms />\n            )}\n            {reportData.link == \"/Masters/occupations\" && <Addoccupations />}\n            {reportData.link == \"/Masters/person\" && <AddPerson />}\n            {reportData.link == \"/Masters/colors\" && <AddColors />}\n            {reportData.link == \"/Masters/banks\" && <AddBanks />}\n            {reportData.link == \"/Masters/priority\" && <AddPriority />}\n            {reportData.link == \"/Masters/companybanks\" && <AddCompanybanks />}\n            {reportData.link == \"/Masters/divisions\" && <AddDivisions />}\n            {reportData.link == \"/Masters/clusters\" && <AddClusters />}\n            {reportData.link == \"/Masters/mechanics\" && <AddMechanics />}\n            {reportData.link == \"/Masters/brandfamily\" && <AddBrandfamily />}\n            {reportData.link == \"/Masters/dealers\" && <AddDealer />}\n            {reportData.link == \"/Masters/addressproof\" && <AddAddressproof />}\n            {reportData.link == \"/Masters/emidates\" && <AddEmidates />}\n            {reportData.link == \"/Masters/insurance\" && <AddInsurance />}\n            {reportData.link == \"/Masters/leavereasons\" && <AddLeavereasons />}\n            {reportData.link == \"/Masters/versionfeatures\" && (\n              <AddVersionfeatures />\n            )}\n            {reportData.link == \"/Masters/rejectreasons\" && (\n              <AddRejectreasons />\n            )}\n            {reportData.link == \"/Masters/vehicletypes\" && <AddVehicletypes />}\n            {reportData.link == \"/Masters/showrooms\" && <AddShowrooms />}\n            {reportData.link == \"/Masters/percentageinterests\" && (\n              <AddPercentageinterests />\n            )}\n            {reportData.link == \"/Masters/financiers\" && <AddFinanciers />}\n            {reportData.link == \"/Masters/Counters\" && <AddCounter />}\n            {reportData.link == \"/Masters/versions\" && <AddVersions />}\n            {reportData.link == \"/Masters/vehicles\" && <AddVehicles />}\n            {reportData.link == \"/Masters/Departments\" && <AddDepartment />}\n            {reportData.link == \"Masters/tenures/\" && <AddTenures />}\n            {reportData.link == \"/Masters/Repair-Types\" && <AddRepairTypes />}\n          </Spin>\n        </div>\n      </Col>\n    </Row>\n  );\n}\nfunction mapStatetoProps({ state, system }) {\n  return {\n    masterMenuItemsList: system.masterMenuItemsList,\n    loading: system.loading,\n    filterData: system.filterData\n  };\n}\n\nexport default withRouter(\n  connect(mapStatetoProps, {\n    getMasterMenuItems,\n    menuItemSearch,\n    \"/Masters/country\": Country.isModelVisible,\n    \"/Masters/state\": State.isModelVisible,\n    \"/Masters/models\": Models.isModelVisible,\n    \"/Masters/District\": District.isModelVisible,\n    \"/Masters/City\": City.isModelVisible,\n    \"/Masters/Area\": Area.isModelVisible,\n    \"/Masters/zone\": Zone.isModelVisible,\n    \"/Masters/firm\": Firm.isModelVisible,\n    \"/Masters/brand\": Brand.isModelVisible,\n    \"/Masters/emissionnorms\": Emissionnorms.isModelVisible,\n    \"/Masters/occupations\": Occupations.isModelVisible,\n    \"/Masters/person\": Person.isModelVisible,\n    \"/Masters/colors\": Colors.isModelVisible,\n    \"/Masters/banks\": Banks.isModelVisible,\n    \"/Masters/priority\": Priority.isModelVisible,\n    \"/Masters/companybanks\": Companybanks.isModelVisible,\n    \"/Masters/divisions\": Divisions.isModelVisible,\n    \"/Masters/clusters\": Clusters.isModelVisible,\n    \"/Masters/mechanics\": Mechanics.isModelVisible,\n    \"/Masters/brandfamily\": Brandfamily.isModelVisible,\n    \"/Masters/dealers\": Dealer.isModelVisible,\n    \"/Masters/addressproof\": Addressproof.isModelVisible,\n    \"/Masters/emidates\": Emidates.isModelVisible,\n    \"/Masters/insurance\": Insurance.isModelVisible,\n    \"/Masters/leavereasons\": Leavereasons.isModelVisible,\n    \"/Masters/versionfeatures\": Versionfeatures.isModelVisible,\n    \"/Masters/rejectreasons\": Rejectreasons.isModelVisible,\n    \"/Masters/vehicletypes\": Vehicletypes.isModelVisible,\n    \"/Masters/showrooms\": Showrooms.isModelVisible,\n    \"/Masters/percentageinterests\": Percentageinterests.isModelVisible,\n    \"/Masters/financiers\": Financiers.isModelVisible,\n    \"/Masters/Counters\": Counter.isModelVisible,\n    \"/Masters/versions\": Versions.isModelVisible,\n    \"/Masters/vehicles\": Vehicles.isModelVisible,\n    \"/Masters/Departments\": Departments.isModelVisible,\n    \"Masters/tenures/\": Tenures.isModelVisible,\n    \"/Masters/Repair-Types\": RepairTypes.isModelVisible,\n  })(Masters)\n);\n"],"sourceRoot":""}