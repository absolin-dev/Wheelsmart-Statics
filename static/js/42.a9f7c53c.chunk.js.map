{"version":3,"sources":["layout/components/content/master-page-title/index.jsx","view/components/data-entry/inputs/numberInput.jsx","view/pages/MastersDashboard/area/addArea.jsx","view/pages/MastersDashboard/area/Filters/Filter.jsx","view/pages/MastersDashboard/area/index.jsx"],"names":["MasterPageTitle","props","history","useHistory","pageTitle","pageText","addModelTile","goBack","setIsModalVisible","span","className","to","onClick","size","type","block","icon","isMobile","NumericInput","value","onChange","onBlur","e","inputValue","target","test","key","name","valueTemp","charAt","length","slice","replace","connect","area","mini","rowdata","model","miniCountryList","miniStatesList","miniDistrictList","miniCityList","areaAdd","isModelVisible","InputChangeValue","getMinicountry","getMiniStates","getMiniDistrict","getMiniCity","Form","useForm","form","handleResetInputValues","useEffect","FooterAddOrUpdate","id","submit","FooterCancel","ghost","modalTitle","setFieldsValue","country_id","state_id","district_id","city_id","pincode","visible","title","onCancel","resetFields","footer","justify","centered","closeIcon","width","layout","autoComplete","onFinish","obj","handleAdd","state","country","district","city","handleUpdate","gutter","xs","xl","md","Item","label","rules","required","message","hasFeedback","showSearch","placeholder","optionFilterProp","map","index","Option","filterOption","input","option","children","toLowerCase","includes","onSearch","console","log","style","pattern","RegExp","getValueProps","minLength","maxLength","date","Date","getFullYear","getMonth","drawer","areaParams","isDrawerVisible","SetAreaParams","FilterInputChangeValue","getAreas","getMiniStatesClearData","getMiniDistrictClearData","getMiniCityClearData","getMinicountryClearData","disableDateRanges","range","startDate","endDate","current","startCheck","endCheck","moment","format","start_date","end_date","onClose","placement","bodyStyle","paddingBottom","initialValues","remember","page","search","page_size","add","picker","disabledDate","disabled","htmlType","system","areaslist","noofpages","listCount","loading","userAccessList","areaEdit","areaDelete","columnClass","columns","dataIndex","filterSearch","render","row","filterMode","record","indexOf","cursor","color","onConfirm","okText","cancelText","Search","Input","data","cityname","districtname","statename","countryname","isModalVisible","sm","lg","xxl","allowClear","val","FilterOutlined","tip","spinning","delay","dataSource","scroll","x","pagination","pageSize","total","showTotal","showSizeChanger","Filter"],"mappings":"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","file":"static/js/42.a9f7c53c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Card, Col, Row, Button } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { RiAddCircleFill, RiArrowLeftCircleFill } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function MasterPageTitle(props) {\n  let history = useHistory();\n  const { pageTitle, pageText, addModelTile, goBack, setIsModalVisible } =\n    props;\n\n  return (\n    <Col span={24}>\n      <Card className=\"hp-m-0\">\n        <Row>\n          <Col span={18}>\n            {goBack && (\n              <Link\n                to=\"#\"\n                onClick={() => history.goBack()}\n                className=\"action-icon text-primary  hp-mr-12 hp-d-inline-block\"\n              >\n                <RiArrowLeftCircleFill className=\"remix-icon\" size={24} />\n              </Link>\n            )}\n            <Row className=\"hp-d-inline-block\">\n              <Col span={24}>\n                {pageTitle && <h2 className=\"hp-m-0\">{pageTitle}</h2>}\n              </Col>\n\n              <Col span={24}>\n                {pageText && <p className=\"hp-mb-0 hp-p1-body\">{pageText}</p>}\n              </Col>\n            </Row>\n          </Col>\n          <Col span={6}>\n            {addModelTile && (\n              <Button\n                className=\"hp-float-right\"\n                type=\"primary\"\n                onClick={() => setIsModalVisible(true)}\n                block\n                icon={<RiAddCircleFill className=\"remix-icon\" size={22} />}\n              >\n                {!isMobile && addModelTile}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n}\n","import { Input, Tooltip } from \"antd\";\n\nconst formatNumber = (value) => new Intl.NumberFormat().format(value);\n\nexport default function NumericInput(props) {\n  const { value, onChange, onBlur } = props;\n\n  const handleChange = (e) => {\n    const { value: inputValue } = e.target;\n    const reg = /^-?\\d*(\\.\\d*)?$/;\n\n    if (reg.test(inputValue) || inputValue === \"\" || inputValue === \"-\") {\n      onChange({ key: props.name, value: inputValue });\n    }\n  }; // '.' at the end or only '-' in the input box.\n\n  const handleBlur = () => {\n    let valueTemp = value;\n\n    if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n      valueTemp = value.slice(0, -1);\n    }\n\n    // onChange({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n    onBlur({ key: props.name, value: valueTemp.replace(/0*(\\d+)/, \"$1\") });\n  };\n\n  return (\n    <Input\n      {...props}\n      onChange={handleChange}\n      onBlur={props.onBlur && handleBlur}\n    />\n  );\n}\n","import { Fragment, useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col, Select } from \"antd\";\n\nimport NumericInput from \"../../../components/data-entry/inputs/numberInput\";\nimport {\n  getMinicountry,\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n} from \"../../../../store/mini/miniSlice\";\n\nimport {\n  areaAdd,\n  isModelVisible,\n  InputChangeValue,\n} from \"../../../../store/Masters/Area/areaSlice\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst AddArea = (props) => {\n  const [form] = Form.useForm();\n  function ChangeHandeler(e) {\n    props.InputChangeValue({\n      key: e.target.name,\n      value: e.target.value,\n    });\n  }\n\n  // Adds New Country\n  const handleAdd = () => {\n    const obj = {\n      id: 0,\n      name: props.rowdata?.name,\n      state_id: props.rowdata.state_id,\n      country_id: props.rowdata.country_id,\n      district_id: props.rowdata.district_id,\n      city_id: props.rowdata.city_id,\n      pincode: props.rowdata.pincode,\n    };\n    if (obj.name != null || obj.name == \"\") {\n      props.areaAdd(obj);\n    }\n  };\n  // Updates Country in Store\n  const handleUpdate = () => {\n    const obj = {\n      id: props.rowdata?.id,\n      name: props.rowdata?.name,\n      pincode: props.rowdata?.pincode,\n      state_id:\n        props.rowdata?.state_id == null\n          ? props.rowdata.state.id\n          : props.rowdata?.state_id,\n      country_id:\n        props.rowdata?.country_id == null\n          ? props.rowdata.country.id\n          : props.rowdata?.country_id,\n      district_id:\n        props.rowdata?.district_id == null\n          ? props.rowdata.district.id\n          : props.rowdata?.district_id,\n      city_id:\n        props.rowdata?.city_id == null\n          ? props.rowdata.city.id\n          : props.rowdata?.city_id,\n    };\n    props.areaAdd(obj);\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    props.isModelVisible(false);\n  };\n\n  useEffect(() => {\n    props.getMinicountry();\n  }, []);\n\n  const FooterAddOrUpdate = () => {\n    if (props.rowdata.id == null || props.rowdata.id == 0) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              form.submit();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.submit();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancel = () => {\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            handleResetInputValues();\n          }}\n          type=\"primary\"\n          block\n          ghost\n        >\n          Cancel\n        </Button>\n      </Fragment>\n    );\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {props.rowdata.id == null || props.rowdata.id == 0 ? \"Add\" : \"Update\"}{\" \"}\n      Area\n    </h5>\n  );\n\n  const onSearch = (value) => {\n    console.log(\"search:\", value);\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      country_id: props.rowdata.country_id,\n      state_id: props.rowdata.state_id,\n      district_id: props.rowdata.district_id,\n      city_id: props.rowdata.city_id,\n      name: props.rowdata.name,\n      pincode: props.rowdata.pincode,\n    });\n  }, [props.rowdata]);\n\n  return (\n    <Modal\n      visible={props.model}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        form.resetFields();\n        props.isModelVisible(false);\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancel />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={616}\n    >\n      <Form\n        layout=\"vertical\"\n        form={form}\n        name=\"userForm\"\n        autoComplete=\"off\"\n        onFinish={() => {\n          if (props.rowdata.id == null) {\n            handleAdd();\n          } else {\n            handleUpdate();\n          }\n        }}\n      >\n        <Row gutter={[12, 0]}>\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Country :\"\n              name=\"country_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your Country Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select Country\"\n                optionFilterProp=\"children\"\n                // filterOption={(input, option) =>\n                //   option.children.toLowerCase().includes(input.toLowerCase())\n                // }\n                onChange={(value) => {\n                  props.getMiniStates({ country: value });\n                  props.InputChangeValue({\n                    key: \"country_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.country_id == null\n                    ? \"\"\n                    : props.rowdata?.country_id\n                }\n              >\n                {props.miniCountryList.map((country, index) => {\n                  return (\n                    <Option key={index} value={country.id}>\n                      {country.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"State :\"\n              name=\"state_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your State Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select  State\"\n                optionFilterProp=\"children\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.getMiniDistrict({ state: value });\n                  props.InputChangeValue({\n                    key: \"state_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.state_id == null ? \"\" : props.rowdata?.state_id\n                }\n              >\n                {props.miniStatesList.map((state, index) => {\n                  return (\n                    <Option key={index} value={state.id}>\n                      {state.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"District :\"\n              name=\"district_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your District Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select District\"\n                optionFilterProp=\"children\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onSearch={onSearch}\n                onChange={(value) => {\n                  props.getMiniCity({ district: value });\n                  props.InputChangeValue({\n                    key: \"district_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.district_id == null\n                    ? \"\"\n                    : props.rowdata?.district_id\n                }\n              >\n                {props.miniDistrictList.map((district, index) => {\n                  return (\n                    <Option key={index} value={district.id}>\n                      {district.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"City Name:\"\n              name=\"city_id\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your City Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Select\n                showSearch\n                placeholder=\"Select City\"\n                optionFilterProp=\"city\"\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().includes(input.toLowerCase())\n                }\n                onChange={(value) => {\n                  props.InputChangeValue({\n                    key: \"city_id\",\n                    value: value,\n                  });\n                }}\n                value={\n                  props.rowdata.city_id == null ? \"\" : props.rowdata?.city_id\n                }\n              >\n                {props.miniCityList.map((city, index) => {\n                  return (\n                    <Option key={index} value={city.id}>\n                      {city.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Area Name :\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Area Name!\",\n                },\n              ]}\n              hasFeedback\n            >\n              <Input\n                id=\"Area\"\n                name=\"name\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Area Name\"\n                value={props.rowdata?.name}\n                onChange={ChangeHandeler}\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} xs={24} xl={12} md={12}>\n            <Form.Item\n              label=\"Pincode :\"\n              name=\"pincode\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Pincode!\",\n                },\n                {\n                  pattern: new RegExp(\n                    /^\\d{6}$/g\n                  ),\n                  message: \"please type correct pincode\",\n                },\n              ]}\n              getValueProps={() => { }}\n              hasFeedback\n            >\n              <NumericInput\n                id=\"Pincode\"\n                name=\"pincode\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Pincode\"\n                minLength={6}\n                maxLength={6}\n                value={\n                  props.rowdata?.pincode == null ? \"\" : props.rowdata?.pincode\n                }\n                onChange={props.InputChangeValue}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction mapStateToProps({ area, mini }) {\n  return {\n    rowdata: area.rowdata,\n    model: area.model,\n    miniCountryList: mini.miniCountryList,\n    miniStatesList: mini.miniStatesList,\n    miniDistrictList: mini.miniDistrictList,\n    miniCityList: mini.miniCityList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  areaAdd,\n  isModelVisible,\n  InputChangeValue,\n  getMinicountry,\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n})(AddArea);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Button,\n  Drawer,\n  Space,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport moment, { min } from \"moment\";\n\nimport {\n  isDrawerVisible,\n  FilterInputChangeValue,\n  getAreas,\n  SetAreaParams,\n} from \"../../../../../store/Masters/Area/areaSlice\";\nimport {\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n  getMinicountry,\n  getMiniStatesClearData,\n  getMiniDistrictClearData,\n  getMiniCityClearData,\n  getMinicountryClearData\n} from \"../../../../../store/mini/miniSlice\";\n\nimport NumericInput from \"../../../../components/data-entry/inputs/numberInput\";\n\n\nvar date = new Date(),\n  y = date.getFullYear(),\n  m = date.getMonth();\n\nconst filter = (props) => {\n  const [form] = Form.useForm();\n  useEffect(() => {\n    props.getMinicountry();\n    props.getMiniStates();\n    props.getMiniDistrict();\n    props.getMiniCity();\n  }, []);\n\n\n\n  const onFinish = () => {\n    props.SetAreaParams({\n      ...props.areaParams,\n      start_date: props.areaParams.start_date,\n      end_date: props.areaParams.end_date,\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n\n    props.getAreas({\n      ...props.areaParams,\n      start_date:\n        props.areaParams.start_date != null &&\n        props.areaParams.start_date != \"\"\n          ? moment(props.areaParams.start_date).format(\"YYYY-MM-DD\")\n          : \"\",\n      end_date:\n        props.areaParams.end_date != null && props.areaParams.end_date != \"\"\n          ? moment(props.areaParams.end_date)\n              .add(1, \"days\")\n              .format(\"YYYY-MM-DD\")\n          : \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.isDrawerVisible(false);\n  };\n\n  function clearFilter() {\n    props.SetAreaParams({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getAreas({\n      start_date: \"\",\n      end_date: \"\",\n      page: 1,\n      search: \"\",\n      page_size: 10,\n    });\n    props.getMinicountry();\n    props.getMiniStates();\n    props.getMiniDistrict();\n    props.getMiniCity();\n  }\n  function disableDateRanges(range = { startDate: false, endDate: false }) {\n    const { startDate, endDate } = range;\n    return function disabledDate(current) {\n      let startCheck = true;\n      let endCheck = true;\n      if (startDate) {\n        startCheck =\n          current &&\n          current < moment(startDate + \" 00:00:01\", \"YYYY-MM-DD HH:mm:ss\");\n      }\n      if (endDate) {\n        endCheck =\n          current &&\n          current >\n            moment(\n              moment(endDate).format(\"YYYY-MM-DD\") + \" 23:59:59\",\n              \"YYYY-MM-DD HH:mm:ss\"\n            );\n      }\n\n      return (startDate && startCheck) || (endDate && endCheck);\n    };\n  }\n\n\n  useEffect(() => {\n    form.setFieldsValue({\n      start_date: props.areaParams?.start_date,\n      end_date: props.areaParams?.end_date,\n      country: props.areaParams?.country,\n      state: props.areaParams?.state,\n      district: props.areaParams?.district,\n      city: props.areaParams?.city,\n      pincode: props.areaParams?.pincode,\n    });\n  }, [props.areaParams]);\n\n  function onSearch(val) {\n    props.getAreas({ page: 1, search: val, page_size: 10 });\n  }\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Drawer\n          title=\"Filters\"\n          width={420}\n          className=\"hp-drawer-mobile\"\n          onClose={() => {\n            props.isDrawerVisible(false);\n          }}\n          placement=\"right\"\n          visible={props.drawer}\n          bodyStyle={{\n            paddingBottom: 10,\n          }}\n        >\n          <Form\n            form={form}\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Row gutter={[12, 12]}>\n              <Col span={12}>\n                <Form.Item label=\"From Date\" name=\"start_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: new Date(),\n                    })}\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"start_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                      if (date == null) {\n                        props.FilterInputChangeValue({\n                          key: \"end_date\",\n                          value: \"\",\n                        });\n                      }\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"To Date\" name=\"end_date\">\n                  <DatePicker\n                    style={{ width: \"100%\" }}\n                    picker=\"date\"\n                    placeholder=\"Choose Date\"\n                    format=\"DD-MM-YYYY\"\n                    disabledDate={disableDateRanges({\n                      endDate: moment().format(\"YYYY-MM-DD\"),\n                      startDate: moment(props.areaParams?.start_date).format(\n                        \"YYYY-MM-DD\"\n                      ),\n                    })}\n                    disabled={\n                      props.areaParams.start_date == null ||\n                      props.areaParams.start_date == \"\"\n                        ? true\n                        : false\n                    }\n                    onChange={(date) => {\n                      props.FilterInputChangeValue({\n                        key: \"end_date\",\n                        value: date == null ? \"\" : date,\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"Country :\" name=\"country\">\n                  <Select\n                    showSearch\n                    placeholder=\"Select Country\"\n                    optionFilterProp=\"children\"\n                    // filterOption={(input, option) =>\n                    //   option.children.toLowerCase().includes(input.toLowerCase())\n                    // }\n                    onChange={(value) => {\n                      props.getMiniStates({ country: value });\n                      props.getMiniStatesClearData();\n                      props.getMiniDistrictClearData();\n                      props.getMiniCityClearData();\n                      props.FilterInputChangeValue({\n                        key: \"country\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.areaParams.country_id == null\n                        ? \"\"\n                        : props.areaParams?.country_id\n                    }\n                  >\n                    {props.miniCountryList.map((country, index) => {\n                      return (\n                        <Option key={index} value={country.id}>\n                          {country.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"State :\" name=\"state\">\n                  <Select\n                    showSearch\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select State\"\n                    optionFilterProp=\"state\"\n                    onChange={(value) => {\n                      props.getMiniDistrict({ state: value });\n                      props.getMiniDistrictClearData();\n                      props.getMiniCityClearData();\n                      props.FilterInputChangeValue({\n                        key: \"state\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.areaParams.state_id == null\n                        ? \"\"\n                        : props.areaParams?.state_id\n                    }\n                  >\n                    {props.miniStatesList.map((state, index) => {\n                      return (\n                        <Option key={index} value={state.id}>\n                          {state.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"District :\" name=\"district\">\n                  <Select\n                    showSearch\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select District\"\n                    optionFilterProp=\"district\"\n                    onChange={(value) => {\n                      props.getMiniCity({ district: value });\n                      props.getMiniCityClearData();\n                      props.FilterInputChangeValue({\n                        key: \"district\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.areaParams.district_id == null\n                        ? \"\"\n                        : props.areaParams?.district_id\n                    }\n                  >\n                    {props.miniDistrictList.map((district, index) => {\n                      return (\n                        <Option key={index} value={district.id}>\n                          {district.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item label=\"City :\" name=\"city\">\n                  <Select\n                    showSearch\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select City\"\n                    optionFilterProp=\"city\"\n                    onChange={(value) => {\n                      props.FilterInputChangeValue({\n                        key: \"city\",\n                        value: value,\n                      });\n                    }}\n                    value={\n                      props.areaParams.city_id == null\n                        ? \"\"\n                        : props.areaParams?.city_id\n                    }\n                  >\n                    {props.miniCityList.map((city, index) => {\n                      return (\n                        <Option key={index} value={city.id}>\n                          {city.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                </Form.Item>\n              </Col>\n\n              <Col span={12}>\n                <Form.Item\n                  label=\"Pincode :\"\n                  name=\"pincode\"\n                  getValueProps={() => {}}\n                  hasFeedback\n                >\n                  <NumericInput\n                    id=\"Pincode\"\n                    name=\"pincode\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Pincode\"\n                    minLength={6}\n                    maxLength={6}\n                    value={\n                      props.areaParams?.pincode == null\n                        ? \"\"\n                        : props.areaParams?.pincode\n                    }\n                    onChange={props.FilterInputChangeValue}\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={[12, 12]}>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"secondary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    clearFilter();\n                  }}\n                  htmlType=\"button\"\n                >\n                  Clear\n                </Button>\n              </Col>\n              <Col md={12}>\n                <Button\n                  block\n                  type=\"primary\"\n                  className=\"hp-submit-btn hp-mt-10\"\n                  onClick={() => {\n                    form.submit();\n                  }}\n                >\n                  Apply\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Drawer>\n      </Col>\n    </Row>\n  );\n};\n\nfunction mapStateToProps({ area, mini, }) {\n  return {\n    drawer: area.drawer,\n    areaParams: area.areaParams,\n    miniStatesList: mini.miniStatesList,\n    miniDistrictList: mini.miniDistrictList,\n    miniCityList: mini.miniCityList,\n    miniCountryList: mini.miniCountryList,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  isDrawerVisible,\n  SetAreaParams,\n  FilterInputChangeValue,\n  getAreas,\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n  getMinicountry,\n\n  getMiniStatesClearData,\n  getMiniDistrictClearData,\n  getMiniCityClearData,\n  getMinicountryClearData\n})(filter);\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Input,\n  Card,\n  Pagination,\n  Button,\n  Spin,\n  Popconfirm,\n} from \"antd\";\nimport { Table, Space } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { FilterOutlined } from \"@ant-design/icons\";\nimport MasterPageTitle from \"../../../../layout/components/content/master-page-title\";\nimport AddArea from \"./addArea\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { isMobile } from \"react-device-detect\";\nimport {\n  getAreas,\n  areaEdit,\n  areaDelete,\n  isModelVisible,\n  SetAreaParams,\n  isDrawerVisible,\n} from \"../../../../store/Masters/Area/areaSlice\";\n\nimport {\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n} from \"../../../../store/mini/miniSlice\";\nimport Filter from \"./Filters/Filter\";\n\nfunction Area(props) {\n  useEffect(() => {\n    props.getAreas({ page: 1, search: \"\", page_size: 10 });\n  }, []);\n\n  const columnClass =\n    \"hp-p1-body hp-text-color-black-50 hp-text-color-dark-0 hp-font-weight-500 \";\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"index\",\n      width: \"5%\",\n      // sorter: (a, b) => a.index - b.index,\n    },\n    {\n      title: \"Code\",\n      dataIndex: \"code\",\n      // sorter: (a, b) => a.name.length - b.name.length,\n      filterSearch: true,\n      width: \"15%\",\n    },\n    {\n      title: \"Area Name\",\n      render: (row) => <span className={columnClass}>{row.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"15%\",\n    },\n    {\n      title: \"City Name\",\n      render: (row) => <span className={columnClass}>{row.city?.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"15%\",\n    },\n\n    {\n      title: \"District Name\",\n      render: (row) => <span className={columnClass}>{row.district?.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"15%\",\n    },\n    {\n      title: \"State Name\",\n      render: (row) => <span className={columnClass}>{row.state?.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"15%\",\n    },\n    {\n      title: \"Country Name\",\n      render: (row) => <span className={columnClass}>{row.country?.name}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"15%\",\n    },\n    {\n      title: \"Pincode\",\n      render: (row) => <span className={columnClass}>{row.pincode}</span>,\n      filterMode: \"tree\",\n      filterSearch: true,\n      width: \"15%\",\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      width: \"10%\",\n      render: (row, record) => (\n        <Space size=\"middle\">\n           {props.userAccessList?.indexOf(\"Masters.change_area\") !== -1 && (\n            <i\n              className=\"ri-edit-box-line hp-mr-2 \"\n              style={{ cursor: \"pointer\", color: \"#fc6f03\" }}\n              onClick={() => {\n                props.areaEdit(row);\n                props.getMiniStates({ country: row.country.id });\n                props.getMiniDistrict({ state: row.state.id });\n                props.getMiniCity({ district: row.district.id });\n                props.isModelVisible(true);\n              }}\n            ></i>\n           )}\n           {props.userAccessList?.indexOf(\"Masters.delete_area\") !== -1 && (\n            <Popconfirm\n              placement=\"topRight\"\n              title=\"Are you sure to delete this Record?\"\n              onConfirm={() => props.areaDelete(record.id)}\n              okText=\"Yes\"\n              cancelText=\"No\"\n              className=\"hp-ml-8\"\n              icon={\n                <RiErrorWarningLine className=\"remix-icon hp-text-color-primary-1\" />\n              }\n            >\n              <i\n                className=\"ri-delete-bin-2-line \"\n                style={{ cursor: \"pointer\", color: \"#ff0000\" }}\n              ></i>\n            </Popconfirm>\n           )}\n        </Space>\n      ),\n    },\n  ];\n  const { Search } = Input;\n\n  const data = props.areaslist.map((row, key) => ({\n    ...row,\n    index: (props.areaParams.page - 1) * props.areaParams.page_size + key + 1,\n    cityname: row.city.name,\n    districtname: row.district.name,\n    statename: row.state.name,\n    countryname: row.country.name,\n  }));\n\n  function onPageChange(page, pageSize) {\n    props.SetAreaParams({\n      ...props.areaParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n    props.getAreas({\n      ...props.areaParams,\n      page_size: pageSize,\n      page: page == 0 ? 1 : page,\n    });\n  }\n\n  function onSearch(val) {\n    props.SetAreaParams({ ...props.areaParams, search: val });\n    props.getAreas({ ...props.areaParams, search: val });\n  }\n  function showTotal(total) {\n    return \"Total \" + total + \" items\";\n  }\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mt-32\">\n      <MasterPageTitle\n        pageTitle=\"Area Master\"\n        addModelTile={\n          props.userAccessList?.indexOf(\"Masters.add_area\") !== -1 &&\n          \"Add Area\"\n        }\n        goBack={true}\n        setIsModalVisible={props.isModelVisible}\n        isModalVisible={props.model}\n      />\n\n      <Col span={24}>\n        <Card>\n          <Row className=\"hp-mb-12\" gutter={[12, 12]}>\n            <Col span={24} xs={18} sm={18} md={12} lg={12} xl={12} xxl={12} >\n              <Search\n                placeholder=\"Search...\"\n                allowClear\n                onChange={(e) => {\n                  if (e.target.value == \"\") {\n                    props.getAreas({\n                      ...props.areaParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                    props.SetAreaParams({\n                      ...props.areaParams,\n                      page: 1,\n                      search: \"\",\n                    });\n                  }\n                }}\n                onSearch={(value) => {\n                  onSearch(value);\n                }}\n              />\n            </Col>\n\n            <Col span={24} xs={6} sm={6} md={4} lg={4} xl={4} xxl={4}>\n              <Button\n                onClick={() => {\n                  props.isDrawerVisible(true);\n                }}\n                className=\"hp-w-100 hp-p-10\"\n                icon={<FilterOutlined className=\"hp-mr-10\" />}\n              >\n                {!isMobile && \"Filter\"}\n              </Button>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={24}>\n              <Spin tip=\"Loading...\" spinning={props.loading} delay={500}>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  scroll={{ x: 500 }}\n                  pagination={false}\n                  size=\"middle\"\n                />\n              </Spin>\n            </Col>\n            <Col span={24}>\n              <Pagination\n                size=\"small\"\n                current={props.areaParams?.page}\n                pageSize={props.areaParams?.page_size}\n                total={props.listCount}\n                showTotal={showTotal}\n                showSizeChanger\n                onChange={onPageChange}\n                className=\"hp-mb-12 hp-mt-24 hp-float-right\"\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <AddArea />\n      <Filter />\n    </Row>\n  );\n}\n\nfunction mapAreaToProps({ area, system }) {\n  return {\n    areaslist: area.areaslist,\n    noofpages: area.noofpages,\n    listCount: area.listCount,\n    areaParams: area.areaParams,\n    loading: area.loading,\n    userAccessList: system.userAccessList,\n  };\n}\n\nexport default connect(mapAreaToProps, {\n  getAreas,\n  areaEdit,\n  areaDelete,\n  isModelVisible,\n  SetAreaParams,\n  getMiniStates,\n  getMiniDistrict,\n  getMiniCity,\n  isDrawerVisible,\n})(Area);\n"],"sourceRoot":""}